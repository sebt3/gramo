query k8sQuery($namespace: queryParameters, $LimitRange: queryParameters, $Pod: queryParameters, $PodTemplate: queryParameters, $ReplicationController: queryParameters, $ResourceQuota: queryParameters, $DaemonSet: queryParameters, $Deployment: queryParameters, $ReplicaSet: queryParameters, $StatefulSet: queryParameters, $HorizontalPodAutoscaler: queryParameters, $Job: queryParameters, $CronJob: queryParameters, $PodDisruptionBudget: queryParameters, $PriorityClass: queryParameters, $RuntimeClass: queryParameters) {
  k8sNamespace(params: $namespace) {
    metadata {
      name
    }
    k8sLimitRange(params: $LimitRange) {
      metadata {
        name
        namespace
        annotations
        labels
        creationTimestamp
        uid
      }
      spec
    }
    k8sPod(params: $Pod) {
      metadata {
        name
        namespace
        annotations
        labels
        creationTimestamp
        uid
      }
      spec
      status
      parentCluster {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        spec
        status
      }
      useNode {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        spec
        status
      }
      useServiceAccount {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        automountServiceAccountToken
        imagePullSecrets
        secrets
      }
      usePersistentVolumeClaim {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        spec
        status
      }
      useSecret {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        data
        immutable
        stringData
        type
      }
      useConfigMap {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        binaryData
        data
        immutable
      }
      usedByService {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        spec
        status
      }
    }
    k8sPodTemplate(params: $PodTemplate) {
      metadata {
        name
        namespace
        annotations
        labels
        creationTimestamp
        uid
      }
      template
      usePersistentVolumeClaim {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        spec
        status
      }
      useSecret {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        data
        immutable
        stringData
        type
      }
      useConfigMap {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        binaryData
        data
        immutable
      }
      usedByService {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        spec
        status
      }
    }
    k8sReplicationController(params: $ReplicationController) {
      metadata {
        name
        namespace
        annotations
        labels
        creationTimestamp
        uid
      }
      spec
      status
    }
    k8sResourceQuota(params: $ResourceQuota) {
      metadata {
        name
        namespace
        annotations
        labels
        creationTimestamp
        uid
      }
      spec
      status
    }
    k8sDaemonSet(params: $DaemonSet) {
      metadata {
        name
        namespace
        annotations
        labels
        creationTimestamp
        uid
      }
      spec
      status
      usePersistentVolumeClaim {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        spec
        status
      }
      useSecret {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        data
        immutable
        stringData
        type
      }
      useConfigMap {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        binaryData
        data
        immutable
      }
      usedByService {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        spec
        status
      }
    }
    k8sDeployment(params: $Deployment) {
      metadata {
        name
        namespace
        annotations
        labels
        creationTimestamp
        uid
      }
      spec
      status
      parentPooler {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        spec
        status
      }
      usePersistentVolumeClaim {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        spec
        status
      }
      useSecret {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        data
        immutable
        stringData
        type
      }
      useConfigMap {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        binaryData
        data
        immutable
      }
      usedByService {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        spec
        status
      }
    }
    k8sReplicaSet(params: $ReplicaSet) {
      metadata {
        name
        namespace
        annotations
        labels
        creationTimestamp
        uid
      }
      spec
      status
      usePersistentVolumeClaim {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        spec
        status
      }
      useSecret {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        data
        immutable
        stringData
        type
      }
      useConfigMap {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        binaryData
        data
        immutable
      }
      usedByService {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        spec
        status
      }
    }
    k8sStatefulSet(params: $StatefulSet) {
      metadata {
        name
        namespace
        annotations
        labels
        creationTimestamp
        uid
      }
      spec
      status
      parentMongoDBCommunity {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        spec
        status
      }
      parentRedis {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        spec
        status
      }
      parentPrometheus {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        spec
        status
      }
      parentAlertmanager {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        spec
        status
      }
      childPersistentVolumeClaim {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        spec
        status
      }
    }
    k8sHorizontalPodAutoscaler(params: $HorizontalPodAutoscaler) {
      metadata {
        name
        namespace
        annotations
        labels
        creationTimestamp
        uid
      }
      spec
      status
    }
    k8sJob(params: $Job) {
      metadata {
        name
        namespace
        annotations
        labels
        creationTimestamp
        uid
      }
      spec
      status
      usePersistentVolumeClaim {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        spec
        status
      }
      useSecret {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        data
        immutable
        stringData
        type
      }
      useConfigMap {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        binaryData
        data
        immutable
      }
    }
    k8sCronJob(params: $CronJob) {
      metadata {
        name
        namespace
        annotations
        labels
        creationTimestamp
        uid
      }
      spec
      status
      usePersistentVolumeClaim {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        spec
        status
      }
      useSecret {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        data
        immutable
        stringData
        type
      }
      useConfigMap {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        binaryData
        data
        immutable
      }
    }
    k8sPodDisruptionBudget(params: $PodDisruptionBudget) {
      metadata {
        name
        namespace
        annotations
        labels
        creationTimestamp
        uid
      }
      spec
      status
      parentCluster {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        spec
        status
      }
    }
  }
  k8sPriorityClass(params: $PriorityClass) {
    metadata {
      name
      annotations
      labels
      creationTimestamp
      uid
    }
    description
    globalDefault
    preemptionPolicy
    value
  }
  k8sRuntimeClass(params: $RuntimeClass) {
    metadata {
      name
      annotations
      labels
      creationTimestamp
      uid
    }
    handler
    overhead
    scheduling
  }
}
