query k8sServiceQuery($namespace: queryParameters, $obj: queryParameters,, $parentMongoDBCommunity: queryParameters, $parentRedis: queryParameters, $parentPooler: queryParameters, $parentCluster: queryParameters, $parentPrometheus: queryParameters, $parentAlertmanager: queryParameters, $childEndpointSlice: queryParameters, $usePod: queryParameters, $useReplicaSet: queryParameters, $useDeployment: queryParameters, $useDaemonSet: queryParameters, $usePodTemplate: queryParameters, $usedByIngress: queryParameters) {
  k8sNamespace(params: $namespace) {
    k8sService(params: $obj) {
      metadata {
        name
        namespace
        annotations
        labels
        creationTimestamp
        uid
      }
      parentMongoDBCommunity(params: $parentMongoDBCommunity) {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        spec
        status
      }
      parentRedis(params: $parentRedis) {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        spec
        status
      }
      parentPooler(params: $parentPooler) {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        spec
        status
      }
      parentCluster(params: $parentCluster) {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        spec
        status
      }
      parentPrometheus(params: $parentPrometheus) {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        spec
        status
      }
      parentAlertmanager(params: $parentAlertmanager) {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        spec
        status
      }
      childEndpointSlice(params: $childEndpointSlice) {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        addressType
        endpoints
        ports
      }
      usePod(params: $usePod) {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        spec
        status
      }
      useReplicaSet(params: $useReplicaSet) {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        spec
        status
      }
      useDeployment(params: $useDeployment) {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        spec
        status
      }
      useDaemonSet(params: $useDaemonSet) {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        spec
        status
      }
      usePodTemplate(params: $usePodTemplate) {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        template
      }
      usedByIngress(params: $usedByIngress) {
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        spec
        status
      }
      spec
      status
    }
  }
}
