
query MariadbRestores($namespace: String!) {
 namespace(name: $namespace) {
  mariadbRestores {
    metadata {
      annotations {
        name
        value
      }
      labels {
        name
        value
      }
      name
      namespace
    }
    affinity {
      nodeAffinity {
        preferredDuringSchedulingIgnoredDuringExecution {
          preference {
            matchExpressions {
              key
              operator
              values
            }
            matchFields {
              key
              operator
              values
            }
          }
          weight
        }
        requiredDuringSchedulingIgnoredDuringExecution {
          nodeSelectorTerms {
            matchExpressions {
              key
              operator
              values
            }
            matchFields {
              key
              operator
              values
            }
          }
        }
      }
      podAffinity {
        preferredDuringSchedulingIgnoredDuringExecution {
          podAffinityTerm {
            labelSelector {
              matchExpressions {
                key
                operator
                values
              }
            }
            namespaceSelector {
              matchExpressions {
                key
                operator
                values
              }
            }
            namespaces
            topologyKey
          }
          weight
        }
        requiredDuringSchedulingIgnoredDuringExecution {
          labelSelector {
            matchExpressions {
              key
              operator
              values
            }
          }
          namespaceSelector {
            matchExpressions {
              key
              operator
              values
            }
          }
          namespaces
          topologyKey
        }
      }
      podAntiAffinity {
        preferredDuringSchedulingIgnoredDuringExecution {
          podAffinityTerm {
            labelSelector {
              matchExpressions {
                key
                operator
                values
              }
            }
            namespaceSelector {
              matchExpressions {
                key
                operator
                values
              }
            }
            namespaces
            topologyKey
          }
          weight
        }
        requiredDuringSchedulingIgnoredDuringExecution {
          labelSelector {
            matchExpressions {
              key
              operator
              values
            }
          }
          namespaceSelector {
            matchExpressions {
              key
              operator
              values
            }
          }
          namespaces
          topologyKey
        }
      }
    }
    backoffLimit
    backupRef {
      name
    }
    fileName
    mariaDbRef {
      apiVersion
      fieldPath
      kind
      name
      namespace
      resourceVersion
      uid
      waitForIt
    }
    resources {
      claims {
        name
      }
    }
    restartPolicy
    tolerations {
      effect
      key
      operator
      tolerationSeconds
      value
    }
    volume {
      awsElasticBlockStore {
        fsType
        partition
        readOnly
        volumeID
      }
      azureDisk {
        cachingMode
        diskName
        diskURI
        fsType
        kind
        readOnly
      }
      azureFile {
        readOnly
        secretName
        shareName
      }
      cephfs {
        monitors
        path
        readOnly
        secretFile
        secretRef {
          name
        }
        user
      }
      cinder {
        fsType
        readOnly
        secretRef {
          name
        }
        volumeID
      }
      configMap {
        defaultMode
        items {
          key
          mode
          path
        }
        name
        optional
      }
      csi {
        driver
        fsType
        nodePublishSecretRef {
          name
        }
        readOnly
      }
      downwardAPI {
        defaultMode
        items {
          fieldRef {
            apiVersion
            fieldPath
          }
          mode
          path
          resourceFieldRef {
            containerName
            resource
          }
        }
      }
      emptyDir {
        medium
      }
      ephemeral {
        volumeClaimTemplate {
          spec {
            accessModes
            dataSource {
              apiGroup
              kind
              name
            }
            dataSourceRef {
              apiGroup
              kind
              name
              namespace
            }
            resources {
              claims {
                name
              }
            }
            selector {
              matchExpressions {
                key
                operator
                values
              }
            }
            storageClassName
            volumeMode
            volumeName
          }
        }
      }
      fc {
        fsType
        lun
        readOnly
        targetWWNs
        wwids
      }
      flexVolume {
        driver
        fsType
        readOnly
        secretRef {
          name
        }
      }
      flocker {
        datasetName
        datasetUUID
      }
      gcePersistentDisk {
        fsType
        partition
        pdName
        readOnly
      }
      gitRepo {
        directory
        repository
        revision
      }
      glusterfs {
        endpoints
        path
        readOnly
      }
      hostPath {
        path
        type
      }
      iscsi {
        chapAuthDiscovery
        chapAuthSession
        fsType
        initiatorName
        iqn
        iscsiInterface
        lun
        portals
        readOnly
        secretRef {
          name
        }
        targetPortal
      }
      nfs {
        path
        readOnly
        server
      }
      persistentVolumeClaim {
        claimName
        readOnly
      }
      photonPersistentDisk {
        fsType
        pdID
      }
      portworxVolume {
        fsType
        readOnly
        volumeID
      }
      projected {
        defaultMode
        sources {
          configMap {
            items {
              key
              mode
              path
            }
            name
            optional
          }
          downwardAPI {
            items {
              fieldRef {
                apiVersion
                fieldPath
              }
              mode
              path
              resourceFieldRef {
                containerName
                resource
              }
            }
          }
          secret {
            items {
              key
              mode
              path
            }
            name
            optional
          }
          serviceAccountToken {
            audience
            expirationSeconds
            path
          }
        }
      }
      quobyte {
        group
        readOnly
        registry
        tenant
        user
        volume
      }
      rbd {
        fsType
        image
        keyring
        monitors
        pool
        readOnly
        secretRef {
          name
        }
        user
      }
      scaleIO {
        fsType
        gateway
        protectionDomain
        readOnly
        secretRef {
          name
        }
        sslEnabled
        storageMode
        storagePool
        system
        volumeName
      }
      secret {
        defaultMode
        items {
          key
          mode
          path
        }
        optional
        secretName
      }
      storageos {
        fsType
        readOnly
        secretRef {
          name
        }
        volumeName
        volumeNamespace
      }
      vsphereVolume {
        fsType
        storagePolicyID
        storagePolicyName
        volumePath
      }
    }
    status {
      conditions {
        lastTransitionTime
        message
        observedGeneration
        reason
        status
        type
      }
    }
  }
 }
}
