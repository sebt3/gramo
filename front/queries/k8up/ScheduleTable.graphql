
query K8upSchedules($namespace: String!) {
 namespace(name: $namespace) {
  k8upSchedules {
    metadata {
      annotations {
        name
        value
      }
      labels {
        name
        value
      }
      name
      namespace
    }
    archive {
      activeDeadlineSeconds
      backend {
        azure {
          accountKeySecretRef {
            key
            name
            optional
          }
          accountNameSecretRef {
            key
            name
            optional
          }
          container
        }
        b2 {
          accountIDSecretRef {
            key
            name
            optional
          }
          accountKeySecretRef {
            key
            name
            optional
          }
          bucket
          path
        }
        envFrom {
          configMapRef {
            name
            optional
          }
          prefix
          secretRef {
            name
            optional
          }
        }
        gcs {
          accessTokenSecretRef {
            key
            name
            optional
          }
          bucket
          projectIDSecretRef {
            key
            name
            optional
          }
        }
        local {
          mountPath
        }
        repoPasswordSecretRef {
          key
          name
          optional
        }
        rest {
          passwordSecretReg {
            key
            name
            optional
          }
          url
          userSecretRef {
            key
            name
            optional
          }
        }
        s3 {
          accessKeyIDSecretRef {
            key
            name
            optional
          }
          bucket
          endpoint
          secretAccessKeySecretRef {
            key
            name
            optional
          }
        }
        swift {
          container
          path
        }
      }
      concurrentRunsAllowed
      failedJobsHistoryLimit
      keepJobs
      podSecurityContext {
        fsGroup
        fsGroupChangePolicy
        runAsGroup
        runAsNonRoot
        runAsUser
        seLinuxOptions {
          level
          role
          type
          user
        }
        seccompProfile {
          localhostProfile
          type
        }
        supplementalGroups
        sysctls {
          name
          value
        }
        windowsOptions {
          gmsaCredentialSpec
          gmsaCredentialSpecName
          hostProcess
          runAsUserName
        }
      }
      restoreFilter
      restoreMethod {
        folder {
          claimName
          readOnly
        }
        s3 {
          accessKeyIDSecretRef {
            key
            name
            optional
          }
          bucket
          endpoint
          secretAccessKeySecretRef {
            key
            name
            optional
          }
        }
      }
      schedule
      snapshot
      successfulJobsHistoryLimit
      tags
    }
    backend {
      azure {
        accountKeySecretRef {
          key
          name
          optional
        }
        accountNameSecretRef {
          key
          name
          optional
        }
        container
      }
      b2 {
        accountIDSecretRef {
          key
          name
          optional
        }
        accountKeySecretRef {
          key
          name
          optional
        }
        bucket
        path
      }
      envFrom {
        configMapRef {
          name
          optional
        }
        prefix
        secretRef {
          name
          optional
        }
      }
      gcs {
        accessTokenSecretRef {
          key
          name
          optional
        }
        bucket
        projectIDSecretRef {
          key
          name
          optional
        }
      }
      local {
        mountPath
      }
      repoPasswordSecretRef {
        key
        name
        optional
      }
      rest {
        passwordSecretReg {
          key
          name
          optional
        }
        url
        userSecretRef {
          key
          name
          optional
        }
      }
      s3 {
        accessKeyIDSecretRef {
          key
          name
          optional
        }
        bucket
        endpoint
        secretAccessKeySecretRef {
          key
          name
          optional
        }
      }
      swift {
        container
        path
      }
    }
    backup {
      activeDeadlineSeconds
      backend {
        azure {
          accountKeySecretRef {
            key
            name
            optional
          }
          accountNameSecretRef {
            key
            name
            optional
          }
          container
        }
        b2 {
          accountIDSecretRef {
            key
            name
            optional
          }
          accountKeySecretRef {
            key
            name
            optional
          }
          bucket
          path
        }
        envFrom {
          configMapRef {
            name
            optional
          }
          prefix
          secretRef {
            name
            optional
          }
        }
        gcs {
          accessTokenSecretRef {
            key
            name
            optional
          }
          bucket
          projectIDSecretRef {
            key
            name
            optional
          }
        }
        local {
          mountPath
        }
        repoPasswordSecretRef {
          key
          name
          optional
        }
        rest {
          passwordSecretReg {
            key
            name
            optional
          }
          url
          userSecretRef {
            key
            name
            optional
          }
        }
        s3 {
          accessKeyIDSecretRef {
            key
            name
            optional
          }
          bucket
          endpoint
          secretAccessKeySecretRef {
            key
            name
            optional
          }
        }
        swift {
          container
          path
        }
      }
      concurrentRunsAllowed
      failedJobsHistoryLimit
      keepJobs
      podSecurityContext {
        fsGroup
        fsGroupChangePolicy
        runAsGroup
        runAsNonRoot
        runAsUser
        seLinuxOptions {
          level
          role
          type
          user
        }
        seccompProfile {
          localhostProfile
          type
        }
        supplementalGroups
        sysctls {
          name
          value
        }
        windowsOptions {
          gmsaCredentialSpec
          gmsaCredentialSpecName
          hostProcess
          runAsUserName
        }
      }
      promURL
      schedule
      statsURL
      successfulJobsHistoryLimit
      tags
    }
    check {
      activeDeadlineSeconds
      backend {
        azure {
          accountKeySecretRef {
            key
            name
            optional
          }
          accountNameSecretRef {
            key
            name
            optional
          }
          container
        }
        b2 {
          accountIDSecretRef {
            key
            name
            optional
          }
          accountKeySecretRef {
            key
            name
            optional
          }
          bucket
          path
        }
        envFrom {
          configMapRef {
            name
            optional
          }
          prefix
          secretRef {
            name
            optional
          }
        }
        gcs {
          accessTokenSecretRef {
            key
            name
            optional
          }
          bucket
          projectIDSecretRef {
            key
            name
            optional
          }
        }
        local {
          mountPath
        }
        repoPasswordSecretRef {
          key
          name
          optional
        }
        rest {
          passwordSecretReg {
            key
            name
            optional
          }
          url
          userSecretRef {
            key
            name
            optional
          }
        }
        s3 {
          accessKeyIDSecretRef {
            key
            name
            optional
          }
          bucket
          endpoint
          secretAccessKeySecretRef {
            key
            name
            optional
          }
        }
        swift {
          container
          path
        }
      }
      concurrentRunsAllowed
      failedJobsHistoryLimit
      keepJobs
      podSecurityContext {
        fsGroup
        fsGroupChangePolicy
        runAsGroup
        runAsNonRoot
        runAsUser
        seLinuxOptions {
          level
          role
          type
          user
        }
        seccompProfile {
          localhostProfile
          type
        }
        supplementalGroups
        sysctls {
          name
          value
        }
        windowsOptions {
          gmsaCredentialSpec
          gmsaCredentialSpecName
          hostProcess
          runAsUserName
        }
      }
      promURL
      schedule
      successfulJobsHistoryLimit
    }
    failedJobsHistoryLimit
    keepJobs
    podSecurityContext {
      fsGroup
      fsGroupChangePolicy
      runAsGroup
      runAsNonRoot
      runAsUser
      seLinuxOptions {
        level
        role
        type
        user
      }
      seccompProfile {
        localhostProfile
        type
      }
      supplementalGroups
      sysctls {
        name
        value
      }
      windowsOptions {
        gmsaCredentialSpec
        gmsaCredentialSpecName
        hostProcess
        runAsUserName
      }
    }
    prune {
      activeDeadlineSeconds
      backend {
        azure {
          accountKeySecretRef {
            key
            name
            optional
          }
          accountNameSecretRef {
            key
            name
            optional
          }
          container
        }
        b2 {
          accountIDSecretRef {
            key
            name
            optional
          }
          accountKeySecretRef {
            key
            name
            optional
          }
          bucket
          path
        }
        envFrom {
          configMapRef {
            name
            optional
          }
          prefix
          secretRef {
            name
            optional
          }
        }
        gcs {
          accessTokenSecretRef {
            key
            name
            optional
          }
          bucket
          projectIDSecretRef {
            key
            name
            optional
          }
        }
        local {
          mountPath
        }
        repoPasswordSecretRef {
          key
          name
          optional
        }
        rest {
          passwordSecretReg {
            key
            name
            optional
          }
          url
          userSecretRef {
            key
            name
            optional
          }
        }
        s3 {
          accessKeyIDSecretRef {
            key
            name
            optional
          }
          bucket
          endpoint
          secretAccessKeySecretRef {
            key
            name
            optional
          }
        }
        swift {
          container
          path
        }
      }
      concurrentRunsAllowed
      failedJobsHistoryLimit
      keepJobs
      podSecurityContext {
        fsGroup
        fsGroupChangePolicy
        runAsGroup
        runAsNonRoot
        runAsUser
        seLinuxOptions {
          level
          role
          type
          user
        }
        seccompProfile {
          localhostProfile
          type
        }
        supplementalGroups
        sysctls {
          name
          value
        }
        windowsOptions {
          gmsaCredentialSpec
          gmsaCredentialSpecName
          hostProcess
          runAsUserName
        }
      }
      retention {
        hostnames
        keepDaily
        keepHourly
        keepLast
        keepMonthly
        keepTags
        keepWeekly
        keepYearly
        tags
      }
      schedule
      successfulJobsHistoryLimit
    }
    restore {
      activeDeadlineSeconds
      backend {
        azure {
          accountKeySecretRef {
            key
            name
            optional
          }
          accountNameSecretRef {
            key
            name
            optional
          }
          container
        }
        b2 {
          accountIDSecretRef {
            key
            name
            optional
          }
          accountKeySecretRef {
            key
            name
            optional
          }
          bucket
          path
        }
        envFrom {
          configMapRef {
            name
            optional
          }
          prefix
          secretRef {
            name
            optional
          }
        }
        gcs {
          accessTokenSecretRef {
            key
            name
            optional
          }
          bucket
          projectIDSecretRef {
            key
            name
            optional
          }
        }
        local {
          mountPath
        }
        repoPasswordSecretRef {
          key
          name
          optional
        }
        rest {
          passwordSecretReg {
            key
            name
            optional
          }
          url
          userSecretRef {
            key
            name
            optional
          }
        }
        s3 {
          accessKeyIDSecretRef {
            key
            name
            optional
          }
          bucket
          endpoint
          secretAccessKeySecretRef {
            key
            name
            optional
          }
        }
        swift {
          container
          path
        }
      }
      concurrentRunsAllowed
      failedJobsHistoryLimit
      keepJobs
      podSecurityContext {
        fsGroup
        fsGroupChangePolicy
        runAsGroup
        runAsNonRoot
        runAsUser
        seLinuxOptions {
          level
          role
          type
          user
        }
        seccompProfile {
          localhostProfile
          type
        }
        supplementalGroups
        sysctls {
          name
          value
        }
        windowsOptions {
          gmsaCredentialSpec
          gmsaCredentialSpecName
          hostProcess
          runAsUserName
        }
      }
      restoreFilter
      restoreMethod {
        folder {
          claimName
          readOnly
        }
        s3 {
          accessKeyIDSecretRef {
            key
            name
            optional
          }
          bucket
          endpoint
          secretAccessKeySecretRef {
            key
            name
            optional
          }
        }
      }
      schedule
      snapshot
      successfulJobsHistoryLimit
      tags
    }
    successfulJobsHistoryLimit
    status {
      conditions {
        lastTransitionTime
        message
        observedGeneration
        reason
        status
        type
      }
      effectiveSchedules {
        generatedSchedule
        jobType
      }
    }
  }
 }
}
