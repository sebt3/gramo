import {kc, k8s, getMetadata} from '../core/libs.js';
import { ProjectcalicoFelixConfigurationList, ProjectcalicoFelixConfiguration } from './type.FelixConfiguration.js';
const customApi = kc.makeApiClient(k8s.CustomObjectsApi);
export const lists = {
    projectcalicoFelixConfigurations: async () => {
        try {
            const res = await customApi.listClusterCustomObject('crd.projectcalico.org','v1','felixconfigurations')
            const resList = res.body as ProjectcalicoFelixConfigurationList
            return resList.items.map((ext)=>{return{
                metadata: getMetadata(ext.metadata),
                "allowIPIPPacketsFromWorkloads": ext.spec['allowIPIPPacketsFromWorkloads'],
                "allowVXLANPacketsFromWorkloads": ext.spec['allowVXLANPacketsFromWorkloads'],
                "awsSrcDstCheck": ext.spec['awsSrcDstCheck'],
                "bpfConnectTimeLoadBalancingEnabled": ext.spec['bpfConnectTimeLoadBalancingEnabled'],
                "bpfDataIfacePattern": ext.spec['bpfDataIfacePattern'],
                "bpfDisableUnprivileged": ext.spec['bpfDisableUnprivileged'],
                "bpfEnabled": ext.spec['bpfEnabled'],
                "bpfEnforceRPF": ext.spec['bpfEnforceRPF'],
                "bpfExtToServiceConnmark": ext.spec['bpfExtToServiceConnmark'],
                "bpfExternalServiceMode": ext.spec['bpfExternalServiceMode'],
                "bpfHostConntrackBypass": ext.spec['bpfHostConntrackBypass'],
                "bpfKubeProxyEndpointSlicesEnabled": ext.spec['bpfKubeProxyEndpointSlicesEnabled'],
                "bpfKubeProxyIptablesCleanupEnabled": ext.spec['bpfKubeProxyIptablesCleanupEnabled'],
                "bpfKubeProxyMinSyncPeriod": ext.spec['bpfKubeProxyMinSyncPeriod'],
                "bpfL3IfacePattern": ext.spec['bpfL3IfacePattern'],
                "bpfLogLevel": ext.spec['bpfLogLevel'],
                "bpfMapSizeConntrack": ext.spec['bpfMapSizeConntrack'],
                "bpfMapSizeIPSets": ext.spec['bpfMapSizeIPSets'],
                "bpfMapSizeIfState": ext.spec['bpfMapSizeIfState'],
                "bpfMapSizeNATAffinity": ext.spec['bpfMapSizeNATAffinity'],
                "bpfMapSizeNATBackend": ext.spec['bpfMapSizeNATBackend'],
                "bpfMapSizeNATFrontend": ext.spec['bpfMapSizeNATFrontend'],
                "bpfMapSizeRoute": ext.spec['bpfMapSizeRoute'],
                "bpfPSNATPorts": ext.spec['bpfPSNATPorts'],
                "bpfPolicyDebugEnabled": ext.spec['bpfPolicyDebugEnabled'],
                "chainInsertMode": ext.spec['chainInsertMode'],
                "dataplaneDriver": ext.spec['dataplaneDriver'],
                "dataplaneWatchdogTimeout": ext.spec['dataplaneWatchdogTimeout'],
                "debugDisableLogDropping": ext.spec['debugDisableLogDropping'],
                "debugMemoryProfilePath": ext.spec['debugMemoryProfilePath'],
                "debugSimulateCalcGraphHangAfter": ext.spec['debugSimulateCalcGraphHangAfter'],
                "debugSimulateDataplaneHangAfter": ext.spec['debugSimulateDataplaneHangAfter'],
                "defaultEndpointToHostAction": ext.spec['defaultEndpointToHostAction'],
                "deviceRouteProtocol": ext.spec['deviceRouteProtocol'],
                "deviceRouteSourceAddress": ext.spec['deviceRouteSourceAddress'],
                "deviceRouteSourceAddressIPv6": ext.spec['deviceRouteSourceAddressIPv6'],
                "disableConntrackInvalidCheck": ext.spec['disableConntrackInvalidCheck'],
                "endpointReportingDelay": ext.spec['endpointReportingDelay'],
                "endpointReportingEnabled": ext.spec['endpointReportingEnabled'],
                "externalNodesList": ext.spec['externalNodesList'],
                "failsafeInboundHostPorts": ext.spec['failsafeInboundHostPorts'],
                "failsafeOutboundHostPorts": ext.spec['failsafeOutboundHostPorts'],
                "featureDetectOverride": ext.spec['featureDetectOverride'],
                "featureGates": ext.spec['featureGates'],
                "floatingIPs": ext.spec['floatingIPs'],
                "genericXDPEnabled": ext.spec['genericXDPEnabled'],
                "healthEnabled": ext.spec['healthEnabled'],
                "healthHost": ext.spec['healthHost'],
                "healthPort": ext.spec['healthPort'],
                "healthTimeoutOverrides": ext.spec['healthTimeoutOverrides'],
                "interfaceExclude": ext.spec['interfaceExclude'],
                "interfacePrefix": ext.spec['interfacePrefix'],
                "interfaceRefreshInterval": ext.spec['interfaceRefreshInterval'],
                "ipipEnabled": ext.spec['ipipEnabled'],
                "ipipMTU": ext.spec['ipipMTU'],
                "ipsetsRefreshInterval": ext.spec['ipsetsRefreshInterval'],
                "iptablesBackend": ext.spec['iptablesBackend'],
                "iptablesFilterAllowAction": ext.spec['iptablesFilterAllowAction'],
                "iptablesLockFilePath": ext.spec['iptablesLockFilePath'],
                "iptablesLockProbeInterval": ext.spec['iptablesLockProbeInterval'],
                "iptablesLockTimeout": ext.spec['iptablesLockTimeout'],
                "iptablesMangleAllowAction": ext.spec['iptablesMangleAllowAction'],
                "iptablesMarkMask": ext.spec['iptablesMarkMask'],
                "iptablesNATOutgoingInterfaceFilter": ext.spec['iptablesNATOutgoingInterfaceFilter'],
                "iptablesPostWriteCheckInterval": ext.spec['iptablesPostWriteCheckInterval'],
                "iptablesRefreshInterval": ext.spec['iptablesRefreshInterval'],
                "ipv6Support": ext.spec['ipv6Support'],
                "kubeNodePortRanges": ext.spec['kubeNodePortRanges'],
                "logDebugFilenameRegex": ext.spec['logDebugFilenameRegex'],
                "logFilePath": ext.spec['logFilePath'],
                "logPrefix": ext.spec['logPrefix'],
                "logSeverityFile": ext.spec['logSeverityFile'],
                "logSeverityScreen": ext.spec['logSeverityScreen'],
                "logSeveritySys": ext.spec['logSeveritySys'],
                "maxIpsetSize": ext.spec['maxIpsetSize'],
                "metadataAddr": ext.spec['metadataAddr'],
                "metadataPort": ext.spec['metadataPort'],
                "mtuIfacePattern": ext.spec['mtuIfacePattern'],
                "natOutgoingAddress": ext.spec['natOutgoingAddress'],
                "natPortRange": ext.spec['natPortRange'],
                "netlinkTimeout": ext.spec['netlinkTimeout'],
                "openstackRegion": ext.spec['openstackRegion'],
                "policySyncPathPrefix": ext.spec['policySyncPathPrefix'],
                "prometheusGoMetricsEnabled": ext.spec['prometheusGoMetricsEnabled'],
                "prometheusMetricsEnabled": ext.spec['prometheusMetricsEnabled'],
                "prometheusMetricsHost": ext.spec['prometheusMetricsHost'],
                "prometheusMetricsPort": ext.spec['prometheusMetricsPort'],
                "prometheusProcessMetricsEnabled": ext.spec['prometheusProcessMetricsEnabled'],
                "prometheusWireGuardMetricsEnabled": ext.spec['prometheusWireGuardMetricsEnabled'],
                "removeExternalRoutes": ext.spec['removeExternalRoutes'],
                "reportingInterval": ext.spec['reportingInterval'],
                "reportingTTL": ext.spec['reportingTTL'],
                "routeRefreshInterval": ext.spec['routeRefreshInterval'],
                "routeSource": ext.spec['routeSource'],
                "routeSyncDisabled": ext.spec['routeSyncDisabled'],
                "routeTableRange": ext.spec['routeTableRange'],
                "routeTableRanges": ext.spec['routeTableRanges'],
                "serviceLoopPrevention": ext.spec['serviceLoopPrevention'],
                "sidecarAccelerationEnabled": ext.spec['sidecarAccelerationEnabled'],
                "usageReportingEnabled": ext.spec['usageReportingEnabled'],
                "usageReportingInitialDelay": ext.spec['usageReportingInitialDelay'],
                "usageReportingInterval": ext.spec['usageReportingInterval'],
                "useInternalDataplaneDriver": ext.spec['useInternalDataplaneDriver'],
                "vxlanEnabled": ext.spec['vxlanEnabled'],
                "vxlanMTU": ext.spec['vxlanMTU'],
                "vxlanMTUV6": ext.spec['vxlanMTUV6'],
                "vxlanPort": ext.spec['vxlanPort'],
                "vxlanVNI": ext.spec['vxlanVNI'],
                "wireguardEnabled": ext.spec['wireguardEnabled'],
                "wireguardEnabledV6": ext.spec['wireguardEnabledV6'],
                "wireguardHostEncryptionEnabled": ext.spec['wireguardHostEncryptionEnabled'],
                "wireguardInterfaceName": ext.spec['wireguardInterfaceName'],
                "wireguardInterfaceNameV6": ext.spec['wireguardInterfaceNameV6'],
                "wireguardKeepAlive": ext.spec['wireguardKeepAlive'],
                "wireguardListeningPort": ext.spec['wireguardListeningPort'],
                "wireguardListeningPortV6": ext.spec['wireguardListeningPortV6'],
                "wireguardMTU": ext.spec['wireguardMTU'],
                "wireguardMTUV6": ext.spec['wireguardMTUV6'],
                "wireguardRoutingRulePriority": ext.spec['wireguardRoutingRulePriority'],
                "workloadSourceSpoofing": ext.spec['workloadSourceSpoofing'],
                "xdpEnabled": ext.spec['xdpEnabled'],
                "xdpRefreshInterval": ext.spec['xdpRefreshInterval'],
            }})
        } catch (err) {
          console.error((err as object)['body']);
        }
        return []
    }
};
export const queries = {
    projectcalicoFelixConfigurations: lists.projectcalicoFelixConfigurations,
    projectcalicoFelixConfiguration: async (_parent, args: object) => {
        try {
            const res = await customApi.getClusterCustomObject('crd.projectcalico.org','v1','felixconfigurations', args['name'])
            const ext = res.body as ProjectcalicoFelixConfiguration
            return {
                metadata: getMetadata(ext.metadata),
                "allowIPIPPacketsFromWorkloads": ext.spec['allowIPIPPacketsFromWorkloads'],
                "allowVXLANPacketsFromWorkloads": ext.spec['allowVXLANPacketsFromWorkloads'],
                "awsSrcDstCheck": ext.spec['awsSrcDstCheck'],
                "bpfConnectTimeLoadBalancingEnabled": ext.spec['bpfConnectTimeLoadBalancingEnabled'],
                "bpfDataIfacePattern": ext.spec['bpfDataIfacePattern'],
                "bpfDisableUnprivileged": ext.spec['bpfDisableUnprivileged'],
                "bpfEnabled": ext.spec['bpfEnabled'],
                "bpfEnforceRPF": ext.spec['bpfEnforceRPF'],
                "bpfExtToServiceConnmark": ext.spec['bpfExtToServiceConnmark'],
                "bpfExternalServiceMode": ext.spec['bpfExternalServiceMode'],
                "bpfHostConntrackBypass": ext.spec['bpfHostConntrackBypass'],
                "bpfKubeProxyEndpointSlicesEnabled": ext.spec['bpfKubeProxyEndpointSlicesEnabled'],
                "bpfKubeProxyIptablesCleanupEnabled": ext.spec['bpfKubeProxyIptablesCleanupEnabled'],
                "bpfKubeProxyMinSyncPeriod": ext.spec['bpfKubeProxyMinSyncPeriod'],
                "bpfL3IfacePattern": ext.spec['bpfL3IfacePattern'],
                "bpfLogLevel": ext.spec['bpfLogLevel'],
                "bpfMapSizeConntrack": ext.spec['bpfMapSizeConntrack'],
                "bpfMapSizeIPSets": ext.spec['bpfMapSizeIPSets'],
                "bpfMapSizeIfState": ext.spec['bpfMapSizeIfState'],
                "bpfMapSizeNATAffinity": ext.spec['bpfMapSizeNATAffinity'],
                "bpfMapSizeNATBackend": ext.spec['bpfMapSizeNATBackend'],
                "bpfMapSizeNATFrontend": ext.spec['bpfMapSizeNATFrontend'],
                "bpfMapSizeRoute": ext.spec['bpfMapSizeRoute'],
                "bpfPSNATPorts": ext.spec['bpfPSNATPorts'],
                "bpfPolicyDebugEnabled": ext.spec['bpfPolicyDebugEnabled'],
                "chainInsertMode": ext.spec['chainInsertMode'],
                "dataplaneDriver": ext.spec['dataplaneDriver'],
                "dataplaneWatchdogTimeout": ext.spec['dataplaneWatchdogTimeout'],
                "debugDisableLogDropping": ext.spec['debugDisableLogDropping'],
                "debugMemoryProfilePath": ext.spec['debugMemoryProfilePath'],
                "debugSimulateCalcGraphHangAfter": ext.spec['debugSimulateCalcGraphHangAfter'],
                "debugSimulateDataplaneHangAfter": ext.spec['debugSimulateDataplaneHangAfter'],
                "defaultEndpointToHostAction": ext.spec['defaultEndpointToHostAction'],
                "deviceRouteProtocol": ext.spec['deviceRouteProtocol'],
                "deviceRouteSourceAddress": ext.spec['deviceRouteSourceAddress'],
                "deviceRouteSourceAddressIPv6": ext.spec['deviceRouteSourceAddressIPv6'],
                "disableConntrackInvalidCheck": ext.spec['disableConntrackInvalidCheck'],
                "endpointReportingDelay": ext.spec['endpointReportingDelay'],
                "endpointReportingEnabled": ext.spec['endpointReportingEnabled'],
                "externalNodesList": ext.spec['externalNodesList'],
                "failsafeInboundHostPorts": ext.spec['failsafeInboundHostPorts'],
                "failsafeOutboundHostPorts": ext.spec['failsafeOutboundHostPorts'],
                "featureDetectOverride": ext.spec['featureDetectOverride'],
                "featureGates": ext.spec['featureGates'],
                "floatingIPs": ext.spec['floatingIPs'],
                "genericXDPEnabled": ext.spec['genericXDPEnabled'],
                "healthEnabled": ext.spec['healthEnabled'],
                "healthHost": ext.spec['healthHost'],
                "healthPort": ext.spec['healthPort'],
                "healthTimeoutOverrides": ext.spec['healthTimeoutOverrides'],
                "interfaceExclude": ext.spec['interfaceExclude'],
                "interfacePrefix": ext.spec['interfacePrefix'],
                "interfaceRefreshInterval": ext.spec['interfaceRefreshInterval'],
                "ipipEnabled": ext.spec['ipipEnabled'],
                "ipipMTU": ext.spec['ipipMTU'],
                "ipsetsRefreshInterval": ext.spec['ipsetsRefreshInterval'],
                "iptablesBackend": ext.spec['iptablesBackend'],
                "iptablesFilterAllowAction": ext.spec['iptablesFilterAllowAction'],
                "iptablesLockFilePath": ext.spec['iptablesLockFilePath'],
                "iptablesLockProbeInterval": ext.spec['iptablesLockProbeInterval'],
                "iptablesLockTimeout": ext.spec['iptablesLockTimeout'],
                "iptablesMangleAllowAction": ext.spec['iptablesMangleAllowAction'],
                "iptablesMarkMask": ext.spec['iptablesMarkMask'],
                "iptablesNATOutgoingInterfaceFilter": ext.spec['iptablesNATOutgoingInterfaceFilter'],
                "iptablesPostWriteCheckInterval": ext.spec['iptablesPostWriteCheckInterval'],
                "iptablesRefreshInterval": ext.spec['iptablesRefreshInterval'],
                "ipv6Support": ext.spec['ipv6Support'],
                "kubeNodePortRanges": ext.spec['kubeNodePortRanges'],
                "logDebugFilenameRegex": ext.spec['logDebugFilenameRegex'],
                "logFilePath": ext.spec['logFilePath'],
                "logPrefix": ext.spec['logPrefix'],
                "logSeverityFile": ext.spec['logSeverityFile'],
                "logSeverityScreen": ext.spec['logSeverityScreen'],
                "logSeveritySys": ext.spec['logSeveritySys'],
                "maxIpsetSize": ext.spec['maxIpsetSize'],
                "metadataAddr": ext.spec['metadataAddr'],
                "metadataPort": ext.spec['metadataPort'],
                "mtuIfacePattern": ext.spec['mtuIfacePattern'],
                "natOutgoingAddress": ext.spec['natOutgoingAddress'],
                "natPortRange": ext.spec['natPortRange'],
                "netlinkTimeout": ext.spec['netlinkTimeout'],
                "openstackRegion": ext.spec['openstackRegion'],
                "policySyncPathPrefix": ext.spec['policySyncPathPrefix'],
                "prometheusGoMetricsEnabled": ext.spec['prometheusGoMetricsEnabled'],
                "prometheusMetricsEnabled": ext.spec['prometheusMetricsEnabled'],
                "prometheusMetricsHost": ext.spec['prometheusMetricsHost'],
                "prometheusMetricsPort": ext.spec['prometheusMetricsPort'],
                "prometheusProcessMetricsEnabled": ext.spec['prometheusProcessMetricsEnabled'],
                "prometheusWireGuardMetricsEnabled": ext.spec['prometheusWireGuardMetricsEnabled'],
                "removeExternalRoutes": ext.spec['removeExternalRoutes'],
                "reportingInterval": ext.spec['reportingInterval'],
                "reportingTTL": ext.spec['reportingTTL'],
                "routeRefreshInterval": ext.spec['routeRefreshInterval'],
                "routeSource": ext.spec['routeSource'],
                "routeSyncDisabled": ext.spec['routeSyncDisabled'],
                "routeTableRange": ext.spec['routeTableRange'],
                "routeTableRanges": ext.spec['routeTableRanges'],
                "serviceLoopPrevention": ext.spec['serviceLoopPrevention'],
                "sidecarAccelerationEnabled": ext.spec['sidecarAccelerationEnabled'],
                "usageReportingEnabled": ext.spec['usageReportingEnabled'],
                "usageReportingInitialDelay": ext.spec['usageReportingInitialDelay'],
                "usageReportingInterval": ext.spec['usageReportingInterval'],
                "useInternalDataplaneDriver": ext.spec['useInternalDataplaneDriver'],
                "vxlanEnabled": ext.spec['vxlanEnabled'],
                "vxlanMTU": ext.spec['vxlanMTU'],
                "vxlanMTUV6": ext.spec['vxlanMTUV6'],
                "vxlanPort": ext.spec['vxlanPort'],
                "vxlanVNI": ext.spec['vxlanVNI'],
                "wireguardEnabled": ext.spec['wireguardEnabled'],
                "wireguardEnabledV6": ext.spec['wireguardEnabledV6'],
                "wireguardHostEncryptionEnabled": ext.spec['wireguardHostEncryptionEnabled'],
                "wireguardInterfaceName": ext.spec['wireguardInterfaceName'],
                "wireguardInterfaceNameV6": ext.spec['wireguardInterfaceNameV6'],
                "wireguardKeepAlive": ext.spec['wireguardKeepAlive'],
                "wireguardListeningPort": ext.spec['wireguardListeningPort'],
                "wireguardListeningPortV6": ext.spec['wireguardListeningPortV6'],
                "wireguardMTU": ext.spec['wireguardMTU'],
                "wireguardMTUV6": ext.spec['wireguardMTUV6'],
                "wireguardRoutingRulePriority": ext.spec['wireguardRoutingRulePriority'],
                "workloadSourceSpoofing": ext.spec['workloadSourceSpoofing'],
                "xdpEnabled": ext.spec['xdpEnabled'],
                "xdpRefreshInterval": ext.spec['xdpRefreshInterval'],
            }
        } catch (err) {
            console.error((err as object)['body']);
        }
        return null
    },
};
