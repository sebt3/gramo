scalar JSON
scalar JSONObject

type GramoConfig {
  defaultNamespace: String!
  defaultRoute: String!
  enableGraphQLClient: Boolean!
  limitVynilCategory: String!
  limitVynilDistrib: String!
  limitNamespaceKey: String!
  limitNamespaceValue: String!
  limitNamespaceHave: String!
}

input Label {
  name: String!
  value: String!
}
input Filter {
  path: String!
  op: String!
  value: JSON
}
input ExcludeInclude {
  path: String!
  include: Boolean
}
input queryParameters {
  filters: [Filter!]
  excludes: [ExcludeInclude!]
  maxLines: Int
}
input metadataMore {
  labels: [Label!]
  annotations: [Label!]
}
type ownerReference {
  apiVersion: String!
  blockOwnerDeletion: Boolean
  controller: Boolean
  kind: String!
  name: String!
  uid: String!
}

type metadata {
  name: String!
  namespace: String
  annotations: JSONObject
  labels: JSONObject
  creationTimestamp: String
  ownerReferences: [ownerReference]
  resourceVersion: String
  uid: String
}

type parentRef {
  name: String!
  namespace: String
  group: String!
  short: String!
}

type permissionReviewNonResourceRules {
  nonResourceURLs: [String]
  verbs: [String]
}
type permissionReviewResourceRules {
  apiGroups: [String]
  resourceNames: [String]
  resources: [String]
  verbs: [String]
}
type permissionReview {
  evaluationError: String
  incomplete: Boolean
  nonResourceRules: [permissionReviewNonResourceRules]
  resourceRules: [permissionReviewResourceRules]
}
type vynilCategory {
  name: String!
  providevynilPackage(params: queryParameters): [vynilPackage!]
}
type vynilPackage {
  name: String!
  commit_id: ID!
  description: String
  consumevynilCategory: vynilCategory!
  consumevynilDistrib: vynilDistrib!
  options: JSONObject!
}
type coreUrl {
  proto: String
  host: String
  path: String
}
type coreEvent {
  metadata: metadata
  source: JSONObject
  involvedObject: JSONObject
  type: String
  action: String
  count: Int
  message: String
  reason: String
  reportingComponent: String
  reportingInstance: String
}
type coreLog {
  lines: [String]!
}
type coreContainer {
  namespace: String!
  pod_name: String!
  name: String!
  init: Boolean
  spec: JSONObject
  status: JSONObject
  getcoreLog(params: queryParameters): coreLog
}
type Query {
  gramoConfig: GramoConfig
  coreEvent(params: queryParameters): [coreEvent]
  vynilCategory(params: queryParameters): [vynilCategory]
  vynilPackage(params: queryParameters): [vynilPackage]
}