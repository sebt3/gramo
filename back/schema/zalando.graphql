type zalandopostgresql {
    metadata: metadata!
    spec: JSONObject
    status: JSONObject
}
type zalandoClusterKopfPeering {
    metadata: metadata!
    status: JSONObject
}
type zalandoKopfPeering {
    metadata: metadata!
    status: JSONObject
}
type Query {
    zalandoClusterKopfPeering(params: queryParameters): [zalandoClusterKopfPeering]
}
type Mutation {
    zalandopostgresqlCreate(namespace: String!, name: String!, spec: JSONObject, metadata: metadataMore): zalandopostgresql
    zalandopostgresqlPatch(namespace: String!, name: String!, spec: JSONObject, metadata: metadataMore): zalandopostgresql
    zalandopostgresqlDelete(namespace: String!, name: String!): zalandopostgresql
    zalandoClusterKopfPeeringCreate(name: String!, metadata: metadataMore): zalandoClusterKopfPeering
    zalandoClusterKopfPeeringPatch(name: String!, metadata: metadataMore): zalandoClusterKopfPeering
    zalandoClusterKopfPeeringDelete(name: String!): zalandoClusterKopfPeering
    zalandoKopfPeeringCreate(namespace: String!, name: String!, metadata: metadataMore): zalandoKopfPeering
    zalandoKopfPeeringPatch(namespace: String!, name: String!, metadata: metadataMore): zalandoKopfPeering
    zalandoKopfPeeringDelete(namespace: String!, name: String!): zalandoKopfPeering
}
