
type fluxcdImagePolicyStatusConditionsItem {
  lastTransitionTime: String!
  message: String!
  observedGeneration: Int
  reason: String!
  status: String!
  type: String!
}
type fluxcdImagePolicyStatus {
  conditions: [fluxcdImagePolicyStatusConditionsItem]
  latestImage: String
  observedGeneration: Int
  observedPreviousImage: String
}
input fluxcdImagePolicySpecFilterTags {
  extract: String
  pattern: String
}
input fluxcdImagePolicySpecImageRepositoryRef {
  name: String!
  namespace: String
}
input fluxcdImagePolicySpecPolicyAlphabetical {
  order: String
}
input fluxcdImagePolicySpecPolicyNumerical {
  order: String
}
input fluxcdImagePolicySpecPolicySemver {
  range: String!
}
input fluxcdImagePolicySpecPolicy {
  alphabetical: fluxcdImagePolicySpecPolicyAlphabetical
  numerical: fluxcdImagePolicySpecPolicyNumerical
  semver: fluxcdImagePolicySpecPolicySemver
}
input fluxcdImagePolicySpec {
  filterTags: fluxcdImagePolicySpecFilterTags
  imageRepositoryRef: fluxcdImagePolicySpecImageRepositoryRef!
  policy: fluxcdImagePolicySpecPolicy!
}
type fluxcdImagePolicyFilterTags {
  extract: String
  pattern: String
}
type fluxcdImagePolicyImageRepositoryRef {
  name: String!
  namespace: String
}
type fluxcdImagePolicyPolicyAlphabetical {
  order: String
}
type fluxcdImagePolicyPolicyNumerical {
  order: String
}
type fluxcdImagePolicyPolicySemver {
  range: String!
}
type fluxcdImagePolicyPolicy {
  alphabetical: fluxcdImagePolicyPolicyAlphabetical
  numerical: fluxcdImagePolicyPolicyNumerical
  semver: fluxcdImagePolicyPolicySemver
}
type fluxcdImagePolicy {
  metadata: metadata
  filterTags: fluxcdImagePolicyFilterTags
  imageRepositoryRef: fluxcdImagePolicyImageRepositoryRef!
  policy: fluxcdImagePolicyPolicy!
  status: fluxcdImagePolicyStatus
}
type fluxcdImageRepositoryStatusConditionsItem {
  lastTransitionTime: String!
  message: String!
  observedGeneration: Int
  reason: String!
  status: String!
  type: String!
}
type fluxcdImageRepositoryStatusLastScanResult {
  latestTags: [String]
  scanTime: String
  tagCount: Int!
}
type fluxcdImageRepositoryStatus {
  canonicalImageName: String
  conditions: [fluxcdImageRepositoryStatusConditionsItem]
  lastHandledReconcileAt: String
  lastScanResult: fluxcdImageRepositoryStatusLastScanResult
  observedExclusionList: [String]
  observedGeneration: Int
}
input fluxcdImageRepositorySpecCertSecretRef {
  name: String!
}
input fluxcdImageRepositorySpecSecretRef {
  name: String!
}
input fluxcdImageRepositorySpec {
  #accessFrom: JSONObject
  certSecretRef: fluxcdImageRepositorySpecCertSecretRef
  exclusionList: [String]
  image: String
  interval: String
  provider: String
  secretRef: fluxcdImageRepositorySpecSecretRef
  serviceAccountName: String
  suspend: Boolean
  timeout: String
}
type fluxcdImageRepositoryCertSecretRef {
  name: String!
}
type fluxcdImageRepositorySecretRef {
  name: String!
}
type fluxcdImageRepository {
  metadata: metadata
  #accessFrom: JSONObject
  certSecretRef: fluxcdImageRepositoryCertSecretRef
  exclusionList: [String]
  image: String
  interval: String
  provider: String
  secretRef: fluxcdImageRepositorySecretRef
  serviceAccountName: String
  suspend: Boolean
  timeout: String
  status: fluxcdImageRepositoryStatus
}
type fluxcdImageUpdateAutomationStatusConditionsItem {
  lastTransitionTime: String!
  message: String!
  observedGeneration: Int
  reason: String!
  status: String!
  type: String!
}
type fluxcdImageUpdateAutomationStatus {
  conditions: [fluxcdImageUpdateAutomationStatusConditionsItem]
  lastAutomationRunTime: String
  lastHandledReconcileAt: String
  lastPushCommit: String
  lastPushTime: String
  observedGeneration: Int
}
input fluxcdImageUpdateAutomationSpecGitCheckoutRef {
  branch: String
  commit: String
  name: String
  semver: String
  tag: String
}
input fluxcdImageUpdateAutomationSpecGitCheckout {
  ref: fluxcdImageUpdateAutomationSpecGitCheckoutRef!
}
input fluxcdImageUpdateAutomationSpecGitCommitAuthor {
  email: String!
  name: String
}
input fluxcdImageUpdateAutomationSpecGitCommitSigningKeySecretRef {
  name: String!
}
input fluxcdImageUpdateAutomationSpecGitCommitSigningKey {
  secretRef: fluxcdImageUpdateAutomationSpecGitCommitSigningKeySecretRef
}
input fluxcdImageUpdateAutomationSpecGitCommit {
  author: fluxcdImageUpdateAutomationSpecGitCommitAuthor!
  messageTemplate: String
  signingKey: fluxcdImageUpdateAutomationSpecGitCommitSigningKey
}
input fluxcdImageUpdateAutomationSpecGitPush {
  branch: String!
}
input fluxcdImageUpdateAutomationSpecGit {
  checkout: fluxcdImageUpdateAutomationSpecGitCheckout
  commit: fluxcdImageUpdateAutomationSpecGitCommit!
  push: fluxcdImageUpdateAutomationSpecGitPush
}
input fluxcdImageUpdateAutomationSpecSourceRef {
  apiVersion: String
  kind: String!
  name: String!
  namespace: String
}
input fluxcdImageUpdateAutomationSpecUpdate {
  path: String
  strategy: String!
}
input fluxcdImageUpdateAutomationSpec {
  git: fluxcdImageUpdateAutomationSpecGit
  interval: String!
  sourceRef: fluxcdImageUpdateAutomationSpecSourceRef!
  suspend: Boolean
  update: fluxcdImageUpdateAutomationSpecUpdate
}
type fluxcdImageUpdateAutomationGitCheckoutRef {
  branch: String
  commit: String
  name: String
  semver: String
  tag: String
}
type fluxcdImageUpdateAutomationGitCheckout {
  ref: fluxcdImageUpdateAutomationGitCheckoutRef!
}
type fluxcdImageUpdateAutomationGitCommitAuthor {
  email: String!
  name: String
}
type fluxcdImageUpdateAutomationGitCommitSigningKeySecretRef {
  name: String!
}
type fluxcdImageUpdateAutomationGitCommitSigningKey {
  secretRef: fluxcdImageUpdateAutomationGitCommitSigningKeySecretRef
}
type fluxcdImageUpdateAutomationGitCommit {
  author: fluxcdImageUpdateAutomationGitCommitAuthor!
  messageTemplate: String
  signingKey: fluxcdImageUpdateAutomationGitCommitSigningKey
}
type fluxcdImageUpdateAutomationGitPush {
  branch: String!
}
type fluxcdImageUpdateAutomationGit {
  checkout: fluxcdImageUpdateAutomationGitCheckout
  commit: fluxcdImageUpdateAutomationGitCommit!
  push: fluxcdImageUpdateAutomationGitPush
}
type fluxcdImageUpdateAutomationSourceRef {
  apiVersion: String
  kind: String!
  name: String!
  namespace: String
}
type fluxcdImageUpdateAutomationUpdate {
  path: String
  strategy: String!
}
type fluxcdImageUpdateAutomation {
  metadata: metadata
  git: fluxcdImageUpdateAutomationGit
  interval: String!
  sourceRef: fluxcdImageUpdateAutomationSourceRef!
  suspend: Boolean
  update: fluxcdImageUpdateAutomationUpdate
  status: fluxcdImageUpdateAutomationStatus
}
type Query {
  fluxcdImagePolicy(namespace: String!, name: String!): fluxcdImagePolicy
  fluxcdImageRepository(namespace: String!, name: String!): fluxcdImageRepository
  fluxcdImageUpdateAutomation(namespace: String!, name: String!): fluxcdImageUpdateAutomation
}
type Mutation {
  createFluxcdImagePolicy(namespace: String!, name: String!, spec: fluxcdImagePolicySpec!): fluxcdImagePolicy
  patchFluxcdImagePolicy(namespace: String!, name: String!, spec: fluxcdImagePolicySpec!): fluxcdImagePolicy
  deleteFluxcdImagePolicy(namespace: String!, name: String!): fluxcdImagePolicy
  createFluxcdImageRepository(namespace: String!, name: String!, spec: fluxcdImageRepositorySpec!): fluxcdImageRepository
  patchFluxcdImageRepository(namespace: String!, name: String!, spec: fluxcdImageRepositorySpec!): fluxcdImageRepository
  deleteFluxcdImageRepository(namespace: String!, name: String!): fluxcdImageRepository
  createFluxcdImageUpdateAutomation(namespace: String!, name: String!, spec: fluxcdImageUpdateAutomationSpec!): fluxcdImageUpdateAutomation
  patchFluxcdImageUpdateAutomation(namespace: String!, name: String!, spec: fluxcdImageUpdateAutomationSpec!): fluxcdImageUpdateAutomation
  deleteFluxcdImageUpdateAutomation(namespace: String!, name: String!): fluxcdImageUpdateAutomation
}