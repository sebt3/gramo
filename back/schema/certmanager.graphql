type certmanagerChallenge {
    metadata: metadata!
    spec: JSONObject
    status: JSONObject
}
type certmanagerOrder {
    metadata: metadata!
    spec: JSONObject
    status: JSONObject
}
type certmanagerCertificate {
    metadata: metadata!
    spec: JSONObject
    status: JSONObject
}
type certmanagerCertificateRequest {
    metadata: metadata!
    spec: JSONObject
    status: JSONObject
}
type certmanagerClusterIssuer {
    metadata: metadata!
    spec: JSONObject
    status: JSONObject
}
type certmanagerIssuer {
    metadata: metadata!
    spec: JSONObject
    status: JSONObject
}
type Query {
    certmanagerClusterIssuer(params: queryParameters): [certmanagerClusterIssuer]
}
type Mutation {
    certmanagerChallengeCreate(namespace: String!, name: String!, spec: JSONObject, metadata: metadataMore): certmanagerChallenge
    certmanagerChallengePatch(namespace: String!, name: String!, spec: JSONObject, metadata: metadataMore): certmanagerChallenge
    certmanagerChallengeDelete(namespace: String!, name: String!): certmanagerChallenge
    certmanagerOrderCreate(namespace: String!, name: String!, spec: JSONObject, metadata: metadataMore): certmanagerOrder
    certmanagerOrderPatch(namespace: String!, name: String!, spec: JSONObject, metadata: metadataMore): certmanagerOrder
    certmanagerOrderDelete(namespace: String!, name: String!): certmanagerOrder
    certmanagerCertificateCreate(namespace: String!, name: String!, spec: JSONObject, metadata: metadataMore): certmanagerCertificate
    certmanagerCertificatePatch(namespace: String!, name: String!, spec: JSONObject, metadata: metadataMore): certmanagerCertificate
    certmanagerCertificateDelete(namespace: String!, name: String!): certmanagerCertificate
    certmanagerCertificateRequestCreate(namespace: String!, name: String!, spec: JSONObject, metadata: metadataMore): certmanagerCertificateRequest
    certmanagerCertificateRequestPatch(namespace: String!, name: String!, spec: JSONObject, metadata: metadataMore): certmanagerCertificateRequest
    certmanagerCertificateRequestDelete(namespace: String!, name: String!): certmanagerCertificateRequest
    certmanagerClusterIssuerCreate(name: String!, spec: JSONObject, metadata: metadataMore): certmanagerClusterIssuer
    certmanagerClusterIssuerPatch(name: String!, spec: JSONObject, metadata: metadataMore): certmanagerClusterIssuer
    certmanagerClusterIssuerDelete(name: String!): certmanagerClusterIssuer
    certmanagerIssuerCreate(namespace: String!, name: String!, spec: JSONObject, metadata: metadataMore): certmanagerIssuer
    certmanagerIssuerPatch(namespace: String!, name: String!, spec: JSONObject, metadata: metadataMore): certmanagerIssuer
    certmanagerIssuerDelete(namespace: String!, name: String!): certmanagerIssuer
}
