type k8sNamespace {
  metadata: metadata
  spec: JSONObject
  status: JSONObject
  permissions: permissionReview
  k8sConfigMap(params: queryParameters): [k8sConfigMap]
  k8sEndpoints(params: queryParameters): [k8sEndpoints]
  k8sLimitRange(params: queryParameters): [k8sLimitRange]
  k8sPersistentVolumeClaim(params: queryParameters): [k8sPersistentVolumeClaim]
  k8sPod(params: queryParameters): [k8sPod]
  k8sPodTemplate(params: queryParameters): [k8sPodTemplate]
  k8sReplicationController(params: queryParameters): [k8sReplicationController]
  k8sResourceQuota(params: queryParameters): [k8sResourceQuota]
  k8sSecret(params: queryParameters): [k8sSecret]
  k8sService(params: queryParameters): [k8sService]
  k8sServiceAccount(params: queryParameters): [k8sServiceAccount]
  k8sDaemonSet(params: queryParameters): [k8sDaemonSet]
  k8sDeployment(params: queryParameters): [k8sDeployment]
  k8sReplicaSet(params: queryParameters): [k8sReplicaSet]
  k8sStatefulSet(params: queryParameters): [k8sStatefulSet]
  k8sHorizontalPodAutoscaler(params: queryParameters): [k8sHorizontalPodAutoscaler]
  k8sJob(params: queryParameters): [k8sJob]
  k8sCronJob(params: queryParameters): [k8sCronJob]
  k8sIngress(params: queryParameters): [k8sIngress]
  k8sNetworkPolicy(params: queryParameters): [k8sNetworkPolicy]
  k8sPodDisruptionBudget(params: queryParameters): [k8sPodDisruptionBudget]
  k8sRole(params: queryParameters): [k8sRole]
  k8sRoleBinding(params: queryParameters): [k8sRoleBinding]
  k8sCSIStorageCapacity(params: queryParameters): [k8sCSIStorageCapacity]
  k8sLease(params: queryParameters): [k8sLease]
  k8sEndpointSlice(params: queryParameters): [k8sEndpointSlice]
  zalandopostgresql(params: queryParameters): [zalandopostgresql]
  zalandoKopfPeering(params: queryParameters): [zalandoKopfPeering]
  certmanagerChallenge(params: queryParameters): [certmanagerChallenge]
  certmanagerOrder(params: queryParameters): [certmanagerOrder]
  certmanagerCertificate(params: queryParameters): [certmanagerCertificate]
  certmanagerCertificateRequest(params: queryParameters): [certmanagerCertificateRequest]
  certmanagerIssuer(params: queryParameters): [certmanagerIssuer]
  projectcalicoNetworkPolicy(params: queryParameters): [projectcalicoNetworkPolicy]
  projectcalicoNetworkSet(params: queryParameters): [projectcalicoNetworkSet]
  jaegertracingJaeger(params: queryParameters): [jaegertracingJaeger]
  k8upArchive(params: queryParameters): [k8upArchive]
  k8upBackup(params: queryParameters): [k8upBackup]
  k8upCheck(params: queryParameters): [k8upCheck]
  k8upPreBackupPod(params: queryParameters): [k8upPreBackupPod]
  k8upPrune(params: queryParameters): [k8upPrune]
  k8upRestore(params: queryParameters): [k8upRestore]
  k8upSchedule(params: queryParameters): [k8upSchedule]
  k8upSnapshot(params: queryParameters): [k8upSnapshot]
  fluxcdKustomization(params: queryParameters): [fluxcdKustomization]
  fluxcdReceiver(params: queryParameters): [fluxcdReceiver]
  fluxcdAlert(params: queryParameters): [fluxcdAlert]
  fluxcdProvider(params: queryParameters): [fluxcdProvider]
  fluxcdGitRepository(params: queryParameters): [fluxcdGitRepository]
  fluxcdBucket(params: queryParameters): [fluxcdBucket]
  fluxcdHelmChart(params: queryParameters): [fluxcdHelmChart]
  fluxcdHelmRepository(params: queryParameters): [fluxcdHelmRepository]
  fluxcdOCIRepository(params: queryParameters): [fluxcdOCIRepository]
  fluxcdImageUpdateAutomation(params: queryParameters): [fluxcdImageUpdateAutomation]
  fluxcdImagePolicy(params: queryParameters): [fluxcdImagePolicy]
  fluxcdImageRepository(params: queryParameters): [fluxcdImageRepository]
  fluxcdHelmRelease(params: queryParameters): [fluxcdHelmRelease]
  mongodbMongoDBCommunity(params: queryParameters): [mongodbMongoDBCommunity]
  monitoringAlertmanager(params: queryParameters): [monitoringAlertmanager]
  monitoringPodMonitor(params: queryParameters): [monitoringPodMonitor]
  monitoringProbe(params: queryParameters): [monitoringProbe]
  monitoringPrometheus(params: queryParameters): [monitoringPrometheus]
  monitoringPrometheusRule(params: queryParameters): [monitoringPrometheusRule]
  monitoringServiceMonitor(params: queryParameters): [monitoringServiceMonitor]
  monitoringThanosRuler(params: queryParameters): [monitoringThanosRuler]
  monitoringAlertmanagerConfig(params: queryParameters): [monitoringAlertmanagerConfig]
  monitoringPrometheusAgent(params: queryParameters): [monitoringPrometheusAgent]
  cnpgBackup(params: queryParameters): [cnpgBackup]
  cnpgCluster(params: queryParameters): [cnpgCluster]
  cnpgPooler(params: queryParameters): [cnpgPooler]
  cnpgScheduledBackup(params: queryParameters): [cnpgScheduledBackup]
  vynilInstall(params: queryParameters): [vynilInstall]
  mariadbBackup(params: queryParameters): [mariadbBackup]
  mariadbConnection(params: queryParameters): [mariadbConnection]
  mariadbDatabase(params: queryParameters): [mariadbDatabase]
  mariadbGrant(params: queryParameters): [mariadbGrant]
  mariadbMariaDB(params: queryParameters): [mariadbMariaDB]
  mariadbRestore(params: queryParameters): [mariadbRestore]
  mariadbSqlJob(params: queryParameters): [mariadbSqlJob]
  mariadbUser(params: queryParameters): [mariadbUser]
  opentelemetryInstrumentation(params: queryParameters): [opentelemetryInstrumentation]
  opentelemetryOpAMPBridge(params: queryParameters): [opentelemetryOpAMPBridge]
  opentelemetryOpenTelemetryCollector(params: queryParameters): [opentelemetryOpenTelemetryCollector]
  secretgeneratorBasicAuth(params: queryParameters): [secretgeneratorBasicAuth]
  secretgeneratorSSHKeyPair(params: queryParameters): [secretgeneratorSSHKeyPair]
  secretgeneratorStringSecret(params: queryParameters): [secretgeneratorStringSecret]
  traefikIngressRoute(params: queryParameters): [traefikIngressRoute]
  traefikIngressRouteTCP(params: queryParameters): [traefikIngressRouteTCP]
  traefikIngressRouteUDP(params: queryParameters): [traefikIngressRouteUDP]
  traefikMiddleware(params: queryParameters): [traefikMiddleware]
  traefikMiddlewareTCP(params: queryParameters): [traefikMiddlewareTCP]
  traefikServersTransport(params: queryParameters): [traefikServersTransport]
  traefikTLSOption(params: queryParameters): [traefikTLSOption]
  traefikTLSStore(params: queryParameters): [traefikTLSStore]
  traefikTraefikService(params: queryParameters): [traefikTraefikService]
  rabbitmqRabbitmqCluster(params: queryParameters): [rabbitmqRabbitmqCluster]
  redisRedis(params: queryParameters): [redisRedis]
  redisRedisCluster(params: queryParameters): [redisRedisCluster]
  redisRedisReplication(params: queryParameters): [redisRedisReplication]
  redisRedisSentinel(params: queryParameters): [redisRedisSentinel]
  oracleInnoDBCluster(params: queryParameters): [oracleInnoDBCluster]
  oracleMySQLBackup(params: queryParameters): [oracleMySQLBackup]
}
