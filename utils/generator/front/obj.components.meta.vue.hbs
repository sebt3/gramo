<script setup lang="ts">
import { ref, use{{ short }} } from '../../libs/{{ group }}/{{ short }}.js'
import { color{{ short }}, icon{{ short }} } from '../../libs/{{ group }}/custom.js'
import { elude, getColor, getConditionColor } from "../../libs/core/"
const { toEdit, actionDelete } = use{{ short }}();
const props = withDefaults(defineProps<{model: object, deletor?:any, useActions?:boolean, showLink?:boolean, showLabels?:boolean, showStatus?: boolean}>(), {
  deletor: ()=>null,
  useActions: false,
  showLabels: false,
  showStatus: true,
  showLink: true,
});
console.log(props.model.metadata)
</script>
<template>
  <q-card bordered class="q-ma-sm">
    <q-card-section :class="`bg-${ color{{ short }} } text-white`">
      <div class="text-subtitle1 q-mt-none q-mb-none q-pt-none q-pb-none">
        <q-icon :name="icon{{ short }}" class="q-mr-sm" />{{ short }}
        <q-btn-group push class="float-right text-capitalize shadow-3" v-if="useActions">
          <q-btn icon="edit" @click="toEdit({{#if namespaced}}model.metadata.namespace, {{/if}}model.metadata.name)">
            <q-tooltip>Edit</q-tooltip>
          </q-btn>
          <q-btn icon="delete" @click="actionDelete(deletor, model.metadata)">
            <q-tooltip>Delete</q-tooltip>
          </q-btn>
        </q-btn-group>
      </div>
    </q-card-section>
    <q-card-section :class="`bg-${ color{{ short }} }-2`">
      <div class="q-gutter-md">
{{> vueNameFields namespaced=namespaced group=group short=short }}
        <div v-if="showStatus">
{{> vueStatusFields properties=definition.properties crd=crd }}
        </div>
        <div v-if="showLabels">
{{> vueLabelFields }}
        </div>
      </div>
    </q-card-section>
  </q-card>
</template>
