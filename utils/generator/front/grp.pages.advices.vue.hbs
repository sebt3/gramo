<script setup lang="ts">
const { defineAsyncComponent } = await import('vue')
import {{ category }}Query from '@/queries/{{ name }}/{{ category }}.read.graphql'
const { {{#each objects}}have{{ short }}, {{/each}} } = await import('@/libs/{{ name }}/{{ category }}Cat.js')
const {onlyUnique} = await import("@/components/charts/commonTools.js")
const { useRouter } = await import('vue-router')
const router = useRouter();
{{#each objects}}
const { {{ short }}ListExcludes{{#if namespaced}}, use{{short}}{{/if}} } = await import('@/libs/{{ group }}/{{ short }}.js')
{{#if namespaced}}
const {toList: to{{ short }}List}  = use{{short}}(router);
{{/if}}
{{/each}}
const { ref, useCore, useNavigationStoreRef, useQuery } = await import('@/libs/core');
const { isNamespaced, setNamespaceFromRoute } = await import('../../../libs/core/navigation.js')
const { onErrorHandler } = useCore();
const ready = ref(false);
{{#each objects}}
const {{ short }}Problems = ref([]);
const {{ short }}Advices = ref([]);
{{/each}}
if (isNamespaced()) setNamespaceFromRoute();
const navigation = useNavigationStoreRef();
const { result, loading, refetch, onError } = useQuery({{ category }}Query, {
{{#each objects}}
  "{{ short }}": {
    "filters": [],
    "havingAny": [{"resolver":"getcoreProblem"},{"resolver":"getcoreAdvice"}],
    "excludes": {{ short }}ListExcludes
  },
{{/each}}
  "namespace": {
    "filters": isNamespaced()?[
      {
        "op": "eq",
        "path": "metadata/name",
        "value": navigation.currentNamespace
      }
    ]:[]
  }
}, navigation.refreshOption);
const conditions = ref({
{{#each objects}}
{{#if namespaced}}
      "{{ group }}{{ short }}": (result) => result !== undefined && result['k8sNamespace'] !== undefined && Array.isArray(result['k8sNamespace']) && result['k8sNamespace'].map(n=>n['{{ group }}{{ short }}']).flat().length>0,
{{else}}
      "{{ group }}{{ short }}": (result) => !isNamespaced() && result !== undefined && Array.isArray(result['{{ group }}{{ short }}']) && result['{{ group }}{{ short }}'].length>0,
{{/if}}
{{/each}}
});
onError(onErrorHandler);
const ProblemOverview  = defineAsyncComponent(() => import( '@/components/generic/ProblemOverview.vue'));
const AdviceOverview   = defineAsyncComponent(() => import( '@/components/generic/AdviceOverview.vue'));
const OverviewSkeleton = defineAsyncComponent(() => import( '@/components/core/OverviewSkeleton.vue'));
const TableSkeleton    = defineAsyncComponent(() => import( '@/components/core/TableSkeleton.vue'));
const GenericList      = defineAsyncComponent(() => import( '@/components/generic/GenericList.vue'));
</script>
<template><div>
{{#each objects}}
  <div class="row q-mb-sm q-ml-sm" v-if="loading{{#unless namespaced}} && !isNamespaced(){{/unless}}">
    <div class="col-lg-4">
      <OverviewSkeleton />
    </div>
    <div class="col-lg-8">
      <TableSkeleton :showNamespace="{{toJson namespaced}}" />
    </div>
  </div>
{{#if namespaced}}
  <div class="row q-mb-sm q-ml-sm" v-if="!loading && result.k8sNamespace.map(n => n.{{ group }}{{ short }}.filter(o=>Array.isArray(o['getcoreProblem'])&&o['getcoreProblem'].length>0)).flat().length>0">
    <div class="col-lg-4">
      <ProblemOverview short="{{ short }}" :to="to{{ short }}List"
        :model="result.k8sNamespace.map(n => n.{{ group }}{{ short }}.filter(o=>Array.isArray(o['getcoreProblem'])&&o['getcoreProblem'].length>0)).flat()" />
    </div>
    <div class="col-lg-8">
      <GenericList group="{{ group }}" short="{{ short }}" @refresh="refetch()" :useAction="false"
        v-if="result !== undefined && result['k8sNamespace'] !== undefined && Array.isArray(result['k8sNamespace']) && result['k8sNamespace'].map(n=>n['{{ group }}{{ short }}']).flat().length>0"
        :model="result.k8sNamespace.map(n => n.{{ group }}{{ short }}.filter(o=>Array.isArray(o['getcoreProblem'])&&o['getcoreProblem'].length>0)).flat()" />
    </div>
{{else}}
  <div class="row q-mb-sm q-ml-sm" v-if="!loading && !isNamespaced() && result.{{ group }}{{ short }}.filter(o=>Array.isArray(o['getcoreProblem'])&&o['getcoreProblem'].length>0).length>0">
    <div class="col-lg-4">
      <ProblemOverview short="{{ short }}" :to="to{{ short }}List"
        :model="result.{{ group }}{{ short }}.filter(o=>Array.isArray(o['getcoreProblem'])&&o['getcoreProblem'].length>0)" />
    </div>
    <div class="col-lg-8">
      <GenericList group="{{ group }}" short="{{ short }}" @refresh="refetch()" :useAction="false"
        v-if="result !== undefined && Array.isArray(result['{{ group }}{{ short }}']) && result['{{ group }}{{ short }}'].length>0"
        :model="result.{{ group }}{{ short }}.filter(o=>Array.isArray(o['getcoreProblem'])&&o['getcoreProblem'].length>0)" />
    </div>
{{/if}}
  </div>
{{/each}}
{{#each objects}}
{{#if namespaced}}
  <div class="row q-mb-sm q-ml-sm" v-if="!loading && result.k8sNamespace.map(n => n.{{ group }}{{ short }}.filter(o=>Array.isArray(o['getcoreAdvice'])&&o['getcoreAdvice'].length>0)).flat().length>0">
    <div class="col-lg-4">
      <AdviceOverview short="{{ short }}" :to="to{{ short }}List"
        :model="result.k8sNamespace.map(n => n.{{ group }}{{ short }}.filter(o=>Array.isArray(o['getcoreAdvice'])&&o['getcoreAdvice'].length>0)).flat()" />
    </div>
    <div class="col-lg-8">
      <GenericList group="{{ group }}" short="{{ short }}" @refresh="refetch()" :useAction="false" :showAdvices="true"
        v-if="result !== undefined && result['k8sNamespace'] !== undefined && Array.isArray(result['k8sNamespace']) && result['k8sNamespace'].map(n=>n['{{ group }}{{ short }}']).flat().length>0"
        :model="result.k8sNamespace.map(n => n.{{ group }}{{ short }}.filter(o=>Array.isArray(o['getcoreAdvice'])&&o['getcoreAdvice'].length>0)).flat()" />
    </div>
{{else}}
  <div class="row q-mb-sm q-ml-sm" v-if="!loading && !isNamespaced() && result.{{ group }}{{ short }}.filter(o=>Array.isArray(o['getcoreAdvice'])&&o['getcoreAdvice'].length>0).length>0">
    <div class="col-lg-4">
      <AdviceOverview short="{{ short }}" :to="to{{ short }}List"
        :model="result.{{ group }}{{ short }}.filter(o=>Array.isArray(o['getcoreAdvice'])&&o['getcoreAdvice'].length>0)" />
    </div>
    <div class="col-lg-8">
      <GenericList group="{{ group }}" short="{{ short }}" @refresh="refetch()" :useAction="false" :showAdvices="true"
        v-if="result !== undefined && Array.isArray(result['{{ group }}{{ short }}']) && result['{{ group }}{{ short }}'].length>0"
        :model="result.{{ group }}{{ short }}.filter(o=>Array.isArray(o['getcoreAdvice'])&&o['getcoreAdvice'].length>0)" />
    </div>
{{/if}}
  </div>
{{/each}}
  <q-card bordered class="q-ma-sm" v-if="({{#each objects}}have{{ short }}() || {{/each}} false) && !Object.entries(conditions).map(([_,fn])=>fn(result)).reduce((res,cur)=>cur||res,false)">
    <q-card-section :class="`bg-info text-white`">
      <div class="text-subtitle1 q-mt-none q-mb-none q-pt-none q-pb-none">
        \{{ $t('dashboard.info') }}
      </div>
    </q-card-section>
    <q-card-section :class="`bg-light-blue-2`">
      <div class="q-ma-xl">\{{ $t('dashboard.nothing') }}</div>
    </q-card-section>
  </q-card>
  <q-card bordered class="q-ma-sm" v-if="{{#each objects}}!have{{ short }}() &&{{/each}}true">
    <q-card-section :class="`bg-negative text-white`">
      <div class="text-subtitle1 q-mt-none q-mb-none q-pt-none q-pb-none">
        \{{ $t('core.error') }}
      </div>
    </q-card-section>
    <q-card-section :class="`bg-red-2`">
      <div class="q-ma-xl">\{{ $t('dashboard.noPerm') }}</div>
    </q-card-section>
  </q-card>
</div></template>