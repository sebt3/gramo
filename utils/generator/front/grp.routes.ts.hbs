import {menuLinksProps} from '../interfaces';
import { {{#each objects}}icon{{ short }}, {{/each}} {{ name }}Icon, {{ name }}Title }from '../../libs/{{ name }}/custom.js'
import { useCRDStore, usePermissionStore } from '../../stores'
const crds = useCRDStore().crds;
const havePermission = usePermissionStore().have;
export const link:menuLinksProps = {
  name: '{{ category }}{{ name }}',
  title: {{ name }}Title, icon: {{ name }}Icon,
  target: '{{ category }}{{ name }}Dashboard',
  targetNS: '{{ category }}{{ name }}NSDashboard',
  children: [
{{#each objects}}
  {{#if (defined crd)}}crds['{{crd.metadata.name}}'] == undefined || {{/if}}!havePermission('{{group}}','{{ short }}')?[]:[{
    name: '{{ group }}{{ short }}', {{#if order }}order: {{order}},{{/if}}
    title: '{{ short }}', caption: 'List {{ short }}', icon: icon{{ short }},
  {{#if namespaced}}
    targetNS: '{{ group }}{{ short }}Table',
  {{/if}}
    target: '{{ group }}{{ short }}{{#if namespaced}}All{{/if}}Table', children: []
  }],
{{/each}}
  ].flat()
}
export const route = {
  path: '{{ name }}',
  name: '{{ category }}{{ name }}',
  redirect: {name: link.target as string},
  meta: {breadcrumb: {{ name }}Title, icon: {{ name }}Icon, ns: false},
  children: [[
    {
      path: '',
      name: '{{ category }}{{ name }}Dashboard',
      component: () => import('../../pages/{{category}}/{{ name }}/{{category}}Dashboard.vue'),
      meta: {
        breadcrumb: 'Dashboard', icon: {{ name }}Icon, ns: false,
        title: () => '{{ category }}/{{ name }} Dashboard',
        related: [
          {target: '{{ category }}{{ name }}NSDashboard', ns: true, display: (ns) => `{{ name }} Dashboard for ${ns} namespace`},
          {target: '{{ category }}{{ name }}NSAdvices', ns: true, display: (ns) => `{{ name }} Advices for ${ns} namespace`},
          {target: '{{ category }}{{ name }}Advices', ns: false, display: () => `{{ name }} Advices for all namespaces`},
        ]
      },
    },
    {
      path: 'dashboards/:namespace',
      name: '{{ category }}{{ name }}NSDashboard',
      component: () => import('../../pages/{{category}}/{{ name }}/{{category}}Dashboard.vue'),
      meta: {
        breadcrumb: 'Dashboard', icon: {{ name }}Icon, ns: true,
        title: (namespace) => `{{ category }}/{{ name }} Dashboard for namespace ${namespace}`,
        related: [
          {target: '{{ category }}{{ name }}Dashboard', ns: false, display: () => `{{ name }} Dashboard for all namespaces`},
          {target: '{{ category }}{{ name }}Advices', ns: false, display: () => `{{ name }} Advices for all namespaces`},
          {target: '{{ category }}{{ name }}NSAdvices', ns: true, display: (ns) => `{{ name }} Advices for ${ns} namespace`},
        ]
      },
    },
    {
      path: 'advices',
      name: '{{ category }}{{ name }}Advices',
      component: () => import('../../pages/{{category}}/{{ name }}/{{category}}Advices.vue'),
      meta: {
        breadcrumb: 'Advices', icon: {{ name }}Icon, ns: false,
        title: () => '{{ category }}/{{ name }} Advices',
        related: [
          {target: '{{ category }}{{ name }}Dashboard', ns: false, display: () => `{{ name }} Dashboard for all namespaces`},
          {target: '{{ category }}{{ name }}NSDashboard', ns: true, display: (ns) => `{{ name }} Dashboard for ${ns} namespace`},
          {target: '{{ category }}{{ name }}NSAdvices', ns: true, display: (ns) => `{{ name }} Advices for ${ns} namespace`},
        ]
      },
    },
    {
      path: 'advices/:namespace',
      name: '{{ category }}{{ name }}NSAdvices',
      component: () => import('../../pages/{{category}}/{{ name }}/{{category}}Advices.vue'),
      meta: {
        breadcrumb: 'Advices', icon: {{ name }}Icon, ns: true,
        title: (namespace) => `{{ category }}/{{ name }} Advices for namespace ${namespace}`,
        related: [
          {target: '{{ category }}{{ name }}NSDashboard', ns: true, display: (ns) => `{{ name }} Dashboard for ${ns} namespace`},
          {target: '{{ category }}{{ name }}Dashboard', ns: false, display: () => `{{ name }} Dashboard for all namespaces`},
          {target: '{{ category }}{{ name }}Advices', ns: false, display: () => `{{ name }} Advices for all namespaces`},
        ]
      },
    }],
{{#each objects}}
    {{#if (defined crd)}}crds['{{crd.metadata.name}}'] == undefined || {{/if}}!havePermission('{{group}}','{{ short }}')?[]:[{
      path: '{{ short }}',
      name: '{{ group }}{{ short }}',
      meta: {breadcrumb: '{{ short }}', icon: icon{{ short }}, ns: false},
      children: [
  {{#if namespaced}}
        {
          path: '',
          name: '{{ group }}{{ short }}AllTable',
          component: () => import('../../pages/{{category}}/{{ group }}/{{ short }}List.vue'),
          meta: {
            breadcrumb: 'All', icon: 'list', ns: false,
            title: () => 'List all {{ short }}',
            related: [
              {target: '{{ group }}{{ short }}Table', ns: true, display: (ns) => `List {{ short }} in namespace ${ns}`},
              {target: '{{ ../category }}{{ ../name }}Dashboard', ns: false, display: () => `{{ group }} Dashboard for all namespaces`},
              {target: '{{ ../category }}{{ ../name }}Advices', ns: false, display: () => `{{ group }} Advices for all namespaces`},
            ]
          },
        },
  {{/if}}
        {
          path: '{{#if namespaced}}:namespace{{/if}}',
          name: '{{ group }}{{ short }}Table',
          component: () => import('../../pages/{{category}}/{{ group }}/{{ short }}List.vue'),
          meta: {
            breadcrumb: 'List', icon: 'list', ns: {{toJson namespaced}},
            title: ({{#if namespaced}}namespace{{/if}}) => `List {{ short }} {{#if namespaced}}in namespace ${namespace}{{/if}}`,
            related: [
  {{#if namespaced}}
              {target: '{{ group }}{{ short }}AllTable', ns: false, display: () => `List all {{ short }}`},
              {target: '{{ ../category }}{{ ../name }}NSDashboard', ns: true, display: (ns) => `{{ group }} Dashboard for ${ns} namespace`},
              {target: '{{ ../category }}{{ ../name }}NSAdvices', ns: true, display: (ns) => `{{ group }} Advices for ${ns} namespace`},
  {{else}}
              {target: '{{ ../category }}{{ ../name }}Dashboard', ns: false, display: () => `{{ group }} Dashboard for all namespaces`},
              {target: '{{ ../category }}{{ ../name }}Advices', ns: false, display: () => `{{ group }} Advices for all namespaces`},
  {{/if}}
            ]
          },
        },
        {
          path: '{{#if namespaced}}:namespace/{{/if}}view/:name',
          name: '{{ group }}{{ short }}View',
          component: () => import('../../pages/{{category}}/{{ group }}/{{ short }}View.vue'),
          meta: {
            breadcrumb: 'View', icon: icon{{ short }}, ns: {{toJson namespaced}}, useName: true,
            title: ({{#if namespaced}}namespace, {{/if}}name) => `{{ short }} {{#if namespaced}}(${namespace}){{/if}}${name}`
          },
          children: [
{{#each resolvers}}
            {name: '{{ ../group }}{{ ../short }}ViewFrom{{name}}', path: '{{name}}', redirect: to => { return {name: '{{ ../group }}{{ ../short }}View', params: to.params} }, meta: {animation: '{{type}}'} },
{{/each}}
          ]
        },
        {
          path: '{{#if namespaced}}:namespace/{{/if}}edit/:name',
          name: '{{ group }}{{ short }}Edit',
          component: () => import('../../pages/{{category}}/{{ group }}/{{ short }}Edit.vue'),
          meta: {
            breadcrumb: 'Edit', icon: 'visibility', ns: {{toJson namespaced}}, useName: true,
            title: ({{#if namespaced}}namespace, {{/if}}name) => `Edit {{ short }} {{#if namespaced}}(${namespace}){{/if}}${name}`
          },
        },
        {
          path: '{{#if namespaced}}:namespace/{{/if}}create',
          name: '{{ group }}{{ short }}Create',
          component: () => import('../../pages/{{category}}/{{ group }}/{{ short }}New.vue'),
          meta: {
            breadcrumb: 'Create', icon: 'add', ns: {{toJson namespaced}},
            title: ({{#if namespaced}}namespace{{/if}}) => `Create a new {{ short }} {{#if namespaced}}in namespace: ${namespace}{{/if}}`
          },
        }
      ]
    }],
{{/each}}
  ].flat(),
}
export default route
