import {menuLinksProps} from '../interfaces';
import { {{#each objects}}icon{{ short }}, {{/each}} {{ name }}Icon, {{ name }}Title }from '../../libs/{{ name }}/custom.js'
import { useCRDStore, usePermissionStore } from '../../stores'
import { i18n } from "../../libs/i18n"
const crds = useCRDStore().crds;
const havePermission = usePermissionStore().have;
export const link:menuLinksProps = {
  name: '{{ category }}{{ name }}',
  title: {{ name }}Title, icon: {{ name }}Icon,
  target: '{{ category }}{{ name }}Dashboard',
  targetNS: '{{ category }}{{ name }}NSDashboard',
  children: [
{{#each objects}}
  {{#if (defined crd)}}crds['{{crd.metadata.name}}'] == undefined || {{/if}}!havePermission('{{group}}','{{ short }}')?[]:[{
    name: '{{ group }}{{ short }}', {{#if order }}order: {{order}},{{/if}}
    title: '{{ short }}', caption: i18n.global.t('overview.captionList', {short: '{{ short }}'}), icon: icon{{ short }},
  {{#if namespaced}}
    targetNS: '{{ group }}{{ short }}Table',
  {{/if}}
    target: '{{ group }}{{ short }}{{#if namespaced}}All{{/if}}Table', children: []
  }],
{{/each}}
  ].flat()
}
export const route = {
  path: '{{ name }}',
  name: '{{ category }}{{ name }}',
  redirect: {name: link.target as string},
  meta: {breadcrumb: {{ name }}Title, icon: {{ name }}Icon, ns: false},
  children: [[
    {
      path: '',
      name: '{{ category }}{{ name }}Dashboard',
      component: () => import('../../pages/{{category}}/{{ name }}/{{category}}Dashboard.vue'),
      meta: {
        breadcrumb: i18n.global.t('overview.dashboardBreadcrumb'), icon: {{ name }}Icon, ns: false,
        title: () => i18n.global.t('overview.dashboardTitle',{name: '{{ category }}/{{ name }}'}),
        related: [
          {target: '{{ category }}{{ name }}NSDashboard', ns: true, display: (namespace) => i18n.global.t('overview.dashboardNSTitle',{name: '{{ name }}', namespace})},
          {target: '{{ category }}{{ name }}NSAdvices', ns: true, display: (namespace) => i18n.global.t('overview.adviceNSTitle',{name: '{{ name }}', namespace})},
          {target: '{{ category }}{{ name }}Advices', ns: false, display: () => i18n.global.t('overview.adviceTitle',{name: '{{ name }}'})},
        ]
      },
    },
    {
      path: 'dashboards/:namespace',
      name: '{{ category }}{{ name }}NSDashboard',
      component: () => import('../../pages/{{category}}/{{ name }}/{{category}}Dashboard.vue'),
      meta: {
        breadcrumb: i18n.global.t('overview.dashboardBreadcrumb'), icon: {{ name }}Icon, ns: true,
        title: (namespace) => i18n.global.t('overview.dashboardNSTitle',{name: '{{ category }}/{{ name }}', namespace}),
        related: [
          {target: '{{ category }}{{ name }}Dashboard', ns: false, display: () =>  i18n.global.t('overview.dashboardTitle',{name: '{{ name }}'})},
          {target: '{{ category }}{{ name }}Advices', ns: false, display: () => i18n.global.t('overview.adviceTitle',{name: '{{ name }}'})},
          {target: '{{ category }}{{ name }}NSAdvices', ns: true, display: (namespace) => i18n.global.t('overview.adviceNSTitle',{name: '{{ name }}', namespace})},
        ]
      },
    },
    {
      path: 'advices',
      name: '{{ category }}{{ name }}Advices',
      component: () => import('../../pages/{{category}}/{{ name }}/{{category}}Advices.vue'),
      meta: {
        breadcrumb: i18n.global.t('overview.adviceBreadcrumb'), icon: {{ name }}Icon, ns: false,
        title: () => i18n.global.t('overview.adviceTitle',{name: '{{ category }}/{{ name }}'}),
        related: [
          {target: '{{ category }}{{ name }}Dashboard', ns: false, display: () => i18n.global.t('overview.dashboardTitle',{name: '{{ name }}'})},
          {target: '{{ category }}{{ name }}NSDashboard', ns: true, display: (namespace) => i18n.global.t('overview.dashboardNSTitle',{name: '{{ name }}', namespace})},
          {target: '{{ category }}{{ name }}NSAdvices', ns: true, display: (namespace) => i18n.global.t('overview.adviceNSTitle',{name: '{{ name }}', namespace})},
        ]
      },
    },
    {
      path: 'advices/:namespace',
      name: '{{ category }}{{ name }}NSAdvices',
      component: () => import('../../pages/{{category}}/{{ name }}/{{category}}Advices.vue'),
      meta: {
        breadcrumb: i18n.global.t('overview.adviceBreadcrumb'), icon: {{ name }}Icon, ns: true,
        title: (namespace) => i18n.global.t('overview.adviceNSTitle',{name: '{{ category }}/{{ name }}', namespace}),
        related: [
          {target: '{{ category }}{{ name }}NSDashboard', ns: true, display: (namespace) => i18n.global.t('overview.dashboardNSTitle',{name: '{{ name }}', namespace})},
          {target: '{{ category }}{{ name }}Dashboard', ns: false, display: () => i18n.global.t('overview.dashboardTitle',{name: '{{ name }}'})},
          {target: '{{ category }}{{ name }}Advices', ns: false, display: () => i18n.global.t('overview.adviceTitle',{name: '{{ name }}'})},
        ]
      },
    }],
{{#each objects}}
    {{#if (defined crd)}}crds['{{crd.metadata.name}}'] == undefined || {{/if}}!havePermission('{{group}}','{{ short }}')?[]:[{
      path: '{{ short }}',
      name: '{{ group }}{{ short }}',
      meta: {breadcrumb: '{{ short }}', icon: icon{{ short }}, ns: false},
      children: [
  {{#if namespaced}}
        {
          path: '',
          name: '{{ group }}{{ short }}AllTable',
          component: () => import('../../pages/{{category}}/{{ group }}/{{ short }}List.vue'),
          meta: {
            breadcrumb: i18n.global.t('list.all'), icon: 'list', ns: false,
            title: () => i18n.global.t('overview.titleList',{short: '{{ short }}'}),
            related: [
              {target: '{{ group }}{{ short }}Table', ns: true, display: (namespace) => i18n.global.t('overview.titleList',{short: '{{ short }}', namespace})},
              {target: '{{ ../category }}{{ ../name }}Dashboard', ns: false, display: () => i18n.global.t('overview.dashboardTitle',{name: '{{ group }}'})},
              {target: '{{ ../category }}{{ ../name }}Advices', ns: false, display: () => i18n.global.t('overview.adviceTitle',{name: '{{ group }}'})},
            ]
          },
        },
  {{/if}}
        {
          path: '{{#if namespaced}}:namespace{{/if}}',
          name: '{{ group }}{{ short }}Table',
          component: () => import('../../pages/{{category}}/{{ group }}/{{ short }}List.vue'),
          meta: {
            breadcrumb: i18n.global.t('list.breadcrumb'), icon: 'list', ns: {{toJson namespaced}},
            title: ({{#if namespaced}}namespace{{/if}}) => i18n.global.t('list.{{#if namespaced}}namespaced{{else}}cluster{{/if}}',{short: '{{ short }}'{{#if namespaced}}, namespace{{/if}} }),
            related: [
  {{#if namespaced}}
              {target: '{{ group }}{{ short }}AllTable', ns: false, display: () => i18n.global.t('overview.titleAllList',{short: '{{ short }}'})},
              {target: '{{ ../category }}{{ ../name }}NSDashboard', ns: true, display: (namespace) => i18n.global.t('overview.dashboardNSTitle',{name: '{{ group }}', namespace})},
              {target: '{{ ../category }}{{ ../name }}NSAdvices', ns: true, display: (namespace) => i18n.global.t('overview.adviceNSTitle',{name: '{{ group }}', namespace})},
  {{else}}
              {target: '{{ ../category }}{{ ../name }}Dashboard', ns: false, display: () => i18n.global.t('overview.dashboardTitle',{name: '{{ group }}'})},
              {target: '{{ ../category }}{{ ../name }}Advices', ns: false, display: () => i18n.global.t('overview.adviceTitle',{name: '{{ group }}'})},
  {{/if}}
            ]
          },
        },
        {
          path: '{{#if namespaced}}:namespace/{{/if}}view/:name',
{{#if (and (eq group 'k8s') (eq short 'CustomResourceDefinition'))}}
          meta: {breadcrumb: arg => i18n.global.t('view.name',arg), icon: icon{{ short }}, ns: {{toJson namespaced}}, useName: true},
{{else}}
          name: '{{ group }}{{ short }}View',
          component: () => import('../../pages/{{category}}/{{ group }}/{{ short }}View.vue'),
          meta: {
            breadcrumb: arg => i18n.global.t('view.name',arg), icon: 'visibility', ns: {{toJson namespaced}}, useName: true,
            title: ({{#if namespaced}}namespace, {{/if}}name) => i18n.global.t('view.{{#if namespaced}}namespaced{{else}}cluster{{/if}}',{short: '{{ short }}',name{{#if namespaced}}, namespace{{/if}} })
          },
{{/if}}
          children: [
{{#if (and (eq group 'k8s') (eq short 'CustomResourceDefinition'))}}
            {
              path: '',
              name: '{{ group }}{{ short }}View',
              component: () => import('../../pages/{{category}}/{{ group }}/{{ short }}View.vue'),
              meta: {
                breadcrumb: i18n.global.t('view.breadcrumb'), icon: 'visibility', ns: {{toJson namespaced}}, useName: true,
                title: ({{#if namespaced}}namespace, {{/if}}name) => i18n.global.t('view.{{#if namespaced}}namespaced{{else}}cluster{{/if}}',{short: '{{ short }}',name{{#if namespaced}}, namespace{{/if}} })
              },
              children: [
                {name: 'CrdObjectClusterViewFromchildcoreCrdObject', path: 'childcoreCrdObject', redirect: to => { return {name: '{{ group }}{{ short }}View', params: to.params} }, meta: {animation: 'child'} },
              ]
            },
            {
              path: 'cl-view/:object',
              name: 'CrdObjectClusterView',
              component: () => import('../../pages/core/CrdObjectView.vue'),
              meta: {
                breadcrumb: arg => i18n.global.t('view.object',arg), icon: 'visibility', ns: false, useName: true, useObject: true,
                title: (name, object) => i18n.global.t('view.clusterObject',{ name, object })
              },
              children: [
                {name: 'CrdObjectClusterViewFromparent{{ group }}{{ short }}', path: 'parent{{ group }}{{ short }}', redirect: to => { return {name: 'CrdObjectClusterView', params: to.params} }, meta: {animation: 'parent'} },
              ]
            },
            {
              path: 'ns-view/:namespace/:object',
              name: 'CrdObjectNamespacedView',
              component: () => import('../../pages/core/CrdObjectView.vue'),
              meta: {
                breadcrumb: arg => i18n.global.t('view.object',arg), icon: 'visibility', ns: true, useName: true, useObject: true,
                title: (name, namespace, object) => i18n.global.t('view.namespacedObject',{ name, namespace, object })
              },
              children: [
                {name: 'CrdObjectNamespacedViewFromparent{{ group }}{{ short }}', path: 'parent{{ group }}{{ short }}', redirect: to => { return {name: 'CrdObjectNamespacedView', params: to.params} }, meta: {animation: 'parent'} },
              ]
            },
            {
              path: 'cl-edit/:object',
              name: 'CrdObjectClusterEdit',
              component: () => import('../../pages/core/CrdObjectEdit.vue'),
              meta: {
                breadcrumb: arg => i18n.global.t('edit.object',arg), icon: 'visibility', ns: false, useName: true, useObject: true,
                title: (name, object) => i18n.global.t('edit.clusterObject',{ name, object })
              },
              children: [
                {name: 'CrdObjectClusterEditFromparent{{ group }}{{ short }}', path: 'parent{{ group }}{{ short }}', redirect: to => { return {name: 'CrdObjectClusterEdit', params: to.params} }, meta: {animation: 'parent'} },
              ]
            },
            {
              path: 'ns-edit/:namespace/:object',
              name: 'CrdObjectNamespacedEdit',
              component: () => import('../../pages/core/CrdObjectEdit.vue'),
              meta: {
                breadcrumb: arg => i18n.global.t('edit.object',arg), icon: 'visibility', ns: true, useName: true, useObject: true,
                title: (name, namespace, object) => i18n.global.t('edit.namespacedObject',{ name, namespace, object })
              },
              children: [
                {name: 'CrdObjectNamespacedEditFromparent{{ group }}{{ short }}', path: 'parent{{ group }}{{ short }}', redirect: to => { return {name: 'CrdObjectNamespacedEdit', params: to.params} }, meta: {animation: 'parent'} },
              ]
            },
            {
              path: 'create/:namespace',
              name: 'CrdObjectNamespacedCreate',
              component: () => import('../../pages/core/CrdObjectNew.vue'),
              meta: {
                breadcrumb: i18n.global.t('new.breadcrumb'), icon: 'visibility', ns: true, useName: true,
                title: (namespace, name) => i18n.global.t('new.namespacedObject',{ name, namespace })
              },
              children: [
                {name: 'CrdObjectNamespacedCreateFromparent{{ group }}{{ short }}', path: 'parent{{ group }}{{ short }}', redirect: to => { return {name: 'CrdObjectNamespacedCreate', params: to.params} }, meta: {animation: 'parent'} },
              ]
            },
            {
              path: 'create',
              name: 'CrdObjectClusterCreate',
              component: () => import('../../pages/core/CrdObjectNew.vue'),
              meta: {
                breadcrumb: i18n.global.t('new.breadcrumb'), icon: 'visibility', ns: false, useName: true,
                title: (name) => i18n.global.t('new.clusterObject',{ name })
              },
              children: [
                {name: 'CrdObjectClusterCreateFromparent{{ group }}{{ short }}', path: 'parent{{ group }}{{ short }}', redirect: to => { return {name: 'CrdObjectClusterCreate', params: to.params} }, meta: {animation: 'parent'} },
              ]
            },
{{/if}}
{{#each resolvers}}
            {name: '{{ ../group }}{{ ../short }}ViewFrom{{name}}', path: '{{name}}', redirect: to => { return {name: '{{ ../group }}{{ ../short }}View', params: to.params} }, meta: {animation: '{{type}}'} },
{{/each}}
          ]
        },
        {
          path: '{{#if namespaced}}:namespace/{{/if}}edit/:name',
          name: '{{ group }}{{ short }}Edit',
          component: () => import('../../pages/{{category}}/{{ group }}/{{ short }}Edit.vue'),
          meta: {
            breadcrumb: arg => i18n.global.t('edit.name',arg), icon: 'edit', ns: {{toJson namespaced}}, useName: true,
            title: ({{#if namespaced}}namespace, {{/if}}name) => i18n.global.t('edit.{{#if namespaced}}namespaced{{else}}cluster{{/if}}',{short: '{{ short }}',name{{#if namespaced}}, namespace{{/if}} })
          },
        },
        {
          path: '{{#if namespaced}}:namespace/{{/if}}create',
          name: '{{ group }}{{ short }}Create',
          component: () => import('../../pages/{{category}}/{{ group }}/{{ short }}New.vue'),
          meta: {
            breadcrumb: i18n.global.t('new.breadcrumb'), icon: 'add', ns: {{toJson namespaced}},
            title: ({{#if namespaced}}namespace{{/if}}) => i18n.global.t('new.{{#if namespaced}}namespaced{{else}}cluster{{/if}}',{short: '{{ short }}'{{#if namespaced}}, namespace{{/if}} })
          },
        }
      ]
    }],
{{/each}}
  ].flat(),
}
export default route
