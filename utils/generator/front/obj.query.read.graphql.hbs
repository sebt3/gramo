{{#if namespaced}}
query {{ group }}{{ short }}Query($namespace: queryParameters, $obj: queryParameters{{#if detailed}}{{#each resolvers}}, ${{name}}: queryParameters{{/each}}{{/if}}) {
  k8sNamespace(params: $namespace) {
{{else}}
query {{ group }}{{ short }}Query($obj: queryParameters{{#if detailed}}{{#each resolvers}}, ${{name}}: queryParameters{{/each}}{{/if}}) {
{{/if}}
    {{ group }}{{ short }}(params: $obj) {
      metadata {
        name
{{#if namespaced}}
        namespace
{{/if}}
        annotations
        labels
        creationTimestamp
        uid
      }
      parentReference {
        name
        namespace
        group
        short
      }
{{#if detailed}}
  {{#each resolvers}}
      {{name}}(params: ${{name}}) {
    {{#if (or (and (eq group 'vynil') (or (eq resultShort 'Package') (eq resultShort 'Category'))) (eq resultGroup 'core') )}}
      {{#if (eq resultShort 'Package')}}
        name
        commit_id
        description
        consumevynilCategory {
          name
        }
        consumevynilDistrib {
          metadata {
            name
          }
        }
        options
      {{/if}}
      {{#if (eq resultShort 'Category')}}
        name
      {{/if}}
      {{#if (eq resultShort 'Url')}}
        proto
        host
        path
      {{/if}}
      {{#if (eq resultShort 'Problem')}}
        source
        description
      {{/if}}
      {{#if (eq resultShort 'Advice')}}
        source
        reason
        description
      {{/if}}
      {{#if (eq resultShort 'Container')}}
        namespace
        pod_name
        name
        init
        spec
        status
        getcoreLog(params: $childcoreContainer) {
          lines
        }
      {{/if}}
      {{#if (eq resultShort 'Event')}}
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
        source
        involvedObject
        type
        action
        count
        message
        reason
        reportingComponent
        reportingInstance
      {{/if}}
    {{else}}
        metadata {
          name
          namespace
          annotations
          labels
          creationTimestamp
          uid
        }
      {{#if (and (or (eq short 'Install') (eq short 'Kustomize')) (eq resultShort 'Ingress'))}}
        userscoreUrl {
          proto
          host
          path
        }
      {{/if}}
        getcoreProblem {
          source
          description
        }
        getcoreAdvice {
          source
          reason
          description
        }
      {{#each properties}}
        {{this}}
      {{/each}}
    {{/if}}
      }
  {{/each}}
{{else}}
      getcoreProblem {
        source
        description
      }
      getcoreAdvice {
        source
        reason
        description
      }
{{/if}}
{{#each readProperties}}
      {{this}}
{{/each}}
    }
{{#if namespaced}}
  }
{{/if}}
}
