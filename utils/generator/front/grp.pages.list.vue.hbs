<script setup lang="ts">
import {{ category }}Query from '@/queries/{{ name }}/{{ category }}.read.graphql'
import pieChart from '@/components/charts/pieChart.vue';
{{#each objects}}
import {{ group }}{{ short }}List from '@/components/{{ group }}/{{ short }}List.vue';
import { {{ short }}ListExcludes } from '../../../libs/{{ group }}/{{ short }}.js'
{{/each}}
import { ref, useCore, useNavigationStoreRef, useQuery } from '../../../libs/core';
const { onErrorHandler, setNamespaceFromRoute, isNamespaced } = useCore();
const ready = ref(false);
{{#each objects}}
{{#if namespaced}}
const {{ short }}ByTs = ref([]);
{{/if}}
{{/each}}
if (isNamespaced()) setNamespaceFromRoute();
const navigation = useNavigationStoreRef();
const { result, refetch, onResult, onError } = useQuery({{ category }}Query, {
{{#each objects}}
  "{{ short }}": {
    "filters": [],
    "excludes": {{ short }}ListExcludes
  },
{{/each}}
  "namespace": {
    "filters": isNamespaced()?[
      {
        "op": "eq",
        "path": "metadata/name",
        "value": navigation.currentNamespace
      }
    ]:[]
  }
}, { pollInterval: 2000 });
onError(onErrorHandler);
onResult((res) => {
  if ( !res.loading ) {
    ready.value = false;
{{#each objects}}
{{#if namespaced}}
    {{ short }}ByTs.value.length = 0;
    {{ short }}ByTs.value.push(...res.data.k8sNamespace.map(n => {return {name: n.metadata.name, value: n.{{ group }}{{ short }}.length}}).filter(n => n.value>0))
{{/if}}
{{/each}}
    ready.value = true;
  }
})
</script>
<template>
  <div class="row q-mb-sm q-ml-sm" v-if="!isNamespaced()">
{{#each objects}}
{{#if namespaced}}
    <div class="col-lg-4" v-if="ready && {{ short }}ByTs.length>1" >
      <q-card bordered class="q-ma-sm">
        <q-card-section class="text-center">
          <div class="text-h6 text-grey-8 q-mt-none q-mb-none q-pt-none q-pb-none">{{ short }} per namespace</div>
        </q-card-section>
        <q-card-section class="text-center">
          <pieChart v-model:datum="{{ short }}ByTs"></pieChart>
        </q-card-section>
      </q-card>
    </div>
{{/if}}
{{/each}}
  </div>
{{#each objects}}
{{#if namespaced}}
  <{{ group }}{{ short }}List @refresh="refetch()" :useAction="false"
    v-if="result !== undefined && result['k8sNamespace'] !== undefined && Array.isArray(result['k8sNamespace']) && result['k8sNamespace'].map(n=>n['{{ group }}{{ short }}']).flat().length>0"
    :model="result.k8sNamespace.map(x=>x.{{ group }}{{ short }}).flat()"
  />
{{else}}
  <{{ group }}{{ short }}List @refresh="refetch()" :useAction="false"
    v-if="result !== undefined && Array.isArray(result['{{ group }}{{ short }}']) && result['{{ group }}{{ short }}'].length>0"
    :model="result.{{ group }}{{ short }}"
  />
{{/if}}
{{/each}}
</template>