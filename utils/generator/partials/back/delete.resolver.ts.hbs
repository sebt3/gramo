{{#with ctx}}
    {{group}}{{short}}Delete: async (_parent, args: object) => {
        try {
{{#if (defined crd)}}
  {{#if namespaced}}
            const res = await k8sApi.deleteNamespacedCustomObject('{{apiGroup}}','{{apiVersion}}',args['namespace'],'{{crd.status.acceptedNames.plural}}', args['name'])
  {{else}}
            const res = await k8sApi.deleteClusterCustomObject('{{apiGroup}}','{{apiVersion}}','{{crd.status.acceptedNames.plural}}', args['name'])
  {{/if}}
{{else}}
            const res = await k8sApi.delete{{#if namespaced}}Namespaced{{/if}}{{ short }}(args['name']{{#if namespaced}}, args['namespace']{{/if}})
{{/if}}
            return {object: res.body}
        } catch (err) {
          if (typeof err === 'object' && (err as object)['body'] !=undefined && (err as object)['statusCode'] !=undefined) {
            if ((err as object)['statusCode'] != 404 && (err as object)['body']['reason']!='Forbidden') {
              log.error('error', (err as object)['body']);
            }
          } else {log.error('error', err)}
          if (typeof err === 'object') return {error: err}; else return {error: {err}}
        }
    },
{{/with}}