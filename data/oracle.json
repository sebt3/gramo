{
  "name": "oracle",
  "objects": [
    {
      "alternatives": [],
      "name": "com.oracle.mysql.v2.InnoDBCluster",
      "definition": {
        "type": "object",
        "required": [
          "spec"
        ],
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "spec": {
            "type": "object",
            "required": [
              "secretName"
            ],
            "properties": {
              "backupProfiles": {
                "description": "Backup profile specifications for the cluster, which can be referenced from backup schedules and one-off backup jobs",
                "type": "array",
                "items": {
                  "required": [
                    "name"
                  ],
                  "x-kubernetes-preserve-unknown-fields": true
                }
              },
              "backupSchedules": {
                "description": "Schedules for periodically executed backups",
                "type": "array",
                "items": {
                  "required": [
                    "name",
                    "schedule"
                  ],
                  "x-kubernetes-preserve-unknown-fields": true
                }
              },
              "baseServerId": {
                "description": "Base value for MySQL server_id for instances in the cluster",
                "type": "integer",
                "maximum": 4294967195,
                "minimum": 0
              },
              "datadirVolumeClaimTemplate": {
                "description": "Template for a PersistentVolumeClaim, to be used as datadir",
                "x-kubernetes-preserve-unknown-fields": true
              },
              "edition": {
                "description": "MySQL Server Edition (community or enterprise)",
                "type": "string",
                "pattern": "^(community|enterprise)$"
              },
              "imagePullPolicy": {
                "description": "Defaults to Always, but set to IfNotPresent in deploy-operator.yaml when deploying Operator",
                "type": "string"
              },
              "imagePullSecrets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                }
              },
              "imageRepository": {
                "description": "Repository where images are pulled from; defaults to container-registry.oracle.com/mysql",
                "type": "string"
              },
              "initDB": {
                "x-kubernetes-preserve-unknown-fields": true
              },
              "instances": {
                "description": "Number of MySQL replica instances for the cluster",
                "type": "integer",
                "maximum": 9,
                "minimum": 1
              },
              "keyring": {
                "description": "Keyring specification",
                "type": "object",
                "properties": {
                  "encryptedFile": {
                    "description": "Keyring 'Encrypted File' specification",
                    "type": "object",
                    "required": [
                      "fileName",
                      "storage",
                      "password"
                    ],
                    "properties": {
                      "fileName": {
                        "description": "Full path to the keyring file name inside the storage volume",
                        "type": "string"
                      },
                      "password": {
                        "description": "Name of a secret that contains password for the keyring in the key 'keyring_password'",
                        "type": "string"
                      },
                      "readOnly": {
                        "description": "Whether to open the keyring file in read-only mode",
                        "type": "boolean"
                      },
                      "storage": {
                        "description": "Specification of the volume to be mounted where the keyring file resides",
                        "x-kubernetes-preserve-unknown-fields": true
                      }
                    }
                  },
                  "file": {
                    "description": "Keyring 'File' specification",
                    "type": "object",
                    "required": [
                      "fileName",
                      "storage"
                    ],
                    "properties": {
                      "fileName": {
                        "description": "Full path to the keyring file name inside the storage volume",
                        "type": "string"
                      },
                      "readOnly": {
                        "description": "Whether to open the keyring file in read-only mode",
                        "type": "boolean"
                      },
                      "storage": {
                        "description": "Specification of the volume to be mounted where the keyring file resides",
                        "x-kubernetes-preserve-unknown-fields": true
                      }
                    }
                  },
                  "oci": {
                    "description": "Keyring 'OCI' specification",
                    "type": "object",
                    "required": [
                      "user",
                      "keySecret",
                      "keyFingerprint",
                      "tenancy"
                    ],
                    "properties": {
                      "caCertificate": {
                        "description": "Secret that contains ca.crt field with CA certificate bundle file that the keyring_oci plugin uses for Oracle Cloud Infrastructure certificate verification",
                        "type": "string"
                      },
                      "compartment": {
                        "description": "Compartment identifier in the form ocid1.compartment.oc1...",
                        "type": "string",
                        "pattern": "^ocid1\\.compartment\\."
                      },
                      "endpoints": {
                        "type": "object",
                        "properties": {
                          "encryption": {
                            "description": "Encryption endpoint URI like {identifier}-crypto.kms.{region}.oraclecloud.com",
                            "type": "string"
                          },
                          "management": {
                            "description": "Management endpoint URI like {identifier}-management.kms.{region}.oraclecloud.com",
                            "type": "string"
                          },
                          "secrets": {
                            "description": "Secrets endpoint URI like secrets.vaults.{region}.oci.oraclecloud.com",
                            "type": "string"
                          },
                          "vaults": {
                            "description": "Vaults endpoint URI like vaults.{region}.oci.oraclecloud.com",
                            "type": "string"
                          }
                        }
                      },
                      "keyFingerprint": {
                        "description": "Private key fingerprint",
                        "type": "string",
                        "pattern": "([0-9a-f]{2}:){15}[0-9a-f]{2}$"
                      },
                      "keySecret": {
                        "description": "A secret that contains the private key under the field 'privatekey'",
                        "type": "string"
                      },
                      "masterKey": {
                        "description": "Master key identified in the form ocid1.key.oc1...",
                        "type": "string",
                        "pattern": "^ocid1\\.key\\."
                      },
                      "tenancy": {
                        "description": "Tenancy identifier in the form ocid1.tenancy.oc1...",
                        "type": "string",
                        "pattern": "^ocid1\\.tenancy\\."
                      },
                      "user": {
                        "description": "User identifier in the form of ocid1.user.oc1...",
                        "type": "string",
                        "pattern": "^ocid1\\.user\\."
                      },
                      "virtualVault": {
                        "description": "Vault identifier in the form ocid1.vault.oc1...",
                        "type": "string",
                        "pattern": "^ocid1\\.vault\\."
                      }
                    }
                  }
                }
              },
              "logs": {
                "type": "object",
                "properties": {
                  "collector": {
                    "type": "object",
                    "properties": {
                      "containerName": {
                        "description": "Name of the collector container sidecar",
                        "type": "string"
                      },
                      "env": {
                        "type": "array",
                        "items": {
                          "description": "Environment variables to be passed to the image. Definition will be directly copied like podSpec fields are",
                          "x-kubernetes-preserve-unknown-fields": true
                        }
                      },
                      "fluentd": {
                        "description": "Properties of the fluentd log collector",
                        "type": "object",
                        "properties": {
                          "additionalFilterConfiguration": {
                            "description": "Raw configuration of additional Fluentd filters to be added to the configuration file",
                            "type": "string"
                          },
                          "errorLog": {
                            "type": "object",
                            "properties": {
                              "options": {
                                "description": "fluentd specific options for the error log",
                                "x-kubernetes-preserve-unknown-fields": true
                              },
                              "tag": {
                                "description": "Tag for the error log records",
                                "type": "string"
                              }
                            }
                          },
                          "generalLog": {
                            "type": "object",
                            "properties": {
                              "options": {
                                "description": "fluentd specific options for the general log",
                                "x-kubernetes-preserve-unknown-fields": true
                              },
                              "tag": {
                                "description": "Tag for the general log records",
                                "type": "string"
                              }
                            }
                          },
                          "recordAugmentation": {
                            "type": "object",
                            "properties": {
                              "annotations": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "fieldName",
                                    "annotationName"
                                  ],
                                  "properties": {
                                    "annotationName": {
                                      "description": "Name of the pod label that holds the value to be stored under fieldName in the log record",
                                      "type": "string"
                                    },
                                    "fieldName": {
                                      "description": "Name of the field added to the log record with value from annotationName",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "enabled": {
                                "description": "Whether to enable record augmentation with additional data",
                                "type": "boolean"
                              },
                              "labels": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "fieldName",
                                    "labelName"
                                  ],
                                  "properties": {
                                    "fieldName": {
                                      "description": "Name of the field added to the log record with value from labelName",
                                      "type": "string"
                                    },
                                    "labelName": {
                                      "description": "Name of the pod label that holds the value to be stored under fieldName in the log record",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "podFields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "fieldName",
                                    "fieldPath"
                                  ],
                                  "properties": {
                                    "fieldName": {
                                      "description": "Name of the field added to the log record with value taken from a field with path stored in fieldPath",
                                      "type": "string"
                                    },
                                    "fieldPath": {
                                      "description": "Value for the field fieldName. The path should be of the same syntax as the one used for mounting environment variables from field reference - valueFrom.fieldRef.fieldPath . The field will be mounted in the pod as a environment variable, prefixed with a prefix and used then added to the log record. Examples for fieldRef are : spec.nodeName, metadata.namespace, status.podIP, etc.",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "resourceFields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "fieldName",
                                    "containerName",
                                    "resource"
                                  ],
                                  "properties": {
                                    "containerName": {
                                      "type": "string"
                                    },
                                    "fieldName": {
                                      "description": "Name of the field added to the log record with value taken from a field with path stored in fieldPath",
                                      "type": "string"
                                    },
                                    "resource": {
                                      "description": "See https://kubernetes.io/docs/tasks/inject-data-application/environment-variable-expose-pod-information/#use-container-fields-as-values-for-environment-variables",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "staticFields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "fieldName",
                                    "fieldValue"
                                  ],
                                  "properties": {
                                    "fieldName": {
                                      "description": "Name of the field added to the log record with value from fieldValue",
                                      "type": "string"
                                    },
                                    "fieldValue": {
                                      "description": "Value for the static field with name taken from fieldName",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "sinks": {
                            "type": "array",
                            "items": {
                              "required": [
                                "name",
                                "rawConfig"
                              ],
                              "x-kubernetes-preserve-unknown-fields": true
                            }
                          },
                          "slowQueryLog": {
                            "type": "object",
                            "properties": {
                              "options": {
                                "description": "fluentd specific options for the slow log",
                                "x-kubernetes-preserve-unknown-fields": true
                              },
                              "tag": {
                                "description": "Tag for the slow log records",
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "image": {
                        "description": "Name of an image, including registry and repository, to be used for the log collector sidecar. If provided it needs to be an image for the configured collector type.",
                        "type": "string"
                      }
                    }
                  },
                  "error": {
                    "type": "object",
                    "properties": {
                      "collect": {
                        "description": "Whether error logging data should be collected. Implies that the logging should be enabled. If enabled the error log will be switched to JSON format output",
                        "type": "boolean"
                      },
                      "verbosity": {
                        "description": "Log error verbosity. For details, see the MySQL Server --log-error-verbosity documentation.",
                        "type": "integer",
                        "maximum": 3,
                        "minimum": 1
                      }
                    }
                  },
                  "general": {
                    "type": "object",
                    "properties": {
                      "collect": {
                        "description": "Whether general logging data should be collected. Implies that the logging should be enabled.",
                        "type": "boolean"
                      },
                      "enabled": {
                        "description": "Whether general logging should be enabled",
                        "type": "boolean"
                      }
                    }
                  },
                  "slowQuery": {
                    "type": "object",
                    "properties": {
                      "collect": {
                        "description": "Whether slow query logging data should be collected. Implies that the logging should be enabled.",
                        "type": "boolean"
                      },
                      "enabled": {
                        "description": "Whether slow query logging should be enabled",
                        "type": "boolean"
                      },
                      "longQueryTime": {
                        "description": "Long query time threshold",
                        "type": "number",
                        "minimum": 0
                      }
                    }
                  }
                }
              },
              "metrics": {
                "description": "Configuration of a Prometheus-style metrics provider",
                "type": "object",
                "required": [
                  "enable",
                  "image"
                ],
                "properties": {
                  "enable": {
                    "description": "Toggle to enable or disable the metrics sidecar",
                    "type": "boolean"
                  },
                  "image": {
                    "description": "Name of an image to be used for the metrics sidecar, if provided metrics will be enabled",
                    "type": "string"
                  },
                  "monitor": {
                    "description": "Create a ServiceMonitor for Prometheus Operator",
                    "type": "boolean"
                  },
                  "monitorSpec": {
                    "description": "Custom configuration for the ServiceMonitor object",
                    "x-kubernetes-preserve-unknown-fields": true
                  },
                  "options": {
                    "description": "Options passed to the metrics provider as command line arguments",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "tlsSecret": {
                    "description": "Name of a Secret with TLS certificate, key and CA, which will be mounted at /tls into the container an can be used from webConfig",
                    "type": "string"
                  },
                  "webConfig": {
                    "description": "Name of a ConfigMap with a web.config file, if this option is provided a command line option --web.config.file is added",
                    "type": "string"
                  }
                }
              },
              "mycnf": {
                "description": "Custom configuration additions for my.cnf",
                "type": "string"
              },
              "podAnnotations": {
                "x-kubernetes-preserve-unknown-fields": true
              },
              "podLabels": {
                "x-kubernetes-preserve-unknown-fields": true
              },
              "podSpec": {
                "x-kubernetes-preserve-unknown-fields": true
              },
              "readReplicas": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "name",
                    "baseServerId"
                  ],
                  "properties": {
                    "baseServerId": {
                      "description": "Base value for MySQL server_id for instances of the readReplica, if 0 it will be assigned automatically",
                      "type": "integer",
                      "maximum": 4294967195,
                      "minimum": 0
                    },
                    "datadirVolumeClaimTemplate": {
                      "description": "Template for a PersistentVolumeClaim, to be used as datadir",
                      "x-kubernetes-preserve-unknown-fields": true
                    },
                    "instances": {
                      "description": "Number of MySQL instances for the set of read replica",
                      "type": "integer",
                      "maximum": 999,
                      "minimum": 1
                    },
                    "mycnf": {
                      "description": "Custom configuration additions for my.cnf",
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "podAnnotations": {
                      "x-kubernetes-preserve-unknown-fields": true
                    },
                    "podLabels": {
                      "x-kubernetes-preserve-unknown-fields": true
                    },
                    "podSpec": {
                      "x-kubernetes-preserve-unknown-fields": true
                    },
                    "version": {
                      "description": "MySQL Server version",
                      "type": "string",
                      "pattern": "^\\d+\\.\\d+\\.\\d+(-.+)?"
                    }
                  }
                }
              },
              "router": {
                "description": "MySQL Router specification",
                "type": "object",
                "properties": {
                  "bootstrapOptions": {
                    "description": "Command line options passed to MySQL Router while bootstrapping",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "instances": {
                    "description": "Number of MySQL Router instances to deploy",
                    "type": "integer",
                    "minimum": 0
                  },
                  "options": {
                    "description": "Command line options passed to MySQL Router while running",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "podAnnotations": {
                    "x-kubernetes-preserve-unknown-fields": true
                  },
                  "podLabels": {
                    "x-kubernetes-preserve-unknown-fields": true
                  },
                  "podSpec": {
                    "x-kubernetes-preserve-unknown-fields": true
                  },
                  "routingOptions": {
                    "description": "Set routing options for the cluster",
                    "type": "object",
                    "properties": {
                      "invalidated_cluster_policy": {
                        "type": "string",
                        "enum": [
                          "drop_all",
                          "accept_ro"
                        ]
                      },
                      "read_only_targets": {
                        "type": "string",
                        "enum": [
                          "all",
                          "read_replicas",
                          "secondaries"
                        ]
                      },
                      "stats_updates_frequency": {
                        "type": "integer",
                        "minimum": 0
                      }
                    }
                  },
                  "tlsSecretName": {
                    "description": "Name of a TLS type Secret containing MySQL Router certificate and private key used for SSL",
                    "type": "string"
                  },
                  "version": {
                    "description": "Override MySQL Router version",
                    "type": "string",
                    "pattern": "^\\d+\\.\\d+\\.\\d+(-.+)?"
                  }
                }
              },
              "secretName": {
                "description": "Name of a generic type Secret containing root/default account password",
                "type": "string"
              },
              "service": {
                "description": "Configuration of the Service used by applications connecting to the InnoDB Cluster",
                "type": "object",
                "properties": {
                  "annotations": {
                    "description": "Custom annotations for the Service",
                    "x-kubernetes-preserve-unknown-fields": true
                  },
                  "defaultPort": {
                    "description": "Target for the Service's default (3306) port. If mysql-rw traffic will go to the primary and allow read and write operations, with mysql-ro traffic goes to the replica and allows only read operations, with mysql-rw-split the router's read-write-splitting will be targeted",
                    "type": "string",
                    "enum": [
                      "mysql-rw",
                      "mysql-ro",
                      "mysql-rw-split"
                    ]
                  },
                  "labels": {
                    "description": "Custom labels for the Service",
                    "x-kubernetes-preserve-unknown-fields": true
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "ClusterIP",
                      "NodePort",
                      "LoadBalancer"
                    ]
                  }
                }
              },
              "serviceAccountName": {
                "type": "string"
              },
              "tlsCASecretName": {
                "description": "Name of a generic type Secret containing CA (ca.pem) and optional CRL (crl.pem) for SSL",
                "type": "string"
              },
              "tlsSecretName": {
                "description": "Name of a TLS type Secret containing Server certificate and private key for SSL",
                "type": "string"
              },
              "tlsUseSelfSigned": {
                "description": "Enables use of self-signed TLS certificates, reducing or disabling TLS based security verifications",
                "type": "boolean"
              },
              "version": {
                "description": "MySQL Server version",
                "type": "string",
                "pattern": "^\\d+\\.\\d+\\.\\d+(-.+)?"
              }
            }
          },
          "status": {
            "x-kubernetes-preserve-unknown-fields": true
          }
        },
        "x-kubernetes-group-version-kind": [
          {
            "group": "mysql.oracle.com",
            "kind": "InnoDBCluster",
            "version": "v2"
          }
        ]
      },
      "crd": {
        "metadata": {
          "name": "innodbclusters.mysql.oracle.com",
          "uid": "ba2bbb36-0273-49ce-8d5f-16fc3a107e52",
          "resourceVersion": "104674809",
          "generation": 1,
          "creationTimestamp": "2024-01-18T17:34:17Z",
          "managedFields": [
            {
              "manager": "kube-apiserver",
              "operation": "Update",
              "apiVersion": "apiextensions.k8s.io/v1",
              "time": "2024-01-18T17:34:17Z",
              "fieldsType": "FieldsV1",
              "fieldsV1": {
                "f:status": {
                  "f:acceptedNames": {
                    "f:kind": {},
                    "f:listKind": {},
                    "f:plural": {},
                    "f:shortNames": {},
                    "f:singular": {}
                  },
                  "f:conditions": {
                    "k:{\"type\":\"Established\"}": {
                      ".": {},
                      "f:lastTransitionTime": {},
                      "f:message": {},
                      "f:reason": {},
                      "f:status": {},
                      "f:type": {}
                    },
                    "k:{\"type\":\"NamesAccepted\"}": {
                      ".": {},
                      "f:lastTransitionTime": {},
                      "f:message": {},
                      "f:reason": {},
                      "f:status": {},
                      "f:type": {}
                    }
                  }
                }
              },
              "subresource": "status"
            },
            {
              "manager": "kubectl-create",
              "operation": "Update",
              "apiVersion": "apiextensions.k8s.io/v1",
              "time": "2024-01-18T17:34:17Z",
              "fieldsType": "FieldsV1",
              "fieldsV1": {
                "f:spec": {
                  "f:conversion": {
                    ".": {},
                    "f:strategy": {}
                  },
                  "f:group": {},
                  "f:names": {
                    "f:kind": {},
                    "f:listKind": {},
                    "f:plural": {},
                    "f:shortNames": {},
                    "f:singular": {}
                  },
                  "f:scope": {},
                  "f:versions": {}
                }
              }
            }
          ]
        },
        "spec": {
          "group": "mysql.oracle.com",
          "names": {
            "plural": "innodbclusters",
            "singular": "innodbcluster",
            "shortNames": [
              "ic",
              "ics"
            ],
            "kind": "InnoDBCluster",
            "listKind": "InnoDBClusterList"
          },
          "scope": "Namespaced",
          "versions": [
            {
              "name": "v2",
              "served": true,
              "storage": true,
              "schema": {
                "openAPIV3Schema": {
                  "type": "object",
                  "required": [
                    "spec"
                  ],
                  "properties": {
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "maxLength": 40
                        }
                      }
                    },
                    "spec": {
                      "type": "object",
                      "required": [
                        "secretName"
                      ],
                      "properties": {
                        "backupProfiles": {
                          "description": "Backup profile specifications for the cluster, which can be referenced from backup schedules and one-off backup jobs",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "dumpInstance": {
                                "type": "object",
                                "properties": {
                                  "dumpOptions": {
                                    "description": "A dictionary of key-value pairs passed directly to MySQL Shell's DumpInstance()",
                                    "type": "object",
                                    "x-kubernetes-preserve-unknown-fields": true
                                  },
                                  "storage": {
                                    "type": "object",
                                    "properties": {
                                      "azure": {
                                        "type": "object",
                                        "required": [
                                          "containerName",
                                          "config"
                                        ],
                                        "properties": {
                                          "config": {
                                            "description": "Name of a Secret with Azure BLOB Storage configuration and credentials",
                                            "type": "string"
                                          },
                                          "containerName": {
                                            "description": "Name of the Azure  BLOB Storage container where the dump is stored",
                                            "type": "string"
                                          },
                                          "prefix": {
                                            "description": "Path in the container where the dump files are stored",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "ociObjectStorage": {
                                        "type": "object",
                                        "required": [
                                          "bucketName",
                                          "credentials"
                                        ],
                                        "properties": {
                                          "bucketName": {
                                            "description": "Name of the OCI bucket where backup is stored",
                                            "type": "string"
                                          },
                                          "credentials": {
                                            "description": "Name of a Secret with data for accessing the bucket",
                                            "type": "string"
                                          },
                                          "prefix": {
                                            "description": "Path in bucket where backup is stored",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "persistentVolumeClaim": {
                                        "description": "Specification of the PVC to be used. Used 'as is' in pod executing the backup.",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                      },
                                      "s3": {
                                        "type": "object",
                                        "required": [
                                          "bucketName",
                                          "config"
                                        ],
                                        "properties": {
                                          "bucketName": {
                                            "description": "Name of the S3 bucket where the dump is stored",
                                            "type": "string"
                                          },
                                          "config": {
                                            "description": "Name of a Secret with S3 configuration and credentials",
                                            "type": "string"
                                          },
                                          "endpoint": {
                                            "description": "Override endpoint URL",
                                            "type": "string"
                                          },
                                          "prefix": {
                                            "description": "Path in the bucket where the dump files are stored",
                                            "type": "string"
                                          },
                                          "profile": {
                                            "description": "Profile being used in configuration files",
                                            "type": "string",
                                            "default": ""
                                          }
                                        }
                                      }
                                    },
                                    "x-kubernetes-preserve-unknown-fields": true
                                  }
                                }
                              },
                              "name": {
                                "description": "Embedded backup profile, referenced as backupProfileName elsewhere",
                                "type": "string"
                              },
                              "podAnnotations": {
                                "type": "object",
                                "x-kubernetes-preserve-unknown-fields": true
                              },
                              "podLabels": {
                                "type": "object",
                                "x-kubernetes-preserve-unknown-fields": true
                              },
                              "snapshot": {
                                "type": "object",
                                "properties": {
                                  "storage": {
                                    "type": "object",
                                    "properties": {
                                      "azure": {
                                        "type": "object",
                                        "required": [
                                          "containerName",
                                          "config"
                                        ],
                                        "properties": {
                                          "config": {
                                            "description": "Name of a Secret with Azure BLOB Storage configuration and credentials",
                                            "type": "string"
                                          },
                                          "containerName": {
                                            "description": "Name of the Azure  BLOB Storage container where the dump is stored",
                                            "type": "string"
                                          },
                                          "prefix": {
                                            "description": "Path in the container where the dump files are stored",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "ociObjectStorage": {
                                        "type": "object",
                                        "required": [
                                          "bucketName",
                                          "credentials"
                                        ],
                                        "properties": {
                                          "bucketName": {
                                            "description": "Bucket name where backup is stored",
                                            "type": "string"
                                          },
                                          "credentials": {
                                            "description": "Name of a Secret with data for accessing the bucket",
                                            "type": "string"
                                          },
                                          "prefix": {
                                            "description": "Path in bucket where backup is stored",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "persistentVolumeClaim": {
                                        "description": "Specification of the PVC to be used. Used 'as is' in pod executing the backup.",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                      },
                                      "s3": {
                                        "type": "object",
                                        "required": [
                                          "bucketName",
                                          "config"
                                        ],
                                        "properties": {
                                          "bucketName": {
                                            "description": "Name of the S3 bucket where the dump is stored",
                                            "type": "string"
                                          },
                                          "config": {
                                            "description": "Name of a Secret with S3 configuration and credentials",
                                            "type": "string"
                                          },
                                          "endpoint": {
                                            "description": "Override endpoint URL",
                                            "type": "string"
                                          },
                                          "prefix": {
                                            "description": "Path in the bucket where the dump files are stored",
                                            "type": "string"
                                          },
                                          "profile": {
                                            "description": "Profile being used in configuration files",
                                            "type": "string",
                                            "default": ""
                                          }
                                        }
                                      }
                                    },
                                    "x-kubernetes-preserve-unknown-fields": true
                                  }
                                }
                              }
                            },
                            "x-kubernetes-preserve-unknown-fields": true
                          }
                        },
                        "backupSchedules": {
                          "description": "Schedules for periodically executed backups",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "name",
                              "schedule"
                            ],
                            "properties": {
                              "backupProfile": {
                                "description": "backupProfile specification if backupProfileName is not specified",
                                "type": "object",
                                "properties": {
                                  "dumpInstance": {
                                    "type": "object",
                                    "properties": {
                                      "dumpOptions": {
                                        "description": "A dictionary of key-value pairs passed directly to MySQL Shell's DumpInstance()",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                      },
                                      "storage": {
                                        "type": "object",
                                        "properties": {
                                          "azure": {
                                            "type": "object",
                                            "required": [
                                              "containerName",
                                              "config"
                                            ],
                                            "properties": {
                                              "config": {
                                                "description": "Name of a Secret with Azure BLOB Storage configuration and credentials",
                                                "type": "string"
                                              },
                                              "containerName": {
                                                "description": "Name of the Azure  BLOB Storage container where the dump is stored",
                                                "type": "string"
                                              },
                                              "prefix": {
                                                "description": "Path in the container where the dump files are stored",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "ociObjectStorage": {
                                            "type": "object",
                                            "required": [
                                              "bucketName",
                                              "credentials"
                                            ],
                                            "properties": {
                                              "bucketName": {
                                                "description": "Name of the OCI Bucket where backup is stored",
                                                "type": "string"
                                              },
                                              "credentials": {
                                                "description": "Name of a Secret with data for accessing the bucket",
                                                "type": "string"
                                              },
                                              "prefix": {
                                                "description": "Path in bucket where backup is stored",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "persistentVolumeClaim": {
                                            "description": "Specification of the PVC to be used. Used 'as is' in pod executing the backup.",
                                            "type": "object",
                                            "x-kubernetes-preserve-unknown-fields": true
                                          },
                                          "s3": {
                                            "type": "object",
                                            "required": [
                                              "bucketName",
                                              "config"
                                            ],
                                            "properties": {
                                              "bucketName": {
                                                "description": "Name of the S3 bucket where the dump is stored",
                                                "type": "string"
                                              },
                                              "config": {
                                                "description": "Name of a Secret with S3 configuration and credentials",
                                                "type": "string"
                                              },
                                              "endpoint": {
                                                "description": "Override endpoint URL",
                                                "type": "string"
                                              },
                                              "prefix": {
                                                "description": "Path in the bucket where the dump files are stored",
                                                "type": "string"
                                              },
                                              "profile": {
                                                "description": "Profile being used in configuration files",
                                                "type": "string",
                                                "default": ""
                                              }
                                            }
                                          }
                                        },
                                        "x-kubernetes-preserve-unknown-fields": true
                                      }
                                    }
                                  },
                                  "podAnnotations": {
                                    "type": "object",
                                    "x-kubernetes-preserve-unknown-fields": true
                                  },
                                  "podLabels": {
                                    "type": "object",
                                    "x-kubernetes-preserve-unknown-fields": true
                                  }
                                },
                                "x-kubernetes-preserve-unknown-fields": true
                              },
                              "backupProfileName": {
                                "description": "Name of the backupProfile to be used",
                                "type": "string"
                              },
                              "deleteBackupData": {
                                "description": "Whether to delete the backup data in case the MySQLBackup object created by the job is deleted",
                                "type": "boolean",
                                "default": false
                              },
                              "enabled": {
                                "description": "Whether the schedule is enabled or not",
                                "type": "boolean",
                                "default": true
                              },
                              "name": {
                                "description": "Name of the backup schedule",
                                "type": "string"
                              },
                              "schedule": {
                                "description": "The schedule of the job, syntax as a cron expression",
                                "type": "string"
                              }
                            },
                            "x-kubernetes-preserve-unknown-fields": true
                          }
                        },
                        "baseServerId": {
                          "description": "Base value for MySQL server_id for instances in the cluster",
                          "type": "integer",
                          "default": 1000,
                          "maximum": 4294967195,
                          "minimum": 0
                        },
                        "datadirVolumeClaimTemplate": {
                          "description": "Template for a PersistentVolumeClaim, to be used as datadir",
                          "type": "object",
                          "x-kubernetes-preserve-unknown-fields": true
                        },
                        "edition": {
                          "description": "MySQL Server Edition (community or enterprise)",
                          "type": "string",
                          "pattern": "^(community|enterprise)$"
                        },
                        "imagePullPolicy": {
                          "description": "Defaults to Always, but set to IfNotPresent in deploy-operator.yaml when deploying Operator",
                          "type": "string"
                        },
                        "imagePullSecrets": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "imageRepository": {
                          "description": "Repository where images are pulled from; defaults to container-registry.oracle.com/mysql",
                          "type": "string"
                        },
                        "initDB": {
                          "type": "object",
                          "properties": {
                            "clone": {
                              "type": "object",
                              "required": [
                                "donorUrl",
                                "secretKeyRef"
                              ],
                              "properties": {
                                "donorUrl": {
                                  "description": "URL of the cluster to clone from",
                                  "type": "string"
                                },
                                "rootUser": {
                                  "description": "User name used for cloning",
                                  "type": "string",
                                  "default": "root"
                                },
                                "secretKeyRef": {
                                  "type": "object",
                                  "required": [
                                    "name"
                                  ],
                                  "properties": {
                                    "name": {
                                      "description": "Secret name with key 'rootPassword' storing the password for the user specified in rootUser",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "dump": {
                              "type": "object",
                              "required": [
                                "storage"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Name of the dump. Not used by the operator, but a descriptive hint for the cluster administrator",
                                  "type": "string"
                                },
                                "options": {
                                  "description": "A dictionary of key-value pairs passed directly to MySQL Shell's loadDump()",
                                  "type": "object",
                                  "x-kubernetes-preserve-unknown-fields": true
                                },
                                "path": {
                                  "description": "Path to the dump in the PVC. Use when specifying persistentVolumeClaim. Omit for ociObjectStorage, S3, or azure.",
                                  "type": "string"
                                },
                                "storage": {
                                  "type": "object",
                                  "properties": {
                                    "azure": {
                                      "type": "object",
                                      "required": [
                                        "containerName",
                                        "prefix",
                                        "config"
                                      ],
                                      "properties": {
                                        "config": {
                                          "description": "Name of a Secret with Azure BLOB Storage configuration and credentials",
                                          "type": "string"
                                        },
                                        "containerName": {
                                          "description": "Name of the Azure  BLOB Storage container where the dump is stored",
                                          "type": "string"
                                        },
                                        "prefix": {
                                          "description": "Path in the container where the dump files are stored",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "ociObjectStorage": {
                                      "type": "object",
                                      "required": [
                                        "bucketName",
                                        "prefix",
                                        "credentials"
                                      ],
                                      "properties": {
                                        "bucketName": {
                                          "description": "Name of the OCI bucket where the dump is stored",
                                          "type": "string"
                                        },
                                        "credentials": {
                                          "description": "Name of a Secret with data for accessing the bucket",
                                          "type": "string"
                                        },
                                        "prefix": {
                                          "description": "Path in the bucket where the dump files are stored",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "persistentVolumeClaim": {
                                      "description": "Specification of the PVC to be used. Used 'as is' in the cloning pod.",
                                      "type": "object",
                                      "x-kubernetes-preserve-unknown-fields": true
                                    },
                                    "s3": {
                                      "type": "object",
                                      "required": [
                                        "bucketName",
                                        "prefix",
                                        "config"
                                      ],
                                      "properties": {
                                        "bucketName": {
                                          "description": "Name of the S3 bucket where the dump is stored",
                                          "type": "string"
                                        },
                                        "config": {
                                          "description": "Name of a Secret with S3 configuration and credentials",
                                          "type": "string"
                                        },
                                        "endpoint": {
                                          "description": "Override endpoint URL",
                                          "type": "string"
                                        },
                                        "prefix": {
                                          "description": "Path in the bucket where the dump files are stored",
                                          "type": "string"
                                        },
                                        "profile": {
                                          "description": "Profile being used in configuration files",
                                          "type": "string",
                                          "default": ""
                                        }
                                      }
                                    }
                                  },
                                  "x-kubernetes-preserve-unknown-fields": true
                                }
                              }
                            }
                          },
                          "x-kubernetes-preserve-unknown-fields": true
                        },
                        "instances": {
                          "description": "Number of MySQL replica instances for the cluster",
                          "type": "integer",
                          "default": 1,
                          "maximum": 9,
                          "minimum": 1
                        },
                        "keyring": {
                          "description": "Keyring specification",
                          "type": "object",
                          "properties": {
                            "encryptedFile": {
                              "description": "Keyring 'Encrypted File' specification",
                              "type": "object",
                              "required": [
                                "fileName",
                                "storage",
                                "password"
                              ],
                              "properties": {
                                "fileName": {
                                  "description": "Full path to the keyring file name inside the storage volume",
                                  "type": "string"
                                },
                                "password": {
                                  "description": "Name of a secret that contains password for the keyring in the key 'keyring_password'",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "description": "Whether to open the keyring file in read-only mode",
                                  "type": "boolean",
                                  "default": false
                                },
                                "storage": {
                                  "description": "Specification of the volume to be mounted where the keyring file resides",
                                  "type": "object",
                                  "x-kubernetes-preserve-unknown-fields": true
                                }
                              }
                            },
                            "file": {
                              "description": "Keyring 'File' specification",
                              "type": "object",
                              "required": [
                                "fileName",
                                "storage"
                              ],
                              "properties": {
                                "fileName": {
                                  "description": "Full path to the keyring file name inside the storage volume",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "description": "Whether to open the keyring file in read-only mode",
                                  "type": "boolean",
                                  "default": false
                                },
                                "storage": {
                                  "description": "Specification of the volume to be mounted where the keyring file resides",
                                  "type": "object",
                                  "x-kubernetes-preserve-unknown-fields": true
                                }
                              }
                            },
                            "oci": {
                              "description": "Keyring 'OCI' specification",
                              "type": "object",
                              "required": [
                                "user",
                                "keySecret",
                                "keyFingerprint",
                                "tenancy"
                              ],
                              "properties": {
                                "caCertificate": {
                                  "description": "Secret that contains ca.crt field with CA certificate bundle file that the keyring_oci plugin uses for Oracle Cloud Infrastructure certificate verification",
                                  "type": "string"
                                },
                                "compartment": {
                                  "description": "Compartment identifier in the form ocid1.compartment.oc1...",
                                  "type": "string",
                                  "pattern": "^ocid1\\.compartment\\."
                                },
                                "endpoints": {
                                  "type": "object",
                                  "properties": {
                                    "encryption": {
                                      "description": "Encryption endpoint URI like {identifier}-crypto.kms.{region}.oraclecloud.com",
                                      "type": "string"
                                    },
                                    "management": {
                                      "description": "Management endpoint URI like {identifier}-management.kms.{region}.oraclecloud.com",
                                      "type": "string"
                                    },
                                    "secrets": {
                                      "description": "Secrets endpoint URI like secrets.vaults.{region}.oci.oraclecloud.com",
                                      "type": "string"
                                    },
                                    "vaults": {
                                      "description": "Vaults endpoint URI like vaults.{region}.oci.oraclecloud.com",
                                      "type": "string"
                                    }
                                  }
                                },
                                "keyFingerprint": {
                                  "description": "Private key fingerprint",
                                  "type": "string",
                                  "pattern": "([0-9a-f]{2}:){15}[0-9a-f]{2}$"
                                },
                                "keySecret": {
                                  "description": "A secret that contains the private key under the field 'privatekey'",
                                  "type": "string"
                                },
                                "masterKey": {
                                  "description": "Master key identified in the form ocid1.key.oc1...",
                                  "type": "string",
                                  "pattern": "^ocid1\\.key\\."
                                },
                                "tenancy": {
                                  "description": "Tenancy identifier in the form ocid1.tenancy.oc1...",
                                  "type": "string",
                                  "pattern": "^ocid1\\.tenancy\\."
                                },
                                "user": {
                                  "description": "User identifier in the form of ocid1.user.oc1...",
                                  "type": "string",
                                  "pattern": "^ocid1\\.user\\."
                                },
                                "virtualVault": {
                                  "description": "Vault identifier in the form ocid1.vault.oc1...",
                                  "type": "string",
                                  "pattern": "^ocid1\\.vault\\."
                                }
                              }
                            }
                          }
                        },
                        "logs": {
                          "type": "object",
                          "properties": {
                            "collector": {
                              "type": "object",
                              "oneOf": [
                                {
                                  "required": [
                                    "image",
                                    "fluentd"
                                  ]
                                }
                              ],
                              "properties": {
                                "containerName": {
                                  "description": "Name of the collector container sidecar",
                                  "type": "string",
                                  "default": "logcollector"
                                },
                                "env": {
                                  "type": "array",
                                  "items": {
                                    "description": "Environment variables to be passed to the image. Definition will be directly copied like podSpec fields are",
                                    "type": "object",
                                    "x-kubernetes-preserve-unknown-fields": true
                                  }
                                },
                                "fluentd": {
                                  "description": "Properties of the fluentd log collector",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "sinks"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "additionalFilterConfiguration": {
                                      "description": "Raw configuration of additional Fluentd filters to be added to the configuration file",
                                      "type": "string"
                                    },
                                    "errorLog": {
                                      "type": "object",
                                      "properties": {
                                        "options": {
                                          "description": "fluentd specific options for the error log",
                                          "type": "object",
                                          "x-kubernetes-preserve-unknown-fields": true
                                        },
                                        "tag": {
                                          "description": "Tag for the error log records",
                                          "type": "string",
                                          "default": ""
                                        }
                                      }
                                    },
                                    "generalLog": {
                                      "type": "object",
                                      "properties": {
                                        "options": {
                                          "description": "fluentd specific options for the general log",
                                          "type": "object",
                                          "x-kubernetes-preserve-unknown-fields": true
                                        },
                                        "tag": {
                                          "description": "Tag for the general log records",
                                          "type": "string",
                                          "default": ""
                                        }
                                      }
                                    },
                                    "recordAugmentation": {
                                      "type": "object",
                                      "properties": {
                                        "annotations": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "fieldName",
                                              "annotationName"
                                            ],
                                            "properties": {
                                              "annotationName": {
                                                "description": "Name of the pod label that holds the value to be stored under fieldName in the log record",
                                                "type": "string"
                                              },
                                              "fieldName": {
                                                "description": "Name of the field added to the log record with value from annotationName",
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "enabled": {
                                          "description": "Whether to enable record augmentation with additional data",
                                          "type": "boolean",
                                          "default": false
                                        },
                                        "labels": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "fieldName",
                                              "labelName"
                                            ],
                                            "properties": {
                                              "fieldName": {
                                                "description": "Name of the field added to the log record with value from labelName",
                                                "type": "string"
                                              },
                                              "labelName": {
                                                "description": "Name of the pod label that holds the value to be stored under fieldName in the log record",
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "podFields": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "fieldName",
                                              "fieldPath"
                                            ],
                                            "properties": {
                                              "fieldName": {
                                                "description": "Name of the field added to the log record with value taken from a field with path stored in fieldPath",
                                                "type": "string"
                                              },
                                              "fieldPath": {
                                                "description": "Value for the field fieldName. The path should be of the same syntax as the one used for mounting environment variables from field reference - valueFrom.fieldRef.fieldPath . The field will be mounted in the pod as a environment variable, prefixed with a prefix and used then added to the log record. Examples for fieldRef are : spec.nodeName, metadata.namespace, status.podIP, etc.",
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "resourceFields": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "fieldName",
                                              "containerName",
                                              "resource"
                                            ],
                                            "properties": {
                                              "containerName": {
                                                "type": "string"
                                              },
                                              "fieldName": {
                                                "description": "Name of the field added to the log record with value taken from a field with path stored in fieldPath",
                                                "type": "string"
                                              },
                                              "resource": {
                                                "description": "See https://kubernetes.io/docs/tasks/inject-data-application/environment-variable-expose-pod-information/#use-container-fields-as-values-for-environment-variables",
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "staticFields": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "fieldName",
                                              "fieldValue"
                                            ],
                                            "properties": {
                                              "fieldName": {
                                                "description": "Name of the field added to the log record with value from fieldValue",
                                                "type": "string"
                                              },
                                              "fieldValue": {
                                                "description": "Value for the static field with name taken from fieldName",
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "sinks": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "name",
                                          "rawConfig"
                                        ],
                                        "properties": {
                                          "name": {
                                            "description": "Name of the sink. Used only for documentation purposes",
                                            "type": "string"
                                          },
                                          "rawConfig": {
                                            "description": "Raw configuration of the sink",
                                            "type": "string"
                                          }
                                        },
                                        "x-kubernetes-preserve-unknown-fields": true
                                      }
                                    },
                                    "slowQueryLog": {
                                      "type": "object",
                                      "properties": {
                                        "options": {
                                          "description": "fluentd specific options for the slow log",
                                          "type": "object",
                                          "x-kubernetes-preserve-unknown-fields": true
                                        },
                                        "tag": {
                                          "description": "Tag for the slow log records",
                                          "type": "string",
                                          "default": ""
                                        }
                                      }
                                    }
                                  }
                                },
                                "image": {
                                  "description": "Name of an image, including registry and repository, to be used for the log collector sidecar. If provided it needs to be an image for the configured collector type.",
                                  "type": "string"
                                }
                              }
                            },
                            "error": {
                              "type": "object",
                              "properties": {
                                "collect": {
                                  "description": "Whether error logging data should be collected. Implies that the logging should be enabled. If enabled the error log will be switched to JSON format output",
                                  "type": "boolean",
                                  "default": false
                                },
                                "verbosity": {
                                  "description": "Log error verbosity. For details, see the MySQL Server --log-error-verbosity documentation.",
                                  "type": "integer",
                                  "default": 3,
                                  "maximum": 3,
                                  "minimum": 1
                                }
                              }
                            },
                            "general": {
                              "type": "object",
                              "properties": {
                                "collect": {
                                  "description": "Whether general logging data should be collected. Implies that the logging should be enabled.",
                                  "type": "boolean",
                                  "default": false
                                },
                                "enabled": {
                                  "description": "Whether general logging should be enabled",
                                  "type": "boolean",
                                  "default": false
                                }
                              }
                            },
                            "slowQuery": {
                              "type": "object",
                              "properties": {
                                "collect": {
                                  "description": "Whether slow query logging data should be collected. Implies that the logging should be enabled.",
                                  "type": "boolean",
                                  "default": false
                                },
                                "enabled": {
                                  "description": "Whether slow query logging should be enabled",
                                  "type": "boolean",
                                  "default": false
                                },
                                "longQueryTime": {
                                  "description": "Long query time threshold",
                                  "type": "number",
                                  "default": 10,
                                  "minimum": 0
                                }
                              }
                            }
                          }
                        },
                        "metrics": {
                          "description": "Configuration of a Prometheus-style metrics provider",
                          "type": "object",
                          "required": [
                            "enable",
                            "image"
                          ],
                          "properties": {
                            "enable": {
                              "description": "Toggle to enable or disable the metrics sidecar",
                              "type": "boolean",
                              "default": false
                            },
                            "image": {
                              "description": "Name of an image to be used for the metrics sidecar, if provided metrics will be enabled",
                              "type": "string"
                            },
                            "monitor": {
                              "description": "Create a ServiceMonitor for Prometheus Operator",
                              "type": "boolean",
                              "default": false
                            },
                            "monitorSpec": {
                              "description": "Custom configuration for the ServiceMonitor object",
                              "type": "object",
                              "default": {},
                              "x-kubernetes-preserve-unknown-fields": true
                            },
                            "options": {
                              "description": "Options passed to the metrics provider as command line arguments",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "tlsSecret": {
                              "description": "Name of a Secret with TLS certificate, key and CA, which will be mounted at /tls into the container an can be used from webConfig",
                              "type": "string"
                            },
                            "webConfig": {
                              "description": "Name of a ConfigMap with a web.config file, if this option is provided a command line option --web.config.file is added",
                              "type": "string"
                            }
                          }
                        },
                        "mycnf": {
                          "description": "Custom configuration additions for my.cnf",
                          "type": "string"
                        },
                        "podAnnotations": {
                          "type": "object",
                          "x-kubernetes-preserve-unknown-fields": true
                        },
                        "podLabels": {
                          "type": "object",
                          "x-kubernetes-preserve-unknown-fields": true
                        },
                        "podSpec": {
                          "type": "object",
                          "x-kubernetes-preserve-unknown-fields": true
                        },
                        "readReplicas": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "name",
                              "baseServerId"
                            ],
                            "properties": {
                              "baseServerId": {
                                "description": "Base value for MySQL server_id for instances of the readReplica, if 0 it will be assigned automatically",
                                "type": "integer",
                                "default": 0,
                                "maximum": 4294967195,
                                "minimum": 0
                              },
                              "datadirVolumeClaimTemplate": {
                                "description": "Template for a PersistentVolumeClaim, to be used as datadir",
                                "type": "object",
                                "x-kubernetes-preserve-unknown-fields": true
                              },
                              "instances": {
                                "description": "Number of MySQL instances for the set of read replica",
                                "type": "integer",
                                "default": 1,
                                "maximum": 999,
                                "minimum": 1
                              },
                              "mycnf": {
                                "description": "Custom configuration additions for my.cnf",
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "podAnnotations": {
                                "type": "object",
                                "x-kubernetes-preserve-unknown-fields": true
                              },
                              "podLabels": {
                                "type": "object",
                                "x-kubernetes-preserve-unknown-fields": true
                              },
                              "podSpec": {
                                "type": "object",
                                "x-kubernetes-preserve-unknown-fields": true
                              },
                              "version": {
                                "description": "MySQL Server version",
                                "type": "string",
                                "pattern": "^\\d+\\.\\d+\\.\\d+(-.+)?"
                              }
                            }
                          }
                        },
                        "router": {
                          "description": "MySQL Router specification",
                          "type": "object",
                          "properties": {
                            "bootstrapOptions": {
                              "description": "Command line options passed to MySQL Router while bootstrapping",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "instances": {
                              "description": "Number of MySQL Router instances to deploy",
                              "type": "integer",
                              "default": 1,
                              "minimum": 0
                            },
                            "options": {
                              "description": "Command line options passed to MySQL Router while running",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "podAnnotations": {
                              "type": "object",
                              "x-kubernetes-preserve-unknown-fields": true
                            },
                            "podLabels": {
                              "type": "object",
                              "x-kubernetes-preserve-unknown-fields": true
                            },
                            "podSpec": {
                              "type": "object",
                              "x-kubernetes-preserve-unknown-fields": true
                            },
                            "routingOptions": {
                              "description": "Set routing options for the cluster",
                              "type": "object",
                              "properties": {
                                "invalidated_cluster_policy": {
                                  "type": "string",
                                  "enum": [
                                    "drop_all",
                                    "accept_ro"
                                  ]
                                },
                                "read_only_targets": {
                                  "type": "string",
                                  "enum": [
                                    "all",
                                    "read_replicas",
                                    "secondaries"
                                  ]
                                },
                                "stats_updates_frequency": {
                                  "type": "integer",
                                  "default": 0,
                                  "minimum": 0
                                }
                              }
                            },
                            "tlsSecretName": {
                              "description": "Name of a TLS type Secret containing MySQL Router certificate and private key used for SSL",
                              "type": "string"
                            },
                            "version": {
                              "description": "Override MySQL Router version",
                              "type": "string",
                              "pattern": "^\\d+\\.\\d+\\.\\d+(-.+)?"
                            }
                          }
                        },
                        "secretName": {
                          "description": "Name of a generic type Secret containing root/default account password",
                          "type": "string"
                        },
                        "service": {
                          "description": "Configuration of the Service used by applications connecting to the InnoDB Cluster",
                          "type": "object",
                          "properties": {
                            "annotations": {
                              "description": "Custom annotations for the Service",
                              "type": "object",
                              "x-kubernetes-preserve-unknown-fields": true
                            },
                            "defaultPort": {
                              "description": "Target for the Service's default (3306) port. If mysql-rw traffic will go to the primary and allow read and write operations, with mysql-ro traffic goes to the replica and allows only read operations, with mysql-rw-split the router's read-write-splitting will be targeted",
                              "type": "string",
                              "default": "mysql-rw",
                              "enum": [
                                "mysql-rw",
                                "mysql-ro",
                                "mysql-rw-split"
                              ]
                            },
                            "labels": {
                              "description": "Custom labels for the Service",
                              "type": "object",
                              "x-kubernetes-preserve-unknown-fields": true
                            },
                            "type": {
                              "type": "string",
                              "default": "ClusterIP",
                              "enum": [
                                "ClusterIP",
                                "NodePort",
                                "LoadBalancer"
                              ]
                            }
                          }
                        },
                        "serviceAccountName": {
                          "type": "string"
                        },
                        "tlsCASecretName": {
                          "description": "Name of a generic type Secret containing CA (ca.pem) and optional CRL (crl.pem) for SSL",
                          "type": "string"
                        },
                        "tlsSecretName": {
                          "description": "Name of a TLS type Secret containing Server certificate and private key for SSL",
                          "type": "string"
                        },
                        "tlsUseSelfSigned": {
                          "description": "Enables use of self-signed TLS certificates, reducing or disabling TLS based security verifications",
                          "type": "boolean",
                          "default": false
                        },
                        "version": {
                          "description": "MySQL Server version",
                          "type": "string",
                          "pattern": "^\\d+\\.\\d+\\.\\d+(-.+)?"
                        }
                      }
                    },
                    "status": {
                      "type": "object",
                      "x-kubernetes-preserve-unknown-fields": true
                    }
                  }
                }
              },
              "subresources": {
                "status": {}
              },
              "additionalPrinterColumns": [
                {
                  "name": "Status",
                  "type": "string",
                  "description": "Status of the InnoDB Cluster",
                  "jsonPath": ".status.cluster.status"
                },
                {
                  "name": "Online",
                  "type": "integer",
                  "description": "Number of ONLINE InnoDB Cluster instances",
                  "jsonPath": ".status.cluster.onlineInstances"
                },
                {
                  "name": "Instances",
                  "type": "integer",
                  "description": "Number of InnoDB Cluster instances configured",
                  "jsonPath": ".spec.instances"
                },
                {
                  "name": "Routers",
                  "type": "integer",
                  "description": "Number of Router instances configured for the InnoDB Cluster",
                  "jsonPath": ".spec.router.instances"
                },
                {
                  "name": "Age",
                  "type": "date",
                  "jsonPath": ".metadata.creationTimestamp"
                }
              ]
            }
          ],
          "conversion": {
            "strategy": "None"
          }
        },
        "status": {
          "conditions": [
            {
              "type": "NamesAccepted",
              "status": "True",
              "lastTransitionTime": "2024-01-18T17:34:17Z",
              "reason": "NoConflicts",
              "message": "no conflicts found"
            },
            {
              "type": "Established",
              "status": "True",
              "lastTransitionTime": "2024-01-18T17:34:17Z",
              "reason": "InitialNamesAccepted",
              "message": "the initial names have been accepted"
            }
          ],
          "acceptedNames": {
            "plural": "innodbclusters",
            "singular": "innodbcluster",
            "shortNames": [
              "ic",
              "ics"
            ],
            "kind": "InnoDBCluster",
            "listKind": "InnoDBClusterList"
          },
          "storedVersions": [
            "v2"
          ]
        }
      },
      "additionalColumns": [
        {
          "name": "Status",
          "type": "string",
          "description": "Status of the InnoDB Cluster",
          "jsonPath": ".status.cluster.status"
        },
        {
          "name": "Online",
          "type": "integer",
          "description": "Number of ONLINE InnoDB Cluster instances",
          "jsonPath": ".status.cluster.onlineInstances"
        },
        {
          "name": "Instances",
          "type": "integer",
          "description": "Number of InnoDB Cluster instances configured",
          "jsonPath": ".spec.instances"
        },
        {
          "name": "Routers",
          "type": "integer",
          "description": "Number of Router instances configured for the InnoDB Cluster",
          "jsonPath": ".spec.router.instances"
        },
        {
          "name": "Age",
          "type": "date",
          "jsonPath": ".metadata.creationTimestamp"
        }
      ],
      "short": "InnoDBCluster",
      "apiGroup": "mysql.oracle.com",
      "apiKind": "InnoDBCluster",
      "apiVersion": "v2",
      "readProperties": [
        "spec",
        "status"
      ],
      "writeProperties": [
        "spec"
      ],
      "group": "oracle",
      "sub": "oracle",
      "listExcludes": [],
      "readExcludes": [],
      "simpleExcludes": [],
      "autoResolvers": [
        {
          "group": "oracle",
          "short": "InnoDBCluster",
          "algo": "vynil",
          "type": "parent",
          "targetGroup": "vynil",
          "targetShort": "Install"
        }
      ],
      "resolvers": [
        {
          "group": "oracle",
          "short": "InnoDBCluster",
          "type": "parent",
          "name": "parentInstall",
          "args": "(params: queryParameters)",
          "resultGroup": "vynil",
          "resultShort": "Install",
          "result": "vynilInstall",
          "properties": [
            "spec",
            "status"
          ]
        }
      ],
      "gqlDefs": {
        "metadata": "metadata!",
        "spec": "JSONObject",
        "status": "JSONObject"
      },
      "namespaced": true,
      "category": "database"
    },
    {
      "alternatives": [],
      "name": "com.oracle.mysql.v2.MySQLBackup",
      "definition": {
        "type": "object",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "spec": {
            "type": "object",
            "required": [
              "clusterName"
            ],
            "properties": {
              "addTimestampToBackupDirectory": {
                "type": "boolean"
              },
              "backupProfile": {
                "description": "backupProfile specification if backupProfileName is not specified",
                "x-kubernetes-preserve-unknown-fields": true
              },
              "backupProfileName": {
                "type": "string"
              },
              "clusterName": {
                "type": "string"
              },
              "deleteBackupData": {
                "type": "boolean"
              }
            }
          },
          "status": {
            "type": "object",
            "properties": {
              "bucket": {
                "type": "string"
              },
              "completionTime": {
                "type": "string"
              },
              "container": {
                "type": "string"
              },
              "elapsedTime": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "method": {
                "type": "string"
              },
              "ociTenancy": {
                "type": "string"
              },
              "output": {
                "type": "string"
              },
              "size": {
                "type": "string"
              },
              "source": {
                "type": "string"
              },
              "spaceAvailable": {
                "type": "string"
              },
              "startTime": {
                "type": "string"
              },
              "status": {
                "type": "string"
              }
            }
          }
        },
        "x-kubernetes-group-version-kind": [
          {
            "group": "mysql.oracle.com",
            "kind": "MySQLBackup",
            "version": "v2"
          }
        ]
      },
      "crd": {
        "metadata": {
          "name": "mysqlbackups.mysql.oracle.com",
          "uid": "767eb11a-5430-40bc-9329-62419fd2590a",
          "resourceVersion": "104674811",
          "generation": 1,
          "creationTimestamp": "2024-01-18T17:34:17Z",
          "managedFields": [
            {
              "manager": "kube-apiserver",
              "operation": "Update",
              "apiVersion": "apiextensions.k8s.io/v1",
              "time": "2024-01-18T17:34:17Z",
              "fieldsType": "FieldsV1",
              "fieldsV1": {
                "f:status": {
                  "f:acceptedNames": {
                    "f:kind": {},
                    "f:listKind": {},
                    "f:plural": {},
                    "f:shortNames": {},
                    "f:singular": {}
                  },
                  "f:conditions": {
                    "k:{\"type\":\"Established\"}": {
                      ".": {},
                      "f:lastTransitionTime": {},
                      "f:message": {},
                      "f:reason": {},
                      "f:status": {},
                      "f:type": {}
                    },
                    "k:{\"type\":\"NamesAccepted\"}": {
                      ".": {},
                      "f:lastTransitionTime": {},
                      "f:message": {},
                      "f:reason": {},
                      "f:status": {},
                      "f:type": {}
                    }
                  }
                }
              },
              "subresource": "status"
            },
            {
              "manager": "kubectl-create",
              "operation": "Update",
              "apiVersion": "apiextensions.k8s.io/v1",
              "time": "2024-01-18T17:34:17Z",
              "fieldsType": "FieldsV1",
              "fieldsV1": {
                "f:spec": {
                  "f:conversion": {
                    ".": {},
                    "f:strategy": {}
                  },
                  "f:group": {},
                  "f:names": {
                    "f:kind": {},
                    "f:listKind": {},
                    "f:plural": {},
                    "f:shortNames": {},
                    "f:singular": {}
                  },
                  "f:scope": {},
                  "f:versions": {}
                }
              }
            }
          ]
        },
        "spec": {
          "group": "mysql.oracle.com",
          "names": {
            "plural": "mysqlbackups",
            "singular": "mysqlbackup",
            "shortNames": [
              "mbk"
            ],
            "kind": "MySQLBackup",
            "listKind": "MySQLBackupList"
          },
          "scope": "Namespaced",
          "versions": [
            {
              "name": "v2",
              "served": true,
              "storage": true,
              "schema": {
                "openAPIV3Schema": {
                  "type": "object",
                  "properties": {
                    "spec": {
                      "type": "object",
                      "required": [
                        "clusterName"
                      ],
                      "properties": {
                        "addTimestampToBackupDirectory": {
                          "type": "boolean",
                          "default": true
                        },
                        "backupProfile": {
                          "description": "backupProfile specification if backupProfileName is not specified",
                          "type": "object",
                          "properties": {
                            "dumpInstance": {
                              "type": "object",
                              "properties": {
                                "dumpOptions": {
                                  "description": "A dictionary of key-value pairs passed directly to MySQL Shell's DumpInstance()",
                                  "type": "object",
                                  "x-kubernetes-preserve-unknown-fields": true
                                },
                                "storage": {
                                  "type": "object",
                                  "properties": {
                                    "azure": {
                                      "type": "object",
                                      "required": [
                                        "containerName",
                                        "config"
                                      ],
                                      "properties": {
                                        "config": {
                                          "description": "Name of a Secret with Azure BLOB Storage configuration and credentials",
                                          "type": "string"
                                        },
                                        "containerName": {
                                          "description": "Name of the Azure  BLOB Storage container where the dump is stored",
                                          "type": "string"
                                        },
                                        "prefix": {
                                          "description": "Path in the container where the dump files are stored",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "ociObjectStorage": {
                                      "type": "object",
                                      "required": [
                                        "bucketName",
                                        "credentials"
                                      ],
                                      "properties": {
                                        "bucketName": {
                                          "description": "Name of the OCI bucket where backup is stored",
                                          "type": "string"
                                        },
                                        "credentials": {
                                          "description": "Name of a Secret with data for accessing the bucket",
                                          "type": "string"
                                        },
                                        "prefix": {
                                          "description": "Path in bucket where backup is stored",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "persistentVolumeClaim": {
                                      "description": "Specification of the PVC to be used. Used 'as is' in pod executing the backup.",
                                      "type": "object",
                                      "x-kubernetes-preserve-unknown-fields": true
                                    },
                                    "s3": {
                                      "type": "object",
                                      "required": [
                                        "bucketName",
                                        "config"
                                      ],
                                      "properties": {
                                        "bucketName": {
                                          "description": "Name of the S3 bucket where the dump is stored",
                                          "type": "string"
                                        },
                                        "config": {
                                          "description": "Name of a Secret with S3 configuration and credentials",
                                          "type": "string"
                                        },
                                        "endpoint": {
                                          "description": "Override endpoint URL",
                                          "type": "string"
                                        },
                                        "prefix": {
                                          "description": "Path in the bucket where the dump files are stored",
                                          "type": "string"
                                        },
                                        "profile": {
                                          "description": "Profile being used in configuration files",
                                          "type": "string",
                                          "default": ""
                                        }
                                      }
                                    }
                                  },
                                  "x-kubernetes-preserve-unknown-fields": true
                                }
                              }
                            },
                            "podAnnotations": {
                              "type": "object",
                              "x-kubernetes-preserve-unknown-fields": true
                            },
                            "podLabels": {
                              "type": "object",
                              "x-kubernetes-preserve-unknown-fields": true
                            }
                          },
                          "x-kubernetes-preserve-unknown-fields": true
                        },
                        "backupProfileName": {
                          "type": "string"
                        },
                        "clusterName": {
                          "type": "string"
                        },
                        "deleteBackupData": {
                          "type": "boolean",
                          "default": false
                        }
                      }
                    },
                    "status": {
                      "type": "object",
                      "properties": {
                        "bucket": {
                          "type": "string"
                        },
                        "completionTime": {
                          "type": "string"
                        },
                        "container": {
                          "type": "string"
                        },
                        "elapsedTime": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "method": {
                          "type": "string"
                        },
                        "ociTenancy": {
                          "type": "string"
                        },
                        "output": {
                          "type": "string"
                        },
                        "size": {
                          "type": "string"
                        },
                        "source": {
                          "type": "string"
                        },
                        "spaceAvailable": {
                          "type": "string"
                        },
                        "startTime": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "subresources": {
                "status": {}
              },
              "additionalPrinterColumns": [
                {
                  "name": "Cluster",
                  "type": "string",
                  "description": "Name of the target cluster",
                  "jsonPath": ".spec.clusterName"
                },
                {
                  "name": "Status",
                  "type": "string",
                  "description": "Status of the Backup",
                  "jsonPath": ".status.status"
                },
                {
                  "name": "Output",
                  "type": "string",
                  "description": "Name of the produced file/directory",
                  "jsonPath": ".status.output"
                },
                {
                  "name": "Age",
                  "type": "date",
                  "jsonPath": ".metadata.creationTimestamp"
                }
              ]
            }
          ],
          "conversion": {
            "strategy": "None"
          }
        },
        "status": {
          "conditions": [
            {
              "type": "NamesAccepted",
              "status": "True",
              "lastTransitionTime": "2024-01-18T17:34:17Z",
              "reason": "NoConflicts",
              "message": "no conflicts found"
            },
            {
              "type": "Established",
              "status": "True",
              "lastTransitionTime": "2024-01-18T17:34:17Z",
              "reason": "InitialNamesAccepted",
              "message": "the initial names have been accepted"
            }
          ],
          "acceptedNames": {
            "plural": "mysqlbackups",
            "singular": "mysqlbackup",
            "shortNames": [
              "mbk"
            ],
            "kind": "MySQLBackup",
            "listKind": "MySQLBackupList"
          },
          "storedVersions": [
            "v2"
          ]
        }
      },
      "additionalColumns": [
        {
          "name": "Cluster",
          "type": "string",
          "description": "Name of the target cluster",
          "jsonPath": ".spec.clusterName"
        },
        {
          "name": "Status",
          "type": "string",
          "description": "Status of the Backup",
          "jsonPath": ".status.status"
        },
        {
          "name": "Output",
          "type": "string",
          "description": "Name of the produced file/directory",
          "jsonPath": ".status.output"
        },
        {
          "name": "Age",
          "type": "date",
          "jsonPath": ".metadata.creationTimestamp"
        }
      ],
      "short": "MySQLBackup",
      "apiGroup": "mysql.oracle.com",
      "apiKind": "MySQLBackup",
      "apiVersion": "v2",
      "readProperties": [
        "spec",
        "status"
      ],
      "writeProperties": [
        "spec"
      ],
      "group": "oracle",
      "sub": "oracle",
      "listExcludes": [],
      "readExcludes": [],
      "simpleExcludes": [],
      "autoResolvers": [
        {
          "group": "oracle",
          "short": "MySQLBackup",
          "algo": "vynil",
          "type": "parent",
          "targetGroup": "vynil",
          "targetShort": "Install"
        }
      ],
      "resolvers": [
        {
          "group": "oracle",
          "short": "MySQLBackup",
          "type": "parent",
          "name": "parentInstall",
          "args": "(params: queryParameters)",
          "resultGroup": "vynil",
          "resultShort": "Install",
          "result": "vynilInstall",
          "properties": [
            "spec",
            "status"
          ]
        }
      ],
      "gqlDefs": {
        "metadata": "metadata!",
        "spec": "JSONObject",
        "status": "JSONObject"
      },
      "namespaced": true,
      "category": "database"
    }
  ]
}