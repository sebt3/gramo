{
  "name": "rabbitmq",
  "objects": [
    {
      "alternatives": [],
      "name": "com.rabbitmq.v1beta1.RabbitmqCluster",
      "definition": {
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "spec": {
            "description": "Spec is the desired state of the RabbitmqCluster Custom Resource.",
            "type": "object",
            "properties": {
              "affinity": {
                "description": "Affinity scheduling rules to be applied on created Pods.",
                "type": "object",
                "properties": {
                  "nodeAffinity": {
                    "description": "Describes node affinity scheduling rules for the pod.",
                    "type": "object",
                    "properties": {
                      "preferredDuringSchedulingIgnoredDuringExecution": {
                        "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.",
                        "type": "array",
                        "items": {
                          "description": "An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
                          "type": "object",
                          "required": [
                            "preference",
                            "weight"
                          ],
                          "properties": {
                            "preference": {
                              "description": "A node selector term, associated with the corresponding weight.",
                              "type": "object",
                              "properties": {
                                "matchExpressions": {
                                  "description": "A list of node selector requirements by node's labels.",
                                  "type": "array",
                                  "items": {
                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                    "type": "object",
                                    "required": [
                                      "key",
                                      "operator"
                                    ],
                                    "properties": {
                                      "key": {
                                        "description": "The label key that the selector applies to.",
                                        "type": "string"
                                      },
                                      "operator": {
                                        "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                        "type": "string"
                                      },
                                      "values": {
                                        "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                },
                                "matchFields": {
                                  "description": "A list of node selector requirements by node's fields.",
                                  "type": "array",
                                  "items": {
                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                    "type": "object",
                                    "required": [
                                      "key",
                                      "operator"
                                    ],
                                    "properties": {
                                      "key": {
                                        "description": "The label key that the selector applies to.",
                                        "type": "string"
                                      },
                                      "operator": {
                                        "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                        "type": "string"
                                      },
                                      "values": {
                                        "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "x-kubernetes-map-type": "atomic"
                            },
                            "weight": {
                              "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
                              "type": "integer",
                              "format": "int32"
                            }
                          }
                        }
                      },
                      "requiredDuringSchedulingIgnoredDuringExecution": {
                        "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.",
                        "type": "object",
                        "required": [
                          "nodeSelectorTerms"
                        ],
                        "properties": {
                          "nodeSelectorTerms": {
                            "description": "Required. A list of node selector terms. The terms are ORed.",
                            "type": "array",
                            "items": {
                              "description": "A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
                              "type": "object",
                              "properties": {
                                "matchExpressions": {
                                  "description": "A list of node selector requirements by node's labels.",
                                  "type": "array",
                                  "items": {
                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                    "type": "object",
                                    "required": [
                                      "key",
                                      "operator"
                                    ],
                                    "properties": {
                                      "key": {
                                        "description": "The label key that the selector applies to.",
                                        "type": "string"
                                      },
                                      "operator": {
                                        "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                        "type": "string"
                                      },
                                      "values": {
                                        "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                },
                                "matchFields": {
                                  "description": "A list of node selector requirements by node's fields.",
                                  "type": "array",
                                  "items": {
                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                    "type": "object",
                                    "required": [
                                      "key",
                                      "operator"
                                    ],
                                    "properties": {
                                      "key": {
                                        "description": "The label key that the selector applies to.",
                                        "type": "string"
                                      },
                                      "operator": {
                                        "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                        "type": "string"
                                      },
                                      "values": {
                                        "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "x-kubernetes-map-type": "atomic"
                            }
                          }
                        },
                        "x-kubernetes-map-type": "atomic"
                      }
                    }
                  },
                  "podAffinity": {
                    "description": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).",
                    "type": "object",
                    "properties": {
                      "preferredDuringSchedulingIgnoredDuringExecution": {
                        "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                        "type": "array",
                        "items": {
                          "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                          "type": "object",
                          "required": [
                            "podAffinityTerm",
                            "weight"
                          ],
                          "properties": {
                            "podAffinityTerm": {
                              "description": "Required. A pod affinity term, associated with the corresponding weight.",
                              "type": "object",
                              "required": [
                                "topologyKey"
                              ],
                              "properties": {
                                "labelSelector": {
                                  "description": "A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.",
                                  "type": "object",
                                  "properties": {
                                    "matchExpressions": {
                                      "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                      "type": "array",
                                      "items": {
                                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                        "type": "object",
                                        "required": [
                                          "key",
                                          "operator"
                                        ],
                                        "properties": {
                                          "key": {
                                            "description": "key is the label key that the selector applies to.",
                                            "type": "string"
                                          },
                                          "operator": {
                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                            "type": "string"
                                          },
                                          "values": {
                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "matchLabels": {
                                      "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "matchLabelKeys": {
                                  "description": "MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. Also, MatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "mismatchLabelKeys": {
                                  "description": "MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector. Also, MismatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "namespaceSelector": {
                                  "description": "A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \"this pod's namespace\". An empty selector ({}) matches all namespaces.",
                                  "type": "object",
                                  "properties": {
                                    "matchExpressions": {
                                      "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                      "type": "array",
                                      "items": {
                                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                        "type": "object",
                                        "required": [
                                          "key",
                                          "operator"
                                        ],
                                        "properties": {
                                          "key": {
                                            "description": "key is the label key that the selector applies to.",
                                            "type": "string"
                                          },
                                          "operator": {
                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                            "type": "string"
                                          },
                                          "values": {
                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "matchLabels": {
                                      "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "namespaces": {
                                  "description": "namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "topologyKey": {
                                  "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                  "type": "string"
                                }
                              }
                            },
                            "weight": {
                              "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
                              "type": "integer",
                              "format": "int32"
                            }
                          }
                        }
                      },
                      "requiredDuringSchedulingIgnoredDuringExecution": {
                        "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                        "type": "array",
                        "items": {
                          "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running",
                          "type": "object",
                          "required": [
                            "topologyKey"
                          ],
                          "properties": {
                            "labelSelector": {
                              "description": "A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.",
                              "type": "object",
                              "properties": {
                                "matchExpressions": {
                                  "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                  "type": "array",
                                  "items": {
                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                    "type": "object",
                                    "required": [
                                      "key",
                                      "operator"
                                    ],
                                    "properties": {
                                      "key": {
                                        "description": "key is the label key that the selector applies to.",
                                        "type": "string"
                                      },
                                      "operator": {
                                        "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                        "type": "string"
                                      },
                                      "values": {
                                        "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                },
                                "matchLabels": {
                                  "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                }
                              },
                              "x-kubernetes-map-type": "atomic"
                            },
                            "matchLabelKeys": {
                              "description": "MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. Also, MatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "mismatchLabelKeys": {
                              "description": "MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector. Also, MismatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "namespaceSelector": {
                              "description": "A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \"this pod's namespace\". An empty selector ({}) matches all namespaces.",
                              "type": "object",
                              "properties": {
                                "matchExpressions": {
                                  "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                  "type": "array",
                                  "items": {
                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                    "type": "object",
                                    "required": [
                                      "key",
                                      "operator"
                                    ],
                                    "properties": {
                                      "key": {
                                        "description": "key is the label key that the selector applies to.",
                                        "type": "string"
                                      },
                                      "operator": {
                                        "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                        "type": "string"
                                      },
                                      "values": {
                                        "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                },
                                "matchLabels": {
                                  "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                }
                              },
                              "x-kubernetes-map-type": "atomic"
                            },
                            "namespaces": {
                              "description": "namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "topologyKey": {
                              "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "podAntiAffinity": {
                    "description": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).",
                    "type": "object",
                    "properties": {
                      "preferredDuringSchedulingIgnoredDuringExecution": {
                        "description": "The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                        "type": "array",
                        "items": {
                          "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                          "type": "object",
                          "required": [
                            "podAffinityTerm",
                            "weight"
                          ],
                          "properties": {
                            "podAffinityTerm": {
                              "description": "Required. A pod affinity term, associated with the corresponding weight.",
                              "type": "object",
                              "required": [
                                "topologyKey"
                              ],
                              "properties": {
                                "labelSelector": {
                                  "description": "A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.",
                                  "type": "object",
                                  "properties": {
                                    "matchExpressions": {
                                      "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                      "type": "array",
                                      "items": {
                                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                        "type": "object",
                                        "required": [
                                          "key",
                                          "operator"
                                        ],
                                        "properties": {
                                          "key": {
                                            "description": "key is the label key that the selector applies to.",
                                            "type": "string"
                                          },
                                          "operator": {
                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                            "type": "string"
                                          },
                                          "values": {
                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "matchLabels": {
                                      "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "matchLabelKeys": {
                                  "description": "MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. Also, MatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "mismatchLabelKeys": {
                                  "description": "MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector. Also, MismatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "namespaceSelector": {
                                  "description": "A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \"this pod's namespace\". An empty selector ({}) matches all namespaces.",
                                  "type": "object",
                                  "properties": {
                                    "matchExpressions": {
                                      "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                      "type": "array",
                                      "items": {
                                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                        "type": "object",
                                        "required": [
                                          "key",
                                          "operator"
                                        ],
                                        "properties": {
                                          "key": {
                                            "description": "key is the label key that the selector applies to.",
                                            "type": "string"
                                          },
                                          "operator": {
                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                            "type": "string"
                                          },
                                          "values": {
                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "matchLabels": {
                                      "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "namespaces": {
                                  "description": "namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "topologyKey": {
                                  "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                  "type": "string"
                                }
                              }
                            },
                            "weight": {
                              "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
                              "type": "integer",
                              "format": "int32"
                            }
                          }
                        }
                      },
                      "requiredDuringSchedulingIgnoredDuringExecution": {
                        "description": "If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                        "type": "array",
                        "items": {
                          "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running",
                          "type": "object",
                          "required": [
                            "topologyKey"
                          ],
                          "properties": {
                            "labelSelector": {
                              "description": "A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.",
                              "type": "object",
                              "properties": {
                                "matchExpressions": {
                                  "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                  "type": "array",
                                  "items": {
                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                    "type": "object",
                                    "required": [
                                      "key",
                                      "operator"
                                    ],
                                    "properties": {
                                      "key": {
                                        "description": "key is the label key that the selector applies to.",
                                        "type": "string"
                                      },
                                      "operator": {
                                        "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                        "type": "string"
                                      },
                                      "values": {
                                        "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                },
                                "matchLabels": {
                                  "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                }
                              },
                              "x-kubernetes-map-type": "atomic"
                            },
                            "matchLabelKeys": {
                              "description": "MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. Also, MatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "mismatchLabelKeys": {
                              "description": "MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector. Also, MismatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "namespaceSelector": {
                              "description": "A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \"this pod's namespace\". An empty selector ({}) matches all namespaces.",
                              "type": "object",
                              "properties": {
                                "matchExpressions": {
                                  "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                  "type": "array",
                                  "items": {
                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                    "type": "object",
                                    "required": [
                                      "key",
                                      "operator"
                                    ],
                                    "properties": {
                                      "key": {
                                        "description": "key is the label key that the selector applies to.",
                                        "type": "string"
                                      },
                                      "operator": {
                                        "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                        "type": "string"
                                      },
                                      "values": {
                                        "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                },
                                "matchLabels": {
                                  "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                }
                              },
                              "x-kubernetes-map-type": "atomic"
                            },
                            "namespaces": {
                              "description": "namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "topologyKey": {
                              "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "delayStartSeconds": {
                "description": "DelayStartSeconds is the time the init container (`setup-container`) will sleep before terminating. This effectively delays the time between starting the Pod and starting the `rabbitmq` container. RabbitMQ relies on up-to-date DNS entries early during peer discovery. The purpose of this artificial delay is to ensure that DNS entries are up-to-date when booting RabbitMQ. For more information, see https://github.com/kubernetes/kubernetes/issues/92559 If your Kubernetes DNS backend is configured with a low DNS cache value or publishes not ready addresses promptly, you can decrase this value or set it to 0.",
                "type": "integer",
                "format": "int32",
                "minimum": 0
              },
              "image": {
                "description": "Image is the name of the RabbitMQ docker image to use for RabbitMQ nodes in the RabbitmqCluster. Must be provided together with ImagePullSecrets in order to use an image in a private registry.",
                "type": "string"
              },
              "imagePullSecrets": {
                "description": "List of Secret resource containing access credentials to the registry for the RabbitMQ image. Required if the docker registry is private.",
                "type": "array",
                "items": {
                  "description": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                      "type": "string"
                    }
                  },
                  "x-kubernetes-map-type": "atomic"
                }
              },
              "override": {
                "type": "object",
                "properties": {
                  "service": {
                    "type": "object",
                    "properties": {
                      "metadata": {
                        "type": "object",
                        "properties": {
                          "annotations": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "labels": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "spec": {
                        "type": "object",
                        "properties": {
                          "allocateLoadBalancerNodePorts": {
                            "type": "boolean"
                          },
                          "clusterIP": {
                            "type": "string"
                          },
                          "clusterIPs": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "atomic"
                          },
                          "externalIPs": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "externalName": {
                            "type": "string"
                          },
                          "externalTrafficPolicy": {
                            "type": "string"
                          },
                          "healthCheckNodePort": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "internalTrafficPolicy": {
                            "type": "string"
                          },
                          "ipFamilies": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "atomic"
                          },
                          "ipFamilyPolicy": {
                            "type": "string"
                          },
                          "loadBalancerClass": {
                            "type": "string"
                          },
                          "loadBalancerIP": {
                            "type": "string"
                          },
                          "loadBalancerSourceRanges": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "ports": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "port"
                              ],
                              "properties": {
                                "appProtocol": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "nodePort": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "port": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "protocol": {
                                  "type": "string"
                                },
                                "targetPort": {
                                  "x-kubernetes-int-or-string": true
                                }
                              }
                            },
                            "x-kubernetes-list-map-keys": [
                              "port",
                              "protocol"
                            ],
                            "x-kubernetes-list-type": "map"
                          },
                          "publishNotReadyAddresses": {
                            "type": "boolean"
                          },
                          "selector": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "sessionAffinity": {
                            "type": "string"
                          },
                          "sessionAffinityConfig": {
                            "type": "object",
                            "properties": {
                              "clientIP": {
                                "type": "object",
                                "properties": {
                                  "timeoutSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                  }
                                }
                              }
                            }
                          },
                          "type": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "statefulSet": {
                    "type": "object",
                    "properties": {
                      "metadata": {
                        "type": "object",
                        "properties": {
                          "annotations": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "labels": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "spec": {
                        "type": "object",
                        "properties": {
                          "minReadySeconds": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "persistentVolumeClaimRetentionPolicy": {
                            "type": "object",
                            "properties": {
                              "whenDeleted": {
                                "type": "string"
                              },
                              "whenScaled": {
                                "type": "string"
                              }
                            }
                          },
                          "podManagementPolicy": {
                            "type": "string"
                          },
                          "replicas": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "selector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "key",
                                    "operator"
                                  ],
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "serviceName": {
                            "type": "string"
                          },
                          "template": {
                            "type": "object",
                            "properties": {
                              "metadata": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "labels": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "namespace": {
                                    "type": "string"
                                  }
                                }
                              },
                              "spec": {
                                "type": "object",
                                "required": [
                                  "containers"
                                ],
                                "properties": {
                                  "activeDeadlineSeconds": {
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "affinity": {
                                    "type": "object",
                                    "properties": {
                                      "nodeAffinity": {
                                        "type": "object",
                                        "properties": {
                                          "preferredDuringSchedulingIgnoredDuringExecution": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "preference",
                                                "weight"
                                              ],
                                              "properties": {
                                                "preference": {
                                                  "type": "object",
                                                  "properties": {
                                                    "matchExpressions": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "required": [
                                                          "key",
                                                          "operator"
                                                        ],
                                                        "properties": {
                                                          "key": {
                                                            "type": "string"
                                                          },
                                                          "operator": {
                                                            "type": "string"
                                                          },
                                                          "values": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "matchFields": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "required": [
                                                          "key",
                                                          "operator"
                                                        ],
                                                        "properties": {
                                                          "key": {
                                                            "type": "string"
                                                          },
                                                          "operator": {
                                                            "type": "string"
                                                          },
                                                          "values": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "x-kubernetes-map-type": "atomic"
                                                },
                                                "weight": {
                                                  "type": "integer",
                                                  "format": "int32"
                                                }
                                              }
                                            }
                                          },
                                          "requiredDuringSchedulingIgnoredDuringExecution": {
                                            "type": "object",
                                            "required": [
                                              "nodeSelectorTerms"
                                            ],
                                            "properties": {
                                              "nodeSelectorTerms": {
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "matchExpressions": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "required": [
                                                          "key",
                                                          "operator"
                                                        ],
                                                        "properties": {
                                                          "key": {
                                                            "type": "string"
                                                          },
                                                          "operator": {
                                                            "type": "string"
                                                          },
                                                          "values": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "matchFields": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "required": [
                                                          "key",
                                                          "operator"
                                                        ],
                                                        "properties": {
                                                          "key": {
                                                            "type": "string"
                                                          },
                                                          "operator": {
                                                            "type": "string"
                                                          },
                                                          "values": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "x-kubernetes-map-type": "atomic"
                                                }
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          }
                                        }
                                      },
                                      "podAffinity": {
                                        "type": "object",
                                        "properties": {
                                          "preferredDuringSchedulingIgnoredDuringExecution": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "podAffinityTerm",
                                                "weight"
                                              ],
                                              "properties": {
                                                "podAffinityTerm": {
                                                  "type": "object",
                                                  "required": [
                                                    "topologyKey"
                                                  ],
                                                  "properties": {
                                                    "labelSelector": {
                                                      "type": "object",
                                                      "properties": {
                                                        "matchExpressions": {
                                                          "type": "array",
                                                          "items": {
                                                            "type": "object",
                                                            "required": [
                                                              "key",
                                                              "operator"
                                                            ],
                                                            "properties": {
                                                              "key": {
                                                                "type": "string"
                                                              },
                                                              "operator": {
                                                                "type": "string"
                                                              },
                                                              "values": {
                                                                "type": "array",
                                                                "items": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "matchLabels": {
                                                          "type": "object",
                                                          "additionalProperties": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "x-kubernetes-map-type": "atomic"
                                                    },
                                                    "matchLabelKeys": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      },
                                                      "x-kubernetes-list-type": "atomic"
                                                    },
                                                    "mismatchLabelKeys": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      },
                                                      "x-kubernetes-list-type": "atomic"
                                                    },
                                                    "namespaceSelector": {
                                                      "type": "object",
                                                      "properties": {
                                                        "matchExpressions": {
                                                          "type": "array",
                                                          "items": {
                                                            "type": "object",
                                                            "required": [
                                                              "key",
                                                              "operator"
                                                            ],
                                                            "properties": {
                                                              "key": {
                                                                "type": "string"
                                                              },
                                                              "operator": {
                                                                "type": "string"
                                                              },
                                                              "values": {
                                                                "type": "array",
                                                                "items": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "matchLabels": {
                                                          "type": "object",
                                                          "additionalProperties": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "x-kubernetes-map-type": "atomic"
                                                    },
                                                    "namespaces": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "topologyKey": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "weight": {
                                                  "type": "integer",
                                                  "format": "int32"
                                                }
                                              }
                                            }
                                          },
                                          "requiredDuringSchedulingIgnoredDuringExecution": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "topologyKey"
                                              ],
                                              "properties": {
                                                "labelSelector": {
                                                  "type": "object",
                                                  "properties": {
                                                    "matchExpressions": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "required": [
                                                          "key",
                                                          "operator"
                                                        ],
                                                        "properties": {
                                                          "key": {
                                                            "type": "string"
                                                          },
                                                          "operator": {
                                                            "type": "string"
                                                          },
                                                          "values": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "matchLabels": {
                                                      "type": "object",
                                                      "additionalProperties": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "x-kubernetes-map-type": "atomic"
                                                },
                                                "matchLabelKeys": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "x-kubernetes-list-type": "atomic"
                                                },
                                                "mismatchLabelKeys": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "x-kubernetes-list-type": "atomic"
                                                },
                                                "namespaceSelector": {
                                                  "type": "object",
                                                  "properties": {
                                                    "matchExpressions": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "required": [
                                                          "key",
                                                          "operator"
                                                        ],
                                                        "properties": {
                                                          "key": {
                                                            "type": "string"
                                                          },
                                                          "operator": {
                                                            "type": "string"
                                                          },
                                                          "values": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "matchLabels": {
                                                      "type": "object",
                                                      "additionalProperties": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "x-kubernetes-map-type": "atomic"
                                                },
                                                "namespaces": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "topologyKey": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "podAntiAffinity": {
                                        "type": "object",
                                        "properties": {
                                          "preferredDuringSchedulingIgnoredDuringExecution": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "podAffinityTerm",
                                                "weight"
                                              ],
                                              "properties": {
                                                "podAffinityTerm": {
                                                  "type": "object",
                                                  "required": [
                                                    "topologyKey"
                                                  ],
                                                  "properties": {
                                                    "labelSelector": {
                                                      "type": "object",
                                                      "properties": {
                                                        "matchExpressions": {
                                                          "type": "array",
                                                          "items": {
                                                            "type": "object",
                                                            "required": [
                                                              "key",
                                                              "operator"
                                                            ],
                                                            "properties": {
                                                              "key": {
                                                                "type": "string"
                                                              },
                                                              "operator": {
                                                                "type": "string"
                                                              },
                                                              "values": {
                                                                "type": "array",
                                                                "items": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "matchLabels": {
                                                          "type": "object",
                                                          "additionalProperties": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "x-kubernetes-map-type": "atomic"
                                                    },
                                                    "matchLabelKeys": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      },
                                                      "x-kubernetes-list-type": "atomic"
                                                    },
                                                    "mismatchLabelKeys": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      },
                                                      "x-kubernetes-list-type": "atomic"
                                                    },
                                                    "namespaceSelector": {
                                                      "type": "object",
                                                      "properties": {
                                                        "matchExpressions": {
                                                          "type": "array",
                                                          "items": {
                                                            "type": "object",
                                                            "required": [
                                                              "key",
                                                              "operator"
                                                            ],
                                                            "properties": {
                                                              "key": {
                                                                "type": "string"
                                                              },
                                                              "operator": {
                                                                "type": "string"
                                                              },
                                                              "values": {
                                                                "type": "array",
                                                                "items": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "matchLabels": {
                                                          "type": "object",
                                                          "additionalProperties": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "x-kubernetes-map-type": "atomic"
                                                    },
                                                    "namespaces": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "topologyKey": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "weight": {
                                                  "type": "integer",
                                                  "format": "int32"
                                                }
                                              }
                                            }
                                          },
                                          "requiredDuringSchedulingIgnoredDuringExecution": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "topologyKey"
                                              ],
                                              "properties": {
                                                "labelSelector": {
                                                  "type": "object",
                                                  "properties": {
                                                    "matchExpressions": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "required": [
                                                          "key",
                                                          "operator"
                                                        ],
                                                        "properties": {
                                                          "key": {
                                                            "type": "string"
                                                          },
                                                          "operator": {
                                                            "type": "string"
                                                          },
                                                          "values": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "matchLabels": {
                                                      "type": "object",
                                                      "additionalProperties": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "x-kubernetes-map-type": "atomic"
                                                },
                                                "matchLabelKeys": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "x-kubernetes-list-type": "atomic"
                                                },
                                                "mismatchLabelKeys": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "x-kubernetes-list-type": "atomic"
                                                },
                                                "namespaceSelector": {
                                                  "type": "object",
                                                  "properties": {
                                                    "matchExpressions": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "required": [
                                                          "key",
                                                          "operator"
                                                        ],
                                                        "properties": {
                                                          "key": {
                                                            "type": "string"
                                                          },
                                                          "operator": {
                                                            "type": "string"
                                                          },
                                                          "values": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "matchLabels": {
                                                      "type": "object",
                                                      "additionalProperties": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "x-kubernetes-map-type": "atomic"
                                                },
                                                "namespaces": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "topologyKey": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "automountServiceAccountToken": {
                                    "type": "boolean"
                                  },
                                  "containers": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "name"
                                      ],
                                      "properties": {
                                        "args": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "command": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "env": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "name"
                                            ],
                                            "properties": {
                                              "name": {
                                                "type": "string"
                                              },
                                              "value": {
                                                "type": "string"
                                              },
                                              "valueFrom": {
                                                "type": "object",
                                                "properties": {
                                                  "configMapKeyRef": {
                                                    "type": "object",
                                                    "required": [
                                                      "key"
                                                    ],
                                                    "properties": {
                                                      "key": {
                                                        "type": "string"
                                                      },
                                                      "name": {
                                                        "type": "string"
                                                      },
                                                      "optional": {
                                                        "type": "boolean"
                                                      }
                                                    },
                                                    "x-kubernetes-map-type": "atomic"
                                                  },
                                                  "fieldRef": {
                                                    "type": "object",
                                                    "required": [
                                                      "fieldPath"
                                                    ],
                                                    "properties": {
                                                      "apiVersion": {
                                                        "type": "string"
                                                      },
                                                      "fieldPath": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "x-kubernetes-map-type": "atomic"
                                                  },
                                                  "resourceFieldRef": {
                                                    "type": "object",
                                                    "required": [
                                                      "resource"
                                                    ],
                                                    "properties": {
                                                      "containerName": {
                                                        "type": "string"
                                                      },
                                                      "divisor": {
                                                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                        "x-kubernetes-int-or-string": true
                                                      },
                                                      "resource": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "x-kubernetes-map-type": "atomic"
                                                  },
                                                  "secretKeyRef": {
                                                    "type": "object",
                                                    "required": [
                                                      "key"
                                                    ],
                                                    "properties": {
                                                      "key": {
                                                        "type": "string"
                                                      },
                                                      "name": {
                                                        "type": "string"
                                                      },
                                                      "optional": {
                                                        "type": "boolean"
                                                      }
                                                    },
                                                    "x-kubernetes-map-type": "atomic"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "envFrom": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "configMapRef": {
                                                "type": "object",
                                                "properties": {
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "optional": {
                                                    "type": "boolean"
                                                  }
                                                },
                                                "x-kubernetes-map-type": "atomic"
                                              },
                                              "prefix": {
                                                "type": "string"
                                              },
                                              "secretRef": {
                                                "type": "object",
                                                "properties": {
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "optional": {
                                                    "type": "boolean"
                                                  }
                                                },
                                                "x-kubernetes-map-type": "atomic"
                                              }
                                            }
                                          }
                                        },
                                        "image": {
                                          "type": "string"
                                        },
                                        "imagePullPolicy": {
                                          "type": "string"
                                        },
                                        "lifecycle": {
                                          "type": "object",
                                          "properties": {
                                            "postStart": {
                                              "type": "object",
                                              "properties": {
                                                "exec": {
                                                  "type": "object",
                                                  "properties": {
                                                    "command": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "httpGet": {
                                                  "type": "object",
                                                  "required": [
                                                    "port"
                                                  ],
                                                  "properties": {
                                                    "host": {
                                                      "type": "string"
                                                    },
                                                    "httpHeaders": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "required": [
                                                          "name",
                                                          "value"
                                                        ],
                                                        "properties": {
                                                          "name": {
                                                            "type": "string"
                                                          },
                                                          "value": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "path": {
                                                      "type": "string"
                                                    },
                                                    "port": {
                                                      "x-kubernetes-int-or-string": true
                                                    },
                                                    "scheme": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "sleep": {
                                                  "type": "object",
                                                  "required": [
                                                    "seconds"
                                                  ],
                                                  "properties": {
                                                    "seconds": {
                                                      "type": "integer",
                                                      "format": "int64"
                                                    }
                                                  }
                                                },
                                                "tcpSocket": {
                                                  "type": "object",
                                                  "required": [
                                                    "port"
                                                  ],
                                                  "properties": {
                                                    "host": {
                                                      "type": "string"
                                                    },
                                                    "port": {
                                                      "x-kubernetes-int-or-string": true
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "preStop": {
                                              "type": "object",
                                              "properties": {
                                                "exec": {
                                                  "type": "object",
                                                  "properties": {
                                                    "command": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "httpGet": {
                                                  "type": "object",
                                                  "required": [
                                                    "port"
                                                  ],
                                                  "properties": {
                                                    "host": {
                                                      "type": "string"
                                                    },
                                                    "httpHeaders": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "required": [
                                                          "name",
                                                          "value"
                                                        ],
                                                        "properties": {
                                                          "name": {
                                                            "type": "string"
                                                          },
                                                          "value": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "path": {
                                                      "type": "string"
                                                    },
                                                    "port": {
                                                      "x-kubernetes-int-or-string": true
                                                    },
                                                    "scheme": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "sleep": {
                                                  "type": "object",
                                                  "required": [
                                                    "seconds"
                                                  ],
                                                  "properties": {
                                                    "seconds": {
                                                      "type": "integer",
                                                      "format": "int64"
                                                    }
                                                  }
                                                },
                                                "tcpSocket": {
                                                  "type": "object",
                                                  "required": [
                                                    "port"
                                                  ],
                                                  "properties": {
                                                    "host": {
                                                      "type": "string"
                                                    },
                                                    "port": {
                                                      "x-kubernetes-int-or-string": true
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "livenessProbe": {
                                          "type": "object",
                                          "properties": {
                                            "exec": {
                                              "type": "object",
                                              "properties": {
                                                "command": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            },
                                            "failureThreshold": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "grpc": {
                                              "type": "object",
                                              "required": [
                                                "port"
                                              ],
                                              "properties": {
                                                "port": {
                                                  "type": "integer",
                                                  "format": "int32"
                                                },
                                                "service": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "httpGet": {
                                              "type": "object",
                                              "required": [
                                                "port"
                                              ],
                                              "properties": {
                                                "host": {
                                                  "type": "string"
                                                },
                                                "httpHeaders": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "required": [
                                                      "name",
                                                      "value"
                                                    ],
                                                    "properties": {
                                                      "name": {
                                                        "type": "string"
                                                      },
                                                      "value": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "path": {
                                                  "type": "string"
                                                },
                                                "port": {
                                                  "x-kubernetes-int-or-string": true
                                                },
                                                "scheme": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "initialDelaySeconds": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "periodSeconds": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "successThreshold": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "tcpSocket": {
                                              "type": "object",
                                              "required": [
                                                "port"
                                              ],
                                              "properties": {
                                                "host": {
                                                  "type": "string"
                                                },
                                                "port": {
                                                  "x-kubernetes-int-or-string": true
                                                }
                                              }
                                            },
                                            "terminationGracePeriodSeconds": {
                                              "type": "integer",
                                              "format": "int64"
                                            },
                                            "timeoutSeconds": {
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "name": {
                                          "type": "string"
                                        },
                                        "ports": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "containerPort"
                                            ],
                                            "properties": {
                                              "containerPort": {
                                                "type": "integer",
                                                "format": "int32"
                                              },
                                              "hostIP": {
                                                "type": "string"
                                              },
                                              "hostPort": {
                                                "type": "integer",
                                                "format": "int32"
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "protocol": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-kubernetes-list-map-keys": [
                                            "containerPort",
                                            "protocol"
                                          ],
                                          "x-kubernetes-list-type": "map"
                                        },
                                        "readinessProbe": {
                                          "type": "object",
                                          "properties": {
                                            "exec": {
                                              "type": "object",
                                              "properties": {
                                                "command": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            },
                                            "failureThreshold": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "grpc": {
                                              "type": "object",
                                              "required": [
                                                "port"
                                              ],
                                              "properties": {
                                                "port": {
                                                  "type": "integer",
                                                  "format": "int32"
                                                },
                                                "service": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "httpGet": {
                                              "type": "object",
                                              "required": [
                                                "port"
                                              ],
                                              "properties": {
                                                "host": {
                                                  "type": "string"
                                                },
                                                "httpHeaders": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "required": [
                                                      "name",
                                                      "value"
                                                    ],
                                                    "properties": {
                                                      "name": {
                                                        "type": "string"
                                                      },
                                                      "value": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "path": {
                                                  "type": "string"
                                                },
                                                "port": {
                                                  "x-kubernetes-int-or-string": true
                                                },
                                                "scheme": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "initialDelaySeconds": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "periodSeconds": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "successThreshold": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "tcpSocket": {
                                              "type": "object",
                                              "required": [
                                                "port"
                                              ],
                                              "properties": {
                                                "host": {
                                                  "type": "string"
                                                },
                                                "port": {
                                                  "x-kubernetes-int-or-string": true
                                                }
                                              }
                                            },
                                            "terminationGracePeriodSeconds": {
                                              "type": "integer",
                                              "format": "int64"
                                            },
                                            "timeoutSeconds": {
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "resizePolicy": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "resourceName",
                                              "restartPolicy"
                                            ],
                                            "properties": {
                                              "resourceName": {
                                                "type": "string"
                                              },
                                              "restartPolicy": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-kubernetes-list-type": "atomic"
                                        },
                                        "resources": {
                                          "type": "object",
                                          "properties": {
                                            "claims": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "name"
                                                ],
                                                "properties": {
                                                  "name": {
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "x-kubernetes-list-map-keys": [
                                                "name"
                                              ],
                                              "x-kubernetes-list-type": "map"
                                            },
                                            "limits": {
                                              "type": "object",
                                              "additionalProperties": {
                                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                "x-kubernetes-int-or-string": true
                                              }
                                            },
                                            "requests": {
                                              "type": "object",
                                              "additionalProperties": {
                                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                "x-kubernetes-int-or-string": true
                                              }
                                            }
                                          }
                                        },
                                        "restartPolicy": {
                                          "type": "string"
                                        },
                                        "securityContext": {
                                          "type": "object",
                                          "properties": {
                                            "allowPrivilegeEscalation": {
                                              "type": "boolean"
                                            },
                                            "capabilities": {
                                              "type": "object",
                                              "properties": {
                                                "add": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "drop": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            },
                                            "privileged": {
                                              "type": "boolean"
                                            },
                                            "procMount": {
                                              "type": "string"
                                            },
                                            "readOnlyRootFilesystem": {
                                              "type": "boolean"
                                            },
                                            "runAsGroup": {
                                              "type": "integer",
                                              "format": "int64"
                                            },
                                            "runAsNonRoot": {
                                              "type": "boolean"
                                            },
                                            "runAsUser": {
                                              "type": "integer",
                                              "format": "int64"
                                            },
                                            "seLinuxOptions": {
                                              "type": "object",
                                              "properties": {
                                                "level": {
                                                  "type": "string"
                                                },
                                                "role": {
                                                  "type": "string"
                                                },
                                                "type": {
                                                  "type": "string"
                                                },
                                                "user": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "seccompProfile": {
                                              "type": "object",
                                              "required": [
                                                "type"
                                              ],
                                              "properties": {
                                                "localhostProfile": {
                                                  "type": "string"
                                                },
                                                "type": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "windowsOptions": {
                                              "type": "object",
                                              "properties": {
                                                "gmsaCredentialSpec": {
                                                  "type": "string"
                                                },
                                                "gmsaCredentialSpecName": {
                                                  "type": "string"
                                                },
                                                "hostProcess": {
                                                  "type": "boolean"
                                                },
                                                "runAsUserName": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "startupProbe": {
                                          "type": "object",
                                          "properties": {
                                            "exec": {
                                              "type": "object",
                                              "properties": {
                                                "command": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            },
                                            "failureThreshold": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "grpc": {
                                              "type": "object",
                                              "required": [
                                                "port"
                                              ],
                                              "properties": {
                                                "port": {
                                                  "type": "integer",
                                                  "format": "int32"
                                                },
                                                "service": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "httpGet": {
                                              "type": "object",
                                              "required": [
                                                "port"
                                              ],
                                              "properties": {
                                                "host": {
                                                  "type": "string"
                                                },
                                                "httpHeaders": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "required": [
                                                      "name",
                                                      "value"
                                                    ],
                                                    "properties": {
                                                      "name": {
                                                        "type": "string"
                                                      },
                                                      "value": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "path": {
                                                  "type": "string"
                                                },
                                                "port": {
                                                  "x-kubernetes-int-or-string": true
                                                },
                                                "scheme": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "initialDelaySeconds": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "periodSeconds": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "successThreshold": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "tcpSocket": {
                                              "type": "object",
                                              "required": [
                                                "port"
                                              ],
                                              "properties": {
                                                "host": {
                                                  "type": "string"
                                                },
                                                "port": {
                                                  "x-kubernetes-int-or-string": true
                                                }
                                              }
                                            },
                                            "terminationGracePeriodSeconds": {
                                              "type": "integer",
                                              "format": "int64"
                                            },
                                            "timeoutSeconds": {
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "stdin": {
                                          "type": "boolean"
                                        },
                                        "stdinOnce": {
                                          "type": "boolean"
                                        },
                                        "terminationMessagePath": {
                                          "type": "string"
                                        },
                                        "terminationMessagePolicy": {
                                          "type": "string"
                                        },
                                        "tty": {
                                          "type": "boolean"
                                        },
                                        "volumeDevices": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "devicePath",
                                              "name"
                                            ],
                                            "properties": {
                                              "devicePath": {
                                                "type": "string"
                                              },
                                              "name": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "volumeMounts": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "mountPath",
                                              "name"
                                            ],
                                            "properties": {
                                              "mountPath": {
                                                "type": "string"
                                              },
                                              "mountPropagation": {
                                                "type": "string"
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "readOnly": {
                                                "type": "boolean"
                                              },
                                              "subPath": {
                                                "type": "string"
                                              },
                                              "subPathExpr": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "workingDir": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "dnsConfig": {
                                    "type": "object",
                                    "properties": {
                                      "nameservers": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "options": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "searches": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "dnsPolicy": {
                                    "type": "string"
                                  },
                                  "enableServiceLinks": {
                                    "type": "boolean"
                                  },
                                  "ephemeralContainers": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "name"
                                      ],
                                      "properties": {
                                        "args": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "command": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "env": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "name"
                                            ],
                                            "properties": {
                                              "name": {
                                                "type": "string"
                                              },
                                              "value": {
                                                "type": "string"
                                              },
                                              "valueFrom": {
                                                "type": "object",
                                                "properties": {
                                                  "configMapKeyRef": {
                                                    "type": "object",
                                                    "required": [
                                                      "key"
                                                    ],
                                                    "properties": {
                                                      "key": {
                                                        "type": "string"
                                                      },
                                                      "name": {
                                                        "type": "string"
                                                      },
                                                      "optional": {
                                                        "type": "boolean"
                                                      }
                                                    },
                                                    "x-kubernetes-map-type": "atomic"
                                                  },
                                                  "fieldRef": {
                                                    "type": "object",
                                                    "required": [
                                                      "fieldPath"
                                                    ],
                                                    "properties": {
                                                      "apiVersion": {
                                                        "type": "string"
                                                      },
                                                      "fieldPath": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "x-kubernetes-map-type": "atomic"
                                                  },
                                                  "resourceFieldRef": {
                                                    "type": "object",
                                                    "required": [
                                                      "resource"
                                                    ],
                                                    "properties": {
                                                      "containerName": {
                                                        "type": "string"
                                                      },
                                                      "divisor": {
                                                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                        "x-kubernetes-int-or-string": true
                                                      },
                                                      "resource": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "x-kubernetes-map-type": "atomic"
                                                  },
                                                  "secretKeyRef": {
                                                    "type": "object",
                                                    "required": [
                                                      "key"
                                                    ],
                                                    "properties": {
                                                      "key": {
                                                        "type": "string"
                                                      },
                                                      "name": {
                                                        "type": "string"
                                                      },
                                                      "optional": {
                                                        "type": "boolean"
                                                      }
                                                    },
                                                    "x-kubernetes-map-type": "atomic"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "envFrom": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "configMapRef": {
                                                "type": "object",
                                                "properties": {
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "optional": {
                                                    "type": "boolean"
                                                  }
                                                },
                                                "x-kubernetes-map-type": "atomic"
                                              },
                                              "prefix": {
                                                "type": "string"
                                              },
                                              "secretRef": {
                                                "type": "object",
                                                "properties": {
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "optional": {
                                                    "type": "boolean"
                                                  }
                                                },
                                                "x-kubernetes-map-type": "atomic"
                                              }
                                            }
                                          }
                                        },
                                        "image": {
                                          "type": "string"
                                        },
                                        "imagePullPolicy": {
                                          "type": "string"
                                        },
                                        "lifecycle": {
                                          "type": "object",
                                          "properties": {
                                            "postStart": {
                                              "type": "object",
                                              "properties": {
                                                "exec": {
                                                  "type": "object",
                                                  "properties": {
                                                    "command": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "httpGet": {
                                                  "type": "object",
                                                  "required": [
                                                    "port"
                                                  ],
                                                  "properties": {
                                                    "host": {
                                                      "type": "string"
                                                    },
                                                    "httpHeaders": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "required": [
                                                          "name",
                                                          "value"
                                                        ],
                                                        "properties": {
                                                          "name": {
                                                            "type": "string"
                                                          },
                                                          "value": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "path": {
                                                      "type": "string"
                                                    },
                                                    "port": {
                                                      "x-kubernetes-int-or-string": true
                                                    },
                                                    "scheme": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "sleep": {
                                                  "type": "object",
                                                  "required": [
                                                    "seconds"
                                                  ],
                                                  "properties": {
                                                    "seconds": {
                                                      "type": "integer",
                                                      "format": "int64"
                                                    }
                                                  }
                                                },
                                                "tcpSocket": {
                                                  "type": "object",
                                                  "required": [
                                                    "port"
                                                  ],
                                                  "properties": {
                                                    "host": {
                                                      "type": "string"
                                                    },
                                                    "port": {
                                                      "x-kubernetes-int-or-string": true
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "preStop": {
                                              "type": "object",
                                              "properties": {
                                                "exec": {
                                                  "type": "object",
                                                  "properties": {
                                                    "command": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "httpGet": {
                                                  "type": "object",
                                                  "required": [
                                                    "port"
                                                  ],
                                                  "properties": {
                                                    "host": {
                                                      "type": "string"
                                                    },
                                                    "httpHeaders": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "required": [
                                                          "name",
                                                          "value"
                                                        ],
                                                        "properties": {
                                                          "name": {
                                                            "type": "string"
                                                          },
                                                          "value": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "path": {
                                                      "type": "string"
                                                    },
                                                    "port": {
                                                      "x-kubernetes-int-or-string": true
                                                    },
                                                    "scheme": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "sleep": {
                                                  "type": "object",
                                                  "required": [
                                                    "seconds"
                                                  ],
                                                  "properties": {
                                                    "seconds": {
                                                      "type": "integer",
                                                      "format": "int64"
                                                    }
                                                  }
                                                },
                                                "tcpSocket": {
                                                  "type": "object",
                                                  "required": [
                                                    "port"
                                                  ],
                                                  "properties": {
                                                    "host": {
                                                      "type": "string"
                                                    },
                                                    "port": {
                                                      "x-kubernetes-int-or-string": true
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "livenessProbe": {
                                          "type": "object",
                                          "properties": {
                                            "exec": {
                                              "type": "object",
                                              "properties": {
                                                "command": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            },
                                            "failureThreshold": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "grpc": {
                                              "type": "object",
                                              "required": [
                                                "port"
                                              ],
                                              "properties": {
                                                "port": {
                                                  "type": "integer",
                                                  "format": "int32"
                                                },
                                                "service": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "httpGet": {
                                              "type": "object",
                                              "required": [
                                                "port"
                                              ],
                                              "properties": {
                                                "host": {
                                                  "type": "string"
                                                },
                                                "httpHeaders": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "required": [
                                                      "name",
                                                      "value"
                                                    ],
                                                    "properties": {
                                                      "name": {
                                                        "type": "string"
                                                      },
                                                      "value": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "path": {
                                                  "type": "string"
                                                },
                                                "port": {
                                                  "x-kubernetes-int-or-string": true
                                                },
                                                "scheme": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "initialDelaySeconds": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "periodSeconds": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "successThreshold": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "tcpSocket": {
                                              "type": "object",
                                              "required": [
                                                "port"
                                              ],
                                              "properties": {
                                                "host": {
                                                  "type": "string"
                                                },
                                                "port": {
                                                  "x-kubernetes-int-or-string": true
                                                }
                                              }
                                            },
                                            "terminationGracePeriodSeconds": {
                                              "type": "integer",
                                              "format": "int64"
                                            },
                                            "timeoutSeconds": {
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "name": {
                                          "type": "string"
                                        },
                                        "ports": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "containerPort"
                                            ],
                                            "properties": {
                                              "containerPort": {
                                                "type": "integer",
                                                "format": "int32"
                                              },
                                              "hostIP": {
                                                "type": "string"
                                              },
                                              "hostPort": {
                                                "type": "integer",
                                                "format": "int32"
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "protocol": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-kubernetes-list-map-keys": [
                                            "containerPort",
                                            "protocol"
                                          ],
                                          "x-kubernetes-list-type": "map"
                                        },
                                        "readinessProbe": {
                                          "type": "object",
                                          "properties": {
                                            "exec": {
                                              "type": "object",
                                              "properties": {
                                                "command": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            },
                                            "failureThreshold": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "grpc": {
                                              "type": "object",
                                              "required": [
                                                "port"
                                              ],
                                              "properties": {
                                                "port": {
                                                  "type": "integer",
                                                  "format": "int32"
                                                },
                                                "service": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "httpGet": {
                                              "type": "object",
                                              "required": [
                                                "port"
                                              ],
                                              "properties": {
                                                "host": {
                                                  "type": "string"
                                                },
                                                "httpHeaders": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "required": [
                                                      "name",
                                                      "value"
                                                    ],
                                                    "properties": {
                                                      "name": {
                                                        "type": "string"
                                                      },
                                                      "value": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "path": {
                                                  "type": "string"
                                                },
                                                "port": {
                                                  "x-kubernetes-int-or-string": true
                                                },
                                                "scheme": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "initialDelaySeconds": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "periodSeconds": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "successThreshold": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "tcpSocket": {
                                              "type": "object",
                                              "required": [
                                                "port"
                                              ],
                                              "properties": {
                                                "host": {
                                                  "type": "string"
                                                },
                                                "port": {
                                                  "x-kubernetes-int-or-string": true
                                                }
                                              }
                                            },
                                            "terminationGracePeriodSeconds": {
                                              "type": "integer",
                                              "format": "int64"
                                            },
                                            "timeoutSeconds": {
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "resizePolicy": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "resourceName",
                                              "restartPolicy"
                                            ],
                                            "properties": {
                                              "resourceName": {
                                                "type": "string"
                                              },
                                              "restartPolicy": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-kubernetes-list-type": "atomic"
                                        },
                                        "resources": {
                                          "type": "object",
                                          "properties": {
                                            "claims": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "name"
                                                ],
                                                "properties": {
                                                  "name": {
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "x-kubernetes-list-map-keys": [
                                                "name"
                                              ],
                                              "x-kubernetes-list-type": "map"
                                            },
                                            "limits": {
                                              "type": "object",
                                              "additionalProperties": {
                                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                "x-kubernetes-int-or-string": true
                                              }
                                            },
                                            "requests": {
                                              "type": "object",
                                              "additionalProperties": {
                                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                "x-kubernetes-int-or-string": true
                                              }
                                            }
                                          }
                                        },
                                        "restartPolicy": {
                                          "type": "string"
                                        },
                                        "securityContext": {
                                          "type": "object",
                                          "properties": {
                                            "allowPrivilegeEscalation": {
                                              "type": "boolean"
                                            },
                                            "capabilities": {
                                              "type": "object",
                                              "properties": {
                                                "add": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "drop": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            },
                                            "privileged": {
                                              "type": "boolean"
                                            },
                                            "procMount": {
                                              "type": "string"
                                            },
                                            "readOnlyRootFilesystem": {
                                              "type": "boolean"
                                            },
                                            "runAsGroup": {
                                              "type": "integer",
                                              "format": "int64"
                                            },
                                            "runAsNonRoot": {
                                              "type": "boolean"
                                            },
                                            "runAsUser": {
                                              "type": "integer",
                                              "format": "int64"
                                            },
                                            "seLinuxOptions": {
                                              "type": "object",
                                              "properties": {
                                                "level": {
                                                  "type": "string"
                                                },
                                                "role": {
                                                  "type": "string"
                                                },
                                                "type": {
                                                  "type": "string"
                                                },
                                                "user": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "seccompProfile": {
                                              "type": "object",
                                              "required": [
                                                "type"
                                              ],
                                              "properties": {
                                                "localhostProfile": {
                                                  "type": "string"
                                                },
                                                "type": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "windowsOptions": {
                                              "type": "object",
                                              "properties": {
                                                "gmsaCredentialSpec": {
                                                  "type": "string"
                                                },
                                                "gmsaCredentialSpecName": {
                                                  "type": "string"
                                                },
                                                "hostProcess": {
                                                  "type": "boolean"
                                                },
                                                "runAsUserName": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "startupProbe": {
                                          "type": "object",
                                          "properties": {
                                            "exec": {
                                              "type": "object",
                                              "properties": {
                                                "command": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            },
                                            "failureThreshold": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "grpc": {
                                              "type": "object",
                                              "required": [
                                                "port"
                                              ],
                                              "properties": {
                                                "port": {
                                                  "type": "integer",
                                                  "format": "int32"
                                                },
                                                "service": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "httpGet": {
                                              "type": "object",
                                              "required": [
                                                "port"
                                              ],
                                              "properties": {
                                                "host": {
                                                  "type": "string"
                                                },
                                                "httpHeaders": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "required": [
                                                      "name",
                                                      "value"
                                                    ],
                                                    "properties": {
                                                      "name": {
                                                        "type": "string"
                                                      },
                                                      "value": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "path": {
                                                  "type": "string"
                                                },
                                                "port": {
                                                  "x-kubernetes-int-or-string": true
                                                },
                                                "scheme": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "initialDelaySeconds": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "periodSeconds": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "successThreshold": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "tcpSocket": {
                                              "type": "object",
                                              "required": [
                                                "port"
                                              ],
                                              "properties": {
                                                "host": {
                                                  "type": "string"
                                                },
                                                "port": {
                                                  "x-kubernetes-int-or-string": true
                                                }
                                              }
                                            },
                                            "terminationGracePeriodSeconds": {
                                              "type": "integer",
                                              "format": "int64"
                                            },
                                            "timeoutSeconds": {
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "stdin": {
                                          "type": "boolean"
                                        },
                                        "stdinOnce": {
                                          "type": "boolean"
                                        },
                                        "targetContainerName": {
                                          "type": "string"
                                        },
                                        "terminationMessagePath": {
                                          "type": "string"
                                        },
                                        "terminationMessagePolicy": {
                                          "type": "string"
                                        },
                                        "tty": {
                                          "type": "boolean"
                                        },
                                        "volumeDevices": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "devicePath",
                                              "name"
                                            ],
                                            "properties": {
                                              "devicePath": {
                                                "type": "string"
                                              },
                                              "name": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "volumeMounts": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "mountPath",
                                              "name"
                                            ],
                                            "properties": {
                                              "mountPath": {
                                                "type": "string"
                                              },
                                              "mountPropagation": {
                                                "type": "string"
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "readOnly": {
                                                "type": "boolean"
                                              },
                                              "subPath": {
                                                "type": "string"
                                              },
                                              "subPathExpr": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "workingDir": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "hostAliases": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "hostnames": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "ip": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "hostIPC": {
                                    "type": "boolean"
                                  },
                                  "hostNetwork": {
                                    "type": "boolean"
                                  },
                                  "hostPID": {
                                    "type": "boolean"
                                  },
                                  "hostUsers": {
                                    "type": "boolean"
                                  },
                                  "hostname": {
                                    "type": "string"
                                  },
                                  "imagePullSecrets": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      },
                                      "x-kubernetes-map-type": "atomic"
                                    }
                                  },
                                  "initContainers": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "name"
                                      ],
                                      "properties": {
                                        "args": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "command": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "env": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "name"
                                            ],
                                            "properties": {
                                              "name": {
                                                "type": "string"
                                              },
                                              "value": {
                                                "type": "string"
                                              },
                                              "valueFrom": {
                                                "type": "object",
                                                "properties": {
                                                  "configMapKeyRef": {
                                                    "type": "object",
                                                    "required": [
                                                      "key"
                                                    ],
                                                    "properties": {
                                                      "key": {
                                                        "type": "string"
                                                      },
                                                      "name": {
                                                        "type": "string"
                                                      },
                                                      "optional": {
                                                        "type": "boolean"
                                                      }
                                                    },
                                                    "x-kubernetes-map-type": "atomic"
                                                  },
                                                  "fieldRef": {
                                                    "type": "object",
                                                    "required": [
                                                      "fieldPath"
                                                    ],
                                                    "properties": {
                                                      "apiVersion": {
                                                        "type": "string"
                                                      },
                                                      "fieldPath": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "x-kubernetes-map-type": "atomic"
                                                  },
                                                  "resourceFieldRef": {
                                                    "type": "object",
                                                    "required": [
                                                      "resource"
                                                    ],
                                                    "properties": {
                                                      "containerName": {
                                                        "type": "string"
                                                      },
                                                      "divisor": {
                                                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                        "x-kubernetes-int-or-string": true
                                                      },
                                                      "resource": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "x-kubernetes-map-type": "atomic"
                                                  },
                                                  "secretKeyRef": {
                                                    "type": "object",
                                                    "required": [
                                                      "key"
                                                    ],
                                                    "properties": {
                                                      "key": {
                                                        "type": "string"
                                                      },
                                                      "name": {
                                                        "type": "string"
                                                      },
                                                      "optional": {
                                                        "type": "boolean"
                                                      }
                                                    },
                                                    "x-kubernetes-map-type": "atomic"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "envFrom": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "configMapRef": {
                                                "type": "object",
                                                "properties": {
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "optional": {
                                                    "type": "boolean"
                                                  }
                                                },
                                                "x-kubernetes-map-type": "atomic"
                                              },
                                              "prefix": {
                                                "type": "string"
                                              },
                                              "secretRef": {
                                                "type": "object",
                                                "properties": {
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "optional": {
                                                    "type": "boolean"
                                                  }
                                                },
                                                "x-kubernetes-map-type": "atomic"
                                              }
                                            }
                                          }
                                        },
                                        "image": {
                                          "type": "string"
                                        },
                                        "imagePullPolicy": {
                                          "type": "string"
                                        },
                                        "lifecycle": {
                                          "type": "object",
                                          "properties": {
                                            "postStart": {
                                              "type": "object",
                                              "properties": {
                                                "exec": {
                                                  "type": "object",
                                                  "properties": {
                                                    "command": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "httpGet": {
                                                  "type": "object",
                                                  "required": [
                                                    "port"
                                                  ],
                                                  "properties": {
                                                    "host": {
                                                      "type": "string"
                                                    },
                                                    "httpHeaders": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "required": [
                                                          "name",
                                                          "value"
                                                        ],
                                                        "properties": {
                                                          "name": {
                                                            "type": "string"
                                                          },
                                                          "value": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "path": {
                                                      "type": "string"
                                                    },
                                                    "port": {
                                                      "x-kubernetes-int-or-string": true
                                                    },
                                                    "scheme": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "sleep": {
                                                  "type": "object",
                                                  "required": [
                                                    "seconds"
                                                  ],
                                                  "properties": {
                                                    "seconds": {
                                                      "type": "integer",
                                                      "format": "int64"
                                                    }
                                                  }
                                                },
                                                "tcpSocket": {
                                                  "type": "object",
                                                  "required": [
                                                    "port"
                                                  ],
                                                  "properties": {
                                                    "host": {
                                                      "type": "string"
                                                    },
                                                    "port": {
                                                      "x-kubernetes-int-or-string": true
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "preStop": {
                                              "type": "object",
                                              "properties": {
                                                "exec": {
                                                  "type": "object",
                                                  "properties": {
                                                    "command": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "httpGet": {
                                                  "type": "object",
                                                  "required": [
                                                    "port"
                                                  ],
                                                  "properties": {
                                                    "host": {
                                                      "type": "string"
                                                    },
                                                    "httpHeaders": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "required": [
                                                          "name",
                                                          "value"
                                                        ],
                                                        "properties": {
                                                          "name": {
                                                            "type": "string"
                                                          },
                                                          "value": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "path": {
                                                      "type": "string"
                                                    },
                                                    "port": {
                                                      "x-kubernetes-int-or-string": true
                                                    },
                                                    "scheme": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "sleep": {
                                                  "type": "object",
                                                  "required": [
                                                    "seconds"
                                                  ],
                                                  "properties": {
                                                    "seconds": {
                                                      "type": "integer",
                                                      "format": "int64"
                                                    }
                                                  }
                                                },
                                                "tcpSocket": {
                                                  "type": "object",
                                                  "required": [
                                                    "port"
                                                  ],
                                                  "properties": {
                                                    "host": {
                                                      "type": "string"
                                                    },
                                                    "port": {
                                                      "x-kubernetes-int-or-string": true
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "livenessProbe": {
                                          "type": "object",
                                          "properties": {
                                            "exec": {
                                              "type": "object",
                                              "properties": {
                                                "command": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            },
                                            "failureThreshold": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "grpc": {
                                              "type": "object",
                                              "required": [
                                                "port"
                                              ],
                                              "properties": {
                                                "port": {
                                                  "type": "integer",
                                                  "format": "int32"
                                                },
                                                "service": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "httpGet": {
                                              "type": "object",
                                              "required": [
                                                "port"
                                              ],
                                              "properties": {
                                                "host": {
                                                  "type": "string"
                                                },
                                                "httpHeaders": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "required": [
                                                      "name",
                                                      "value"
                                                    ],
                                                    "properties": {
                                                      "name": {
                                                        "type": "string"
                                                      },
                                                      "value": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "path": {
                                                  "type": "string"
                                                },
                                                "port": {
                                                  "x-kubernetes-int-or-string": true
                                                },
                                                "scheme": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "initialDelaySeconds": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "periodSeconds": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "successThreshold": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "tcpSocket": {
                                              "type": "object",
                                              "required": [
                                                "port"
                                              ],
                                              "properties": {
                                                "host": {
                                                  "type": "string"
                                                },
                                                "port": {
                                                  "x-kubernetes-int-or-string": true
                                                }
                                              }
                                            },
                                            "terminationGracePeriodSeconds": {
                                              "type": "integer",
                                              "format": "int64"
                                            },
                                            "timeoutSeconds": {
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "name": {
                                          "type": "string"
                                        },
                                        "ports": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "containerPort"
                                            ],
                                            "properties": {
                                              "containerPort": {
                                                "type": "integer",
                                                "format": "int32"
                                              },
                                              "hostIP": {
                                                "type": "string"
                                              },
                                              "hostPort": {
                                                "type": "integer",
                                                "format": "int32"
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "protocol": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-kubernetes-list-map-keys": [
                                            "containerPort",
                                            "protocol"
                                          ],
                                          "x-kubernetes-list-type": "map"
                                        },
                                        "readinessProbe": {
                                          "type": "object",
                                          "properties": {
                                            "exec": {
                                              "type": "object",
                                              "properties": {
                                                "command": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            },
                                            "failureThreshold": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "grpc": {
                                              "type": "object",
                                              "required": [
                                                "port"
                                              ],
                                              "properties": {
                                                "port": {
                                                  "type": "integer",
                                                  "format": "int32"
                                                },
                                                "service": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "httpGet": {
                                              "type": "object",
                                              "required": [
                                                "port"
                                              ],
                                              "properties": {
                                                "host": {
                                                  "type": "string"
                                                },
                                                "httpHeaders": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "required": [
                                                      "name",
                                                      "value"
                                                    ],
                                                    "properties": {
                                                      "name": {
                                                        "type": "string"
                                                      },
                                                      "value": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "path": {
                                                  "type": "string"
                                                },
                                                "port": {
                                                  "x-kubernetes-int-or-string": true
                                                },
                                                "scheme": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "initialDelaySeconds": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "periodSeconds": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "successThreshold": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "tcpSocket": {
                                              "type": "object",
                                              "required": [
                                                "port"
                                              ],
                                              "properties": {
                                                "host": {
                                                  "type": "string"
                                                },
                                                "port": {
                                                  "x-kubernetes-int-or-string": true
                                                }
                                              }
                                            },
                                            "terminationGracePeriodSeconds": {
                                              "type": "integer",
                                              "format": "int64"
                                            },
                                            "timeoutSeconds": {
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "resizePolicy": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "resourceName",
                                              "restartPolicy"
                                            ],
                                            "properties": {
                                              "resourceName": {
                                                "type": "string"
                                              },
                                              "restartPolicy": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-kubernetes-list-type": "atomic"
                                        },
                                        "resources": {
                                          "type": "object",
                                          "properties": {
                                            "claims": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "name"
                                                ],
                                                "properties": {
                                                  "name": {
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "x-kubernetes-list-map-keys": [
                                                "name"
                                              ],
                                              "x-kubernetes-list-type": "map"
                                            },
                                            "limits": {
                                              "type": "object",
                                              "additionalProperties": {
                                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                "x-kubernetes-int-or-string": true
                                              }
                                            },
                                            "requests": {
                                              "type": "object",
                                              "additionalProperties": {
                                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                "x-kubernetes-int-or-string": true
                                              }
                                            }
                                          }
                                        },
                                        "restartPolicy": {
                                          "type": "string"
                                        },
                                        "securityContext": {
                                          "type": "object",
                                          "properties": {
                                            "allowPrivilegeEscalation": {
                                              "type": "boolean"
                                            },
                                            "capabilities": {
                                              "type": "object",
                                              "properties": {
                                                "add": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "drop": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            },
                                            "privileged": {
                                              "type": "boolean"
                                            },
                                            "procMount": {
                                              "type": "string"
                                            },
                                            "readOnlyRootFilesystem": {
                                              "type": "boolean"
                                            },
                                            "runAsGroup": {
                                              "type": "integer",
                                              "format": "int64"
                                            },
                                            "runAsNonRoot": {
                                              "type": "boolean"
                                            },
                                            "runAsUser": {
                                              "type": "integer",
                                              "format": "int64"
                                            },
                                            "seLinuxOptions": {
                                              "type": "object",
                                              "properties": {
                                                "level": {
                                                  "type": "string"
                                                },
                                                "role": {
                                                  "type": "string"
                                                },
                                                "type": {
                                                  "type": "string"
                                                },
                                                "user": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "seccompProfile": {
                                              "type": "object",
                                              "required": [
                                                "type"
                                              ],
                                              "properties": {
                                                "localhostProfile": {
                                                  "type": "string"
                                                },
                                                "type": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "windowsOptions": {
                                              "type": "object",
                                              "properties": {
                                                "gmsaCredentialSpec": {
                                                  "type": "string"
                                                },
                                                "gmsaCredentialSpecName": {
                                                  "type": "string"
                                                },
                                                "hostProcess": {
                                                  "type": "boolean"
                                                },
                                                "runAsUserName": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "startupProbe": {
                                          "type": "object",
                                          "properties": {
                                            "exec": {
                                              "type": "object",
                                              "properties": {
                                                "command": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            },
                                            "failureThreshold": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "grpc": {
                                              "type": "object",
                                              "required": [
                                                "port"
                                              ],
                                              "properties": {
                                                "port": {
                                                  "type": "integer",
                                                  "format": "int32"
                                                },
                                                "service": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "httpGet": {
                                              "type": "object",
                                              "required": [
                                                "port"
                                              ],
                                              "properties": {
                                                "host": {
                                                  "type": "string"
                                                },
                                                "httpHeaders": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "required": [
                                                      "name",
                                                      "value"
                                                    ],
                                                    "properties": {
                                                      "name": {
                                                        "type": "string"
                                                      },
                                                      "value": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "path": {
                                                  "type": "string"
                                                },
                                                "port": {
                                                  "x-kubernetes-int-or-string": true
                                                },
                                                "scheme": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "initialDelaySeconds": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "periodSeconds": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "successThreshold": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "tcpSocket": {
                                              "type": "object",
                                              "required": [
                                                "port"
                                              ],
                                              "properties": {
                                                "host": {
                                                  "type": "string"
                                                },
                                                "port": {
                                                  "x-kubernetes-int-or-string": true
                                                }
                                              }
                                            },
                                            "terminationGracePeriodSeconds": {
                                              "type": "integer",
                                              "format": "int64"
                                            },
                                            "timeoutSeconds": {
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "stdin": {
                                          "type": "boolean"
                                        },
                                        "stdinOnce": {
                                          "type": "boolean"
                                        },
                                        "terminationMessagePath": {
                                          "type": "string"
                                        },
                                        "terminationMessagePolicy": {
                                          "type": "string"
                                        },
                                        "tty": {
                                          "type": "boolean"
                                        },
                                        "volumeDevices": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "devicePath",
                                              "name"
                                            ],
                                            "properties": {
                                              "devicePath": {
                                                "type": "string"
                                              },
                                              "name": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "volumeMounts": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "mountPath",
                                              "name"
                                            ],
                                            "properties": {
                                              "mountPath": {
                                                "type": "string"
                                              },
                                              "mountPropagation": {
                                                "type": "string"
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "readOnly": {
                                                "type": "boolean"
                                              },
                                              "subPath": {
                                                "type": "string"
                                              },
                                              "subPathExpr": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "workingDir": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "nodeName": {
                                    "type": "string"
                                  },
                                  "nodeSelector": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "x-kubernetes-map-type": "atomic"
                                  },
                                  "os": {
                                    "type": "object",
                                    "required": [
                                      "name"
                                    ],
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "overhead": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "x-kubernetes-int-or-string": true
                                    }
                                  },
                                  "preemptionPolicy": {
                                    "type": "string"
                                  },
                                  "priority": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "priorityClassName": {
                                    "type": "string"
                                  },
                                  "readinessGates": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "conditionType"
                                      ],
                                      "properties": {
                                        "conditionType": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "resourceClaims": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "name"
                                      ],
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "source": {
                                          "type": "object",
                                          "properties": {
                                            "resourceClaimName": {
                                              "type": "string"
                                            },
                                            "resourceClaimTemplateName": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "x-kubernetes-list-map-keys": [
                                      "name"
                                    ],
                                    "x-kubernetes-list-type": "map"
                                  },
                                  "restartPolicy": {
                                    "type": "string"
                                  },
                                  "runtimeClassName": {
                                    "type": "string"
                                  },
                                  "schedulerName": {
                                    "type": "string"
                                  },
                                  "schedulingGates": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "name"
                                      ],
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "x-kubernetes-list-map-keys": [
                                      "name"
                                    ],
                                    "x-kubernetes-list-type": "map"
                                  },
                                  "securityContext": {
                                    "type": "object",
                                    "properties": {
                                      "fsGroup": {
                                        "type": "integer",
                                        "format": "int64"
                                      },
                                      "fsGroupChangePolicy": {
                                        "type": "string"
                                      },
                                      "runAsGroup": {
                                        "type": "integer",
                                        "format": "int64"
                                      },
                                      "runAsNonRoot": {
                                        "type": "boolean"
                                      },
                                      "runAsUser": {
                                        "type": "integer",
                                        "format": "int64"
                                      },
                                      "seLinuxOptions": {
                                        "type": "object",
                                        "properties": {
                                          "level": {
                                            "type": "string"
                                          },
                                          "role": {
                                            "type": "string"
                                          },
                                          "type": {
                                            "type": "string"
                                          },
                                          "user": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "seccompProfile": {
                                        "type": "object",
                                        "required": [
                                          "type"
                                        ],
                                        "properties": {
                                          "localhostProfile": {
                                            "type": "string"
                                          },
                                          "type": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "supplementalGroups": {
                                        "type": "array",
                                        "items": {
                                          "type": "integer",
                                          "format": "int64"
                                        }
                                      },
                                      "sysctls": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "value"
                                          ],
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "windowsOptions": {
                                        "type": "object",
                                        "properties": {
                                          "gmsaCredentialSpec": {
                                            "type": "string"
                                          },
                                          "gmsaCredentialSpecName": {
                                            "type": "string"
                                          },
                                          "hostProcess": {
                                            "type": "boolean"
                                          },
                                          "runAsUserName": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "serviceAccount": {
                                    "type": "string"
                                  },
                                  "serviceAccountName": {
                                    "type": "string"
                                  },
                                  "setHostnameAsFQDN": {
                                    "type": "boolean"
                                  },
                                  "shareProcessNamespace": {
                                    "type": "boolean"
                                  },
                                  "subdomain": {
                                    "type": "string"
                                  },
                                  "terminationGracePeriodSeconds": {
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "tolerations": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "effect": {
                                          "type": "string"
                                        },
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "tolerationSeconds": {
                                          "type": "integer",
                                          "format": "int64"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "topologySpreadConstraints": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "maxSkew",
                                        "topologyKey",
                                        "whenUnsatisfiable"
                                      ],
                                      "properties": {
                                        "labelSelector": {
                                          "type": "object",
                                          "properties": {
                                            "matchExpressions": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "key",
                                                  "operator"
                                                ],
                                                "properties": {
                                                  "key": {
                                                    "type": "string"
                                                  },
                                                  "operator": {
                                                    "type": "string"
                                                  },
                                                  "values": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "matchLabels": {
                                              "type": "object",
                                              "additionalProperties": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-kubernetes-map-type": "atomic"
                                        },
                                        "matchLabelKeys": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "x-kubernetes-list-type": "atomic"
                                        },
                                        "maxSkew": {
                                          "type": "integer",
                                          "format": "int32"
                                        },
                                        "minDomains": {
                                          "type": "integer",
                                          "format": "int32"
                                        },
                                        "nodeAffinityPolicy": {
                                          "type": "string"
                                        },
                                        "nodeTaintsPolicy": {
                                          "type": "string"
                                        },
                                        "topologyKey": {
                                          "type": "string"
                                        },
                                        "whenUnsatisfiable": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "x-kubernetes-list-map-keys": [
                                      "topologyKey",
                                      "whenUnsatisfiable"
                                    ],
                                    "x-kubernetes-list-type": "map"
                                  },
                                  "volumes": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "name"
                                      ],
                                      "properties": {
                                        "awsElasticBlockStore": {
                                          "type": "object",
                                          "required": [
                                            "volumeID"
                                          ],
                                          "properties": {
                                            "fsType": {
                                              "type": "string"
                                            },
                                            "partition": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "readOnly": {
                                              "type": "boolean"
                                            },
                                            "volumeID": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "azureDisk": {
                                          "type": "object",
                                          "required": [
                                            "diskName",
                                            "diskURI"
                                          ],
                                          "properties": {
                                            "cachingMode": {
                                              "type": "string"
                                            },
                                            "diskName": {
                                              "type": "string"
                                            },
                                            "diskURI": {
                                              "type": "string"
                                            },
                                            "fsType": {
                                              "type": "string"
                                            },
                                            "kind": {
                                              "type": "string"
                                            },
                                            "readOnly": {
                                              "type": "boolean"
                                            }
                                          }
                                        },
                                        "azureFile": {
                                          "type": "object",
                                          "required": [
                                            "secretName",
                                            "shareName"
                                          ],
                                          "properties": {
                                            "readOnly": {
                                              "type": "boolean"
                                            },
                                            "secretName": {
                                              "type": "string"
                                            },
                                            "shareName": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "cephfs": {
                                          "type": "object",
                                          "required": [
                                            "monitors"
                                          ],
                                          "properties": {
                                            "monitors": {
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "path": {
                                              "type": "string"
                                            },
                                            "readOnly": {
                                              "type": "boolean"
                                            },
                                            "secretFile": {
                                              "type": "string"
                                            },
                                            "secretRef": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                }
                                              },
                                              "x-kubernetes-map-type": "atomic"
                                            },
                                            "user": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "cinder": {
                                          "type": "object",
                                          "required": [
                                            "volumeID"
                                          ],
                                          "properties": {
                                            "fsType": {
                                              "type": "string"
                                            },
                                            "readOnly": {
                                              "type": "boolean"
                                            },
                                            "secretRef": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                }
                                              },
                                              "x-kubernetes-map-type": "atomic"
                                            },
                                            "volumeID": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "configMap": {
                                          "type": "object",
                                          "properties": {
                                            "defaultMode": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "items": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "key",
                                                  "path"
                                                ],
                                                "properties": {
                                                  "key": {
                                                    "type": "string"
                                                  },
                                                  "mode": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                  },
                                                  "path": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "optional": {
                                              "type": "boolean"
                                            }
                                          },
                                          "x-kubernetes-map-type": "atomic"
                                        },
                                        "csi": {
                                          "type": "object",
                                          "required": [
                                            "driver"
                                          ],
                                          "properties": {
                                            "driver": {
                                              "type": "string"
                                            },
                                            "fsType": {
                                              "type": "string"
                                            },
                                            "nodePublishSecretRef": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                }
                                              },
                                              "x-kubernetes-map-type": "atomic"
                                            },
                                            "readOnly": {
                                              "type": "boolean"
                                            },
                                            "volumeAttributes": {
                                              "type": "object",
                                              "additionalProperties": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "downwardAPI": {
                                          "type": "object",
                                          "properties": {
                                            "defaultMode": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "items": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "path"
                                                ],
                                                "properties": {
                                                  "fieldRef": {
                                                    "type": "object",
                                                    "required": [
                                                      "fieldPath"
                                                    ],
                                                    "properties": {
                                                      "apiVersion": {
                                                        "type": "string"
                                                      },
                                                      "fieldPath": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "x-kubernetes-map-type": "atomic"
                                                  },
                                                  "mode": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                  },
                                                  "path": {
                                                    "type": "string"
                                                  },
                                                  "resourceFieldRef": {
                                                    "type": "object",
                                                    "required": [
                                                      "resource"
                                                    ],
                                                    "properties": {
                                                      "containerName": {
                                                        "type": "string"
                                                      },
                                                      "divisor": {
                                                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                        "x-kubernetes-int-or-string": true
                                                      },
                                                      "resource": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "x-kubernetes-map-type": "atomic"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "emptyDir": {
                                          "type": "object",
                                          "properties": {
                                            "medium": {
                                              "type": "string"
                                            },
                                            "sizeLimit": {
                                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                              "x-kubernetes-int-or-string": true
                                            }
                                          }
                                        },
                                        "ephemeral": {
                                          "type": "object",
                                          "properties": {
                                            "volumeClaimTemplate": {
                                              "type": "object",
                                              "required": [
                                                "spec"
                                              ],
                                              "properties": {
                                                "metadata": {
                                                  "type": "object"
                                                },
                                                "spec": {
                                                  "type": "object",
                                                  "properties": {
                                                    "accessModes": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "dataSource": {
                                                      "type": "object",
                                                      "required": [
                                                        "kind",
                                                        "name"
                                                      ],
                                                      "properties": {
                                                        "apiGroup": {
                                                          "type": "string"
                                                        },
                                                        "kind": {
                                                          "type": "string"
                                                        },
                                                        "name": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "x-kubernetes-map-type": "atomic"
                                                    },
                                                    "dataSourceRef": {
                                                      "type": "object",
                                                      "required": [
                                                        "kind",
                                                        "name"
                                                      ],
                                                      "properties": {
                                                        "apiGroup": {
                                                          "type": "string"
                                                        },
                                                        "kind": {
                                                          "type": "string"
                                                        },
                                                        "name": {
                                                          "type": "string"
                                                        },
                                                        "namespace": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    },
                                                    "resources": {
                                                      "type": "object",
                                                      "properties": {
                                                        "limits": {
                                                          "type": "object",
                                                          "additionalProperties": {
                                                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                            "x-kubernetes-int-or-string": true
                                                          }
                                                        },
                                                        "requests": {
                                                          "type": "object",
                                                          "additionalProperties": {
                                                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                            "x-kubernetes-int-or-string": true
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "selector": {
                                                      "type": "object",
                                                      "properties": {
                                                        "matchExpressions": {
                                                          "type": "array",
                                                          "items": {
                                                            "type": "object",
                                                            "required": [
                                                              "key",
                                                              "operator"
                                                            ],
                                                            "properties": {
                                                              "key": {
                                                                "type": "string"
                                                              },
                                                              "operator": {
                                                                "type": "string"
                                                              },
                                                              "values": {
                                                                "type": "array",
                                                                "items": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "matchLabels": {
                                                          "type": "object",
                                                          "additionalProperties": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "x-kubernetes-map-type": "atomic"
                                                    },
                                                    "storageClassName": {
                                                      "type": "string"
                                                    },
                                                    "volumeAttributesClassName": {
                                                      "type": "string"
                                                    },
                                                    "volumeMode": {
                                                      "type": "string"
                                                    },
                                                    "volumeName": {
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "fc": {
                                          "type": "object",
                                          "properties": {
                                            "fsType": {
                                              "type": "string"
                                            },
                                            "lun": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "readOnly": {
                                              "type": "boolean"
                                            },
                                            "targetWWNs": {
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "wwids": {
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "flexVolume": {
                                          "type": "object",
                                          "required": [
                                            "driver"
                                          ],
                                          "properties": {
                                            "driver": {
                                              "type": "string"
                                            },
                                            "fsType": {
                                              "type": "string"
                                            },
                                            "options": {
                                              "type": "object",
                                              "additionalProperties": {
                                                "type": "string"
                                              }
                                            },
                                            "readOnly": {
                                              "type": "boolean"
                                            },
                                            "secretRef": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                }
                                              },
                                              "x-kubernetes-map-type": "atomic"
                                            }
                                          }
                                        },
                                        "flocker": {
                                          "type": "object",
                                          "properties": {
                                            "datasetName": {
                                              "type": "string"
                                            },
                                            "datasetUUID": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "gcePersistentDisk": {
                                          "type": "object",
                                          "required": [
                                            "pdName"
                                          ],
                                          "properties": {
                                            "fsType": {
                                              "type": "string"
                                            },
                                            "partition": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "pdName": {
                                              "type": "string"
                                            },
                                            "readOnly": {
                                              "type": "boolean"
                                            }
                                          }
                                        },
                                        "gitRepo": {
                                          "type": "object",
                                          "required": [
                                            "repository"
                                          ],
                                          "properties": {
                                            "directory": {
                                              "type": "string"
                                            },
                                            "repository": {
                                              "type": "string"
                                            },
                                            "revision": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "glusterfs": {
                                          "type": "object",
                                          "required": [
                                            "endpoints",
                                            "path"
                                          ],
                                          "properties": {
                                            "endpoints": {
                                              "type": "string"
                                            },
                                            "path": {
                                              "type": "string"
                                            },
                                            "readOnly": {
                                              "type": "boolean"
                                            }
                                          }
                                        },
                                        "hostPath": {
                                          "type": "object",
                                          "required": [
                                            "path"
                                          ],
                                          "properties": {
                                            "path": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "iscsi": {
                                          "type": "object",
                                          "required": [
                                            "iqn",
                                            "lun",
                                            "targetPortal"
                                          ],
                                          "properties": {
                                            "chapAuthDiscovery": {
                                              "type": "boolean"
                                            },
                                            "chapAuthSession": {
                                              "type": "boolean"
                                            },
                                            "fsType": {
                                              "type": "string"
                                            },
                                            "initiatorName": {
                                              "type": "string"
                                            },
                                            "iqn": {
                                              "type": "string"
                                            },
                                            "iscsiInterface": {
                                              "type": "string"
                                            },
                                            "lun": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "portals": {
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "readOnly": {
                                              "type": "boolean"
                                            },
                                            "secretRef": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                }
                                              },
                                              "x-kubernetes-map-type": "atomic"
                                            },
                                            "targetPortal": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "name": {
                                          "type": "string"
                                        },
                                        "nfs": {
                                          "type": "object",
                                          "required": [
                                            "path",
                                            "server"
                                          ],
                                          "properties": {
                                            "path": {
                                              "type": "string"
                                            },
                                            "readOnly": {
                                              "type": "boolean"
                                            },
                                            "server": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "persistentVolumeClaim": {
                                          "type": "object",
                                          "required": [
                                            "claimName"
                                          ],
                                          "properties": {
                                            "claimName": {
                                              "type": "string"
                                            },
                                            "readOnly": {
                                              "type": "boolean"
                                            }
                                          }
                                        },
                                        "photonPersistentDisk": {
                                          "type": "object",
                                          "required": [
                                            "pdID"
                                          ],
                                          "properties": {
                                            "fsType": {
                                              "type": "string"
                                            },
                                            "pdID": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "portworxVolume": {
                                          "type": "object",
                                          "required": [
                                            "volumeID"
                                          ],
                                          "properties": {
                                            "fsType": {
                                              "type": "string"
                                            },
                                            "readOnly": {
                                              "type": "boolean"
                                            },
                                            "volumeID": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "projected": {
                                          "type": "object",
                                          "properties": {
                                            "defaultMode": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "sources": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "clusterTrustBundle": {
                                                    "type": "object",
                                                    "required": [
                                                      "path"
                                                    ],
                                                    "properties": {
                                                      "labelSelector": {
                                                        "type": "object",
                                                        "properties": {
                                                          "matchExpressions": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "object",
                                                              "required": [
                                                                "key",
                                                                "operator"
                                                              ],
                                                              "properties": {
                                                                "key": {
                                                                  "type": "string"
                                                                },
                                                                "operator": {
                                                                  "type": "string"
                                                                },
                                                                "values": {
                                                                  "type": "array",
                                                                  "items": {
                                                                    "type": "string"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "matchLabels": {
                                                            "type": "object",
                                                            "additionalProperties": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        },
                                                        "x-kubernetes-map-type": "atomic"
                                                      },
                                                      "name": {
                                                        "type": "string"
                                                      },
                                                      "optional": {
                                                        "type": "boolean"
                                                      },
                                                      "path": {
                                                        "type": "string"
                                                      },
                                                      "signerName": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "configMap": {
                                                    "type": "object",
                                                    "properties": {
                                                      "items": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "required": [
                                                            "key",
                                                            "path"
                                                          ],
                                                          "properties": {
                                                            "key": {
                                                              "type": "string"
                                                            },
                                                            "mode": {
                                                              "type": "integer",
                                                              "format": "int32"
                                                            },
                                                            "path": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "name": {
                                                        "type": "string"
                                                      },
                                                      "optional": {
                                                        "type": "boolean"
                                                      }
                                                    },
                                                    "x-kubernetes-map-type": "atomic"
                                                  },
                                                  "downwardAPI": {
                                                    "type": "object",
                                                    "properties": {
                                                      "items": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "required": [
                                                            "path"
                                                          ],
                                                          "properties": {
                                                            "fieldRef": {
                                                              "type": "object",
                                                              "required": [
                                                                "fieldPath"
                                                              ],
                                                              "properties": {
                                                                "apiVersion": {
                                                                  "type": "string"
                                                                },
                                                                "fieldPath": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "x-kubernetes-map-type": "atomic"
                                                            },
                                                            "mode": {
                                                              "type": "integer",
                                                              "format": "int32"
                                                            },
                                                            "path": {
                                                              "type": "string"
                                                            },
                                                            "resourceFieldRef": {
                                                              "type": "object",
                                                              "required": [
                                                                "resource"
                                                              ],
                                                              "properties": {
                                                                "containerName": {
                                                                  "type": "string"
                                                                },
                                                                "divisor": {
                                                                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                                  "x-kubernetes-int-or-string": true
                                                                },
                                                                "resource": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "x-kubernetes-map-type": "atomic"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "secret": {
                                                    "type": "object",
                                                    "properties": {
                                                      "items": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "required": [
                                                            "key",
                                                            "path"
                                                          ],
                                                          "properties": {
                                                            "key": {
                                                              "type": "string"
                                                            },
                                                            "mode": {
                                                              "type": "integer",
                                                              "format": "int32"
                                                            },
                                                            "path": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "name": {
                                                        "type": "string"
                                                      },
                                                      "optional": {
                                                        "type": "boolean"
                                                      }
                                                    },
                                                    "x-kubernetes-map-type": "atomic"
                                                  },
                                                  "serviceAccountToken": {
                                                    "type": "object",
                                                    "required": [
                                                      "path"
                                                    ],
                                                    "properties": {
                                                      "audience": {
                                                        "type": "string"
                                                      },
                                                      "expirationSeconds": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                      },
                                                      "path": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "quobyte": {
                                          "type": "object",
                                          "required": [
                                            "registry",
                                            "volume"
                                          ],
                                          "properties": {
                                            "group": {
                                              "type": "string"
                                            },
                                            "readOnly": {
                                              "type": "boolean"
                                            },
                                            "registry": {
                                              "type": "string"
                                            },
                                            "tenant": {
                                              "type": "string"
                                            },
                                            "user": {
                                              "type": "string"
                                            },
                                            "volume": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "rbd": {
                                          "type": "object",
                                          "required": [
                                            "image",
                                            "monitors"
                                          ],
                                          "properties": {
                                            "fsType": {
                                              "type": "string"
                                            },
                                            "image": {
                                              "type": "string"
                                            },
                                            "keyring": {
                                              "type": "string"
                                            },
                                            "monitors": {
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "pool": {
                                              "type": "string"
                                            },
                                            "readOnly": {
                                              "type": "boolean"
                                            },
                                            "secretRef": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                }
                                              },
                                              "x-kubernetes-map-type": "atomic"
                                            },
                                            "user": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "scaleIO": {
                                          "type": "object",
                                          "required": [
                                            "gateway",
                                            "secretRef",
                                            "system"
                                          ],
                                          "properties": {
                                            "fsType": {
                                              "type": "string"
                                            },
                                            "gateway": {
                                              "type": "string"
                                            },
                                            "protectionDomain": {
                                              "type": "string"
                                            },
                                            "readOnly": {
                                              "type": "boolean"
                                            },
                                            "secretRef": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                }
                                              },
                                              "x-kubernetes-map-type": "atomic"
                                            },
                                            "sslEnabled": {
                                              "type": "boolean"
                                            },
                                            "storageMode": {
                                              "type": "string"
                                            },
                                            "storagePool": {
                                              "type": "string"
                                            },
                                            "system": {
                                              "type": "string"
                                            },
                                            "volumeName": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "secret": {
                                          "type": "object",
                                          "properties": {
                                            "defaultMode": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "items": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "key",
                                                  "path"
                                                ],
                                                "properties": {
                                                  "key": {
                                                    "type": "string"
                                                  },
                                                  "mode": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                  },
                                                  "path": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            },
                                            "optional": {
                                              "type": "boolean"
                                            },
                                            "secretName": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "storageos": {
                                          "type": "object",
                                          "properties": {
                                            "fsType": {
                                              "type": "string"
                                            },
                                            "readOnly": {
                                              "type": "boolean"
                                            },
                                            "secretRef": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                }
                                              },
                                              "x-kubernetes-map-type": "atomic"
                                            },
                                            "volumeName": {
                                              "type": "string"
                                            },
                                            "volumeNamespace": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "vsphereVolume": {
                                          "type": "object",
                                          "required": [
                                            "volumePath"
                                          ],
                                          "properties": {
                                            "fsType": {
                                              "type": "string"
                                            },
                                            "storagePolicyID": {
                                              "type": "string"
                                            },
                                            "storagePolicyName": {
                                              "type": "string"
                                            },
                                            "volumePath": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "updateStrategy": {
                            "type": "object",
                            "properties": {
                              "rollingUpdate": {
                                "type": "object",
                                "properties": {
                                  "maxUnavailable": {
                                    "x-kubernetes-int-or-string": true
                                  },
                                  "partition": {
                                    "type": "integer",
                                    "format": "int32"
                                  }
                                }
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          },
                          "volumeClaimTemplates": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "apiVersion": {
                                  "type": "string"
                                },
                                "kind": {
                                  "type": "string"
                                },
                                "metadata": {
                                  "type": "object",
                                  "properties": {
                                    "annotations": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "labels": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "namespace": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "spec": {
                                  "type": "object",
                                  "properties": {
                                    "accessModes": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "dataSource": {
                                      "type": "object",
                                      "required": [
                                        "kind",
                                        "name"
                                      ],
                                      "properties": {
                                        "apiGroup": {
                                          "type": "string"
                                        },
                                        "kind": {
                                          "type": "string"
                                        },
                                        "name": {
                                          "type": "string"
                                        }
                                      },
                                      "x-kubernetes-map-type": "atomic"
                                    },
                                    "dataSourceRef": {
                                      "type": "object",
                                      "required": [
                                        "kind",
                                        "name"
                                      ],
                                      "properties": {
                                        "apiGroup": {
                                          "type": "string"
                                        },
                                        "kind": {
                                          "type": "string"
                                        },
                                        "name": {
                                          "type": "string"
                                        },
                                        "namespace": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "resources": {
                                      "type": "object",
                                      "properties": {
                                        "limits": {
                                          "type": "object",
                                          "additionalProperties": {
                                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                            "x-kubernetes-int-or-string": true
                                          }
                                        },
                                        "requests": {
                                          "type": "object",
                                          "additionalProperties": {
                                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                            "x-kubernetes-int-or-string": true
                                          }
                                        }
                                      }
                                    },
                                    "selector": {
                                      "type": "object",
                                      "properties": {
                                        "matchExpressions": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "key",
                                              "operator"
                                            ],
                                            "properties": {
                                              "key": {
                                                "type": "string"
                                              },
                                              "operator": {
                                                "type": "string"
                                              },
                                              "values": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "matchLabels": {
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-kubernetes-map-type": "atomic"
                                    },
                                    "storageClassName": {
                                      "type": "string"
                                    },
                                    "volumeAttributesClassName": {
                                      "type": "string"
                                    },
                                    "volumeMode": {
                                      "type": "string"
                                    },
                                    "volumeName": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "persistence": {
                "description": "The desired persistent storage configuration for each Pod in the cluster.",
                "type": "object",
                "properties": {
                  "storage": {
                    "description": "The requested size of the persistent volume attached to each Pod in the RabbitmqCluster. The format of this field matches that defined by kubernetes/apimachinery. See https://pkg.go.dev/k8s.io/apimachinery/pkg/api/resource#Quantity for more info on the format of this field.",
                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                    "x-kubernetes-int-or-string": true
                  },
                  "storageClassName": {
                    "description": "The name of the StorageClass to claim a PersistentVolume from.",
                    "type": "string"
                  }
                }
              },
              "rabbitmq": {
                "description": "Configuration options for RabbitMQ Pods created in the cluster.",
                "type": "object",
                "properties": {
                  "additionalConfig": {
                    "description": "Modify to add to the rabbitmq.conf file in addition to default configurations set by the operator. Modifying this property on an existing RabbitmqCluster will trigger a StatefulSet rolling restart and will cause rabbitmq downtime. For more information on this config, see https://www.rabbitmq.com/configure.html#config-file",
                    "type": "string",
                    "maxLength": 2000
                  },
                  "additionalPlugins": {
                    "description": "List of plugins to enable in addition to essential plugins: rabbitmq_management, rabbitmq_prometheus, and rabbitmq_peer_discovery_k8s.",
                    "type": "array",
                    "maxItems": 100,
                    "items": {
                      "description": "A Plugin to enable on the RabbitmqCluster.",
                      "type": "string",
                      "maxLength": 100,
                      "pattern": "^\\w+$"
                    }
                  },
                  "advancedConfig": {
                    "description": "Specify any rabbitmq advanced.config configurations to apply to the cluster. For more information on advanced config, see https://www.rabbitmq.com/configure.html#advanced-config-file",
                    "type": "string",
                    "maxLength": 100000
                  },
                  "envConfig": {
                    "description": "Modify to add to the rabbitmq-env.conf file. Modifying this property on an existing RabbitmqCluster will trigger a StatefulSet rolling restart and will cause rabbitmq downtime. For more information on env config, see https://www.rabbitmq.com/man/rabbitmq-env.conf.5.html",
                    "type": "string",
                    "maxLength": 100000
                  },
                  "erlangInetConfig": {
                    "description": "Erlang Inet configuration to apply to the Erlang VM running rabbit. See also: https://www.erlang.org/doc/apps/erts/inet_cfg.html",
                    "type": "string",
                    "maxLength": 2000
                  }
                }
              },
              "replicas": {
                "description": "Replicas is the number of nodes in the RabbitMQ cluster. Each node is deployed as a Replica in a StatefulSet. Only 1, 3, 5 replicas clusters are tested. This value should be an odd number to ensure the resultant cluster can establish exactly one quorum of nodes in the event of a fragmenting network partition.",
                "type": "integer",
                "format": "int32",
                "minimum": 0
              },
              "resources": {
                "description": "The desired compute resource requirements of Pods in the cluster.",
                "type": "object",
                "properties": {
                  "claims": {
                    "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable. It can only be set for containers.",
                    "type": "array",
                    "items": {
                      "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "description": "Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.",
                          "type": "string"
                        }
                      }
                    },
                    "x-kubernetes-list-map-keys": [
                      "name"
                    ],
                    "x-kubernetes-list-type": "map"
                  },
                  "limits": {
                    "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                    "type": "object",
                    "additionalProperties": {
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "x-kubernetes-int-or-string": true
                    }
                  },
                  "requests": {
                    "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                    "type": "object",
                    "additionalProperties": {
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "x-kubernetes-int-or-string": true
                    }
                  }
                }
              },
              "secretBackend": {
                "description": "Secret backend configuration for the RabbitmqCluster. Enables to fetch default user credentials and certificates from K8s external secret stores.",
                "type": "object",
                "properties": {
                  "externalSecret": {
                    "description": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                        "type": "string"
                      }
                    },
                    "x-kubernetes-map-type": "atomic"
                  },
                  "vault": {
                    "description": "VaultSpec will add Vault annotations (see https://www.vaultproject.io/docs/platform/k8s/injector/annotations) to RabbitMQ Pods. It requires a Vault Agent Sidecar Injector (https://www.vaultproject.io/docs/platform/k8s/injector) to be installed in the K8s cluster. The injector is a K8s Mutation Webhook Controller that alters RabbitMQ Pod specifications (based on the added Vault annotations) to include Vault Agent containers that render Vault secrets to the volume.",
                    "type": "object",
                    "properties": {
                      "annotations": {
                        "description": "Vault annotations that override the Vault annotations set by the cluster-operator. For a list of valid Vault annotations, see https://www.vaultproject.io/docs/platform/k8s/injector/annotations",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "defaultUserPath": {
                        "description": "Path in Vault to access a KV (Key-Value) secret with the fields username and password for the default user. For example \"secret/data/rabbitmq/config\".",
                        "type": "string"
                      },
                      "defaultUserUpdaterImage": {
                        "description": "Sidecar container that updates the default user's password in RabbitMQ when it changes in Vault. Additionally, it updates /var/lib/rabbitmq/.rabbitmqadmin.conf (used by rabbitmqadmin CLI). Set to empty string to disable the sidecar container.",
                        "type": "string"
                      },
                      "role": {
                        "description": "Role in Vault. If vault.defaultUserPath is set, this role must have capability to read the pre-created default user credential in Vault. If vault.tls is set, this role must have capability to create and update certificates in the Vault PKI engine for the domains \"<namespace>\" and \"<namespace>.svc\".",
                        "type": "string"
                      },
                      "tls": {
                        "type": "object",
                        "properties": {
                          "altNames": {
                            "description": "Specifies the requested Subject Alternative Names (SANs), in a comma-delimited list. These will be appended to the SANs added by the cluster-operator. The cluster-operator will add SANs: \"<RabbitmqCluster name>-server-<index>.<RabbitmqCluster name>-nodes.<namespace>\" for each pod, e.g. \"myrabbit-server-0.myrabbit-nodes.default\".",
                            "type": "string"
                          },
                          "commonName": {
                            "description": "Specifies the requested certificate Common Name (CN). Defaults to <serviceName>.<namespace>.svc if not provided.",
                            "type": "string"
                          },
                          "ipSans": {
                            "description": "Specifies the requested IP Subject Alternative Names, in a comma-delimited list.",
                            "type": "string"
                          },
                          "pkiIssuerPath": {
                            "description": "Path in Vault PKI engine. For example \"pki/issue/hashicorp-com\". required",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "service": {
                "description": "The desired state of the Kubernetes Service to create for the cluster.",
                "type": "object",
                "properties": {
                  "annotations": {
                    "description": "Annotations to add to the Service.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "ipFamilyPolicy": {
                    "description": "IPFamilyPolicy represents the dual-stack-ness requested or required by a Service See also: https://pkg.go.dev/k8s.io/api/core/v1#IPFamilyPolicy",
                    "type": "string",
                    "enum": [
                      "SingleStack",
                      "PreferDualStack",
                      "RequireDualStack"
                    ]
                  },
                  "type": {
                    "description": "Type of Service to create for the cluster. Must be one of: ClusterIP, LoadBalancer, NodePort. For more info see https://pkg.go.dev/k8s.io/api/core/v1#ServiceType",
                    "type": "string",
                    "enum": [
                      "ClusterIP",
                      "LoadBalancer",
                      "NodePort"
                    ]
                  }
                }
              },
              "skipPostDeploySteps": {
                "description": "If unset, or set to false, the cluster will run `rabbitmq-queues rebalance all` whenever the cluster is updated. Set to true to prevent the operator rebalancing queue leaders after a cluster update. Has no effect if the cluster only consists of one node. For more information, see https://www.rabbitmq.com/rabbitmq-queues.8.html#rebalance",
                "type": "boolean"
              },
              "terminationGracePeriodSeconds": {
                "description": "TerminationGracePeriodSeconds is the timeout that each rabbitmqcluster pod will have to terminate gracefully. It defaults to 604800 seconds ( a week long) to ensure that the container preStop lifecycle hook can finish running. For more information, see: https://github.com/rabbitmq/cluster-operator/blob/main/docs/design/20200520-graceful-pod-termination.md",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "tls": {
                "description": "TLS-related configuration for the RabbitMQ cluster.",
                "type": "object",
                "properties": {
                  "caSecretName": {
                    "description": "Name of a Secret in the same Namespace as the RabbitmqCluster, containing the Certificate Authority's public certificate for TLS. The Secret must store this as ca.crt. This Secret can be created by running `kubectl create secret generic ca-secret --from-file=ca.crt=path/to/ca.cert` Used for mTLS, and TLS for rabbitmq_web_stomp and rabbitmq_web_mqtt.",
                    "type": "string"
                  },
                  "disableNonTLSListeners": {
                    "description": "When set to true, the RabbitmqCluster disables non-TLS listeners for RabbitMQ, management plugin and for any enabled plugins in the following list: stomp, mqtt, web_stomp, web_mqtt. Only TLS-enabled clients will be able to connect.",
                    "type": "boolean"
                  },
                  "secretName": {
                    "description": "Name of a Secret in the same Namespace as the RabbitmqCluster, containing the server's private key & public certificate for TLS. The Secret must store these as tls.key and tls.crt, respectively. This Secret can be created by running `kubectl create secret tls tls-secret --cert=path/to/tls.cert --key=path/to/tls.key`",
                    "type": "string"
                  }
                }
              },
              "tolerations": {
                "description": "Tolerations is the list of Toleration resources attached to each Pod in the RabbitmqCluster.",
                "type": "array",
                "items": {
                  "description": "The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.",
                  "type": "object",
                  "properties": {
                    "effect": {
                      "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                      "type": "string"
                    },
                    "key": {
                      "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                      "type": "string"
                    },
                    "operator": {
                      "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
                      "type": "string"
                    },
                    "tolerationSeconds": {
                      "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "value": {
                      "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "status": {
            "description": "Status presents the observed state of RabbitmqCluster",
            "type": "object",
            "required": [
              "conditions"
            ],
            "properties": {
              "binding": {
                "description": "Binding exposes a secret containing the binding information for this RabbitmqCluster. It implements the service binding Provisioned Service duck type. See: https://github.com/servicebinding/spec#provisioned-service",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                    "type": "string"
                  }
                },
                "x-kubernetes-map-type": "atomic"
              },
              "conditions": {
                "description": "Set of Conditions describing the current state of the RabbitmqCluster",
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "status",
                    "type"
                  ],
                  "properties": {
                    "lastTransitionTime": {
                      "description": "The last time this Condition type changed.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "message": {
                      "description": "Full text reason for current status of the condition.",
                      "type": "string"
                    },
                    "reason": {
                      "description": "One word, camel-case reason for current status of the condition.",
                      "type": "string"
                    },
                    "status": {
                      "description": "True, False, or Unknown",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type indicates the scope of RabbitmqCluster status addressed by the condition.",
                      "type": "string"
                    }
                  }
                }
              },
              "defaultUser": {
                "description": "Identifying information on internal resources",
                "type": "object",
                "properties": {
                  "secretReference": {
                    "description": "Reference to the Kubernetes Secret containing the credentials of the default user.",
                    "type": "object",
                    "required": [
                      "keys",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "keys": {
                        "description": "Key-value pairs in the Secret corresponding to `username`, `password`, `host`, and `port`",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "name": {
                        "description": "Name of the Secret containing the default user credentials",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the Secret containing the default user credentials",
                        "type": "string"
                      }
                    }
                  },
                  "serviceReference": {
                    "description": "Reference to the Kubernetes Service serving the cluster.",
                    "type": "object",
                    "required": [
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the Service serving the cluster",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the Service serving the cluster",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "observedGeneration": {
                "description": "observedGeneration is the most recent successful generation observed for this RabbitmqCluster. It corresponds to the RabbitmqCluster's generation, which is updated on mutation by the API Server.",
                "type": "integer",
                "format": "int64"
              }
            }
          }
        },
        "description": "RabbitmqCluster is the Schema for the RabbitmqCluster API. Each instance of this object corresponds to a single RabbitMQ cluster.",
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "rabbitmq.com",
            "kind": "RabbitmqCluster",
            "version": "v1beta1"
          }
        ]
      },
      "crd": {
        "metadata": {
          "name": "rabbitmqclusters.rabbitmq.com",
          "uid": "60d30f58-8571-4689-a779-38984cc0ae62",
          "resourceVersion": "127259325",
          "generation": 2,
          "creationTimestamp": "2024-01-18T17:34:17Z",
          "labels": {
            "app.kubernetes.io/component": "rabbitmq-operator",
            "app.kubernetes.io/name": "rabbitmq-cluster-operator",
            "app.kubernetes.io/part-of": "rabbitmq",
            "servicebinding.io/provisioned-service": "true"
          },
          "annotations": {
            "controller-gen.kubebuilder.io/version": "v0.13.0"
          },
          "managedFields": [
            {
              "manager": "kube-apiserver",
              "operation": "Update",
              "apiVersion": "apiextensions.k8s.io/v1",
              "time": "2024-01-18T17:34:18Z",
              "fieldsType": "FieldsV1",
              "fieldsV1": {
                "f:status": {
                  "f:acceptedNames": {
                    "f:categories": {},
                    "f:kind": {},
                    "f:listKind": {},
                    "f:plural": {},
                    "f:shortNames": {},
                    "f:singular": {}
                  },
                  "f:conditions": {
                    "k:{\"type\":\"Established\"}": {
                      ".": {},
                      "f:lastTransitionTime": {},
                      "f:message": {},
                      "f:reason": {},
                      "f:status": {},
                      "f:type": {}
                    },
                    "k:{\"type\":\"NamesAccepted\"}": {
                      ".": {},
                      "f:lastTransitionTime": {},
                      "f:message": {},
                      "f:reason": {},
                      "f:status": {},
                      "f:type": {}
                    }
                  }
                }
              },
              "subresource": "status"
            },
            {
              "manager": "kubectl-client-side-apply",
              "operation": "Update",
              "apiVersion": "apiextensions.k8s.io/v1",
              "time": "2024-02-22T09:46:25Z",
              "fieldsType": "FieldsV1",
              "fieldsV1": {
                "f:metadata": {
                  "f:annotations": {
                    ".": {},
                    "f:controller-gen.kubebuilder.io/version": {}
                  },
                  "f:labels": {
                    ".": {},
                    "f:app.kubernetes.io/component": {},
                    "f:app.kubernetes.io/name": {},
                    "f:app.kubernetes.io/part-of": {},
                    "f:servicebinding.io/provisioned-service": {}
                  }
                },
                "f:spec": {
                  "f:conversion": {
                    ".": {},
                    "f:strategy": {}
                  },
                  "f:group": {},
                  "f:names": {
                    "f:categories": {},
                    "f:kind": {},
                    "f:listKind": {},
                    "f:plural": {},
                    "f:shortNames": {},
                    "f:singular": {}
                  },
                  "f:scope": {},
                  "f:versions": {}
                }
              }
            }
          ]
        },
        "spec": {
          "group": "rabbitmq.com",
          "names": {
            "plural": "rabbitmqclusters",
            "singular": "rabbitmqcluster",
            "shortNames": [
              "rmq"
            ],
            "kind": "RabbitmqCluster",
            "listKind": "RabbitmqClusterList",
            "categories": [
              "all",
              "rabbitmq"
            ]
          },
          "scope": "Namespaced",
          "versions": [
            {
              "name": "v1beta1",
              "served": true,
              "storage": true,
              "schema": {
                "openAPIV3Schema": {
                  "description": "RabbitmqCluster is the Schema for the RabbitmqCluster API. Each instance of this object corresponds to a single RabbitMQ cluster.",
                  "type": "object",
                  "properties": {
                    "apiVersion": {
                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                      "type": "string"
                    },
                    "metadata": {
                      "type": "object"
                    },
                    "spec": {
                      "description": "Spec is the desired state of the RabbitmqCluster Custom Resource.",
                      "type": "object",
                      "properties": {
                        "affinity": {
                          "description": "Affinity scheduling rules to be applied on created Pods.",
                          "type": "object",
                          "properties": {
                            "nodeAffinity": {
                              "description": "Describes node affinity scheduling rules for the pod.",
                              "type": "object",
                              "properties": {
                                "preferredDuringSchedulingIgnoredDuringExecution": {
                                  "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.",
                                  "type": "array",
                                  "items": {
                                    "description": "An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
                                    "type": "object",
                                    "required": [
                                      "preference",
                                      "weight"
                                    ],
                                    "properties": {
                                      "preference": {
                                        "description": "A node selector term, associated with the corresponding weight.",
                                        "type": "object",
                                        "properties": {
                                          "matchExpressions": {
                                            "description": "A list of node selector requirements by node's labels.",
                                            "type": "array",
                                            "items": {
                                              "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                              "type": "object",
                                              "required": [
                                                "key",
                                                "operator"
                                              ],
                                              "properties": {
                                                "key": {
                                                  "description": "The label key that the selector applies to.",
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "matchFields": {
                                            "description": "A list of node selector requirements by node's fields.",
                                            "type": "array",
                                            "items": {
                                              "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                              "type": "object",
                                              "required": [
                                                "key",
                                                "operator"
                                              ],
                                              "properties": {
                                                "key": {
                                                  "description": "The label key that the selector applies to.",
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "x-kubernetes-map-type": "atomic"
                                      },
                                      "weight": {
                                        "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
                                        "type": "integer",
                                        "format": "int32"
                                      }
                                    }
                                  }
                                },
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                  "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.",
                                  "type": "object",
                                  "required": [
                                    "nodeSelectorTerms"
                                  ],
                                  "properties": {
                                    "nodeSelectorTerms": {
                                      "description": "Required. A list of node selector terms. The terms are ORed.",
                                      "type": "array",
                                      "items": {
                                        "description": "A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
                                        "type": "object",
                                        "properties": {
                                          "matchExpressions": {
                                            "description": "A list of node selector requirements by node's labels.",
                                            "type": "array",
                                            "items": {
                                              "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                              "type": "object",
                                              "required": [
                                                "key",
                                                "operator"
                                              ],
                                              "properties": {
                                                "key": {
                                                  "description": "The label key that the selector applies to.",
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "matchFields": {
                                            "description": "A list of node selector requirements by node's fields.",
                                            "type": "array",
                                            "items": {
                                              "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                              "type": "object",
                                              "required": [
                                                "key",
                                                "operator"
                                              ],
                                              "properties": {
                                                "key": {
                                                  "description": "The label key that the selector applies to.",
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "x-kubernetes-map-type": "atomic"
                                      }
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                }
                              }
                            },
                            "podAffinity": {
                              "description": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).",
                              "type": "object",
                              "properties": {
                                "preferredDuringSchedulingIgnoredDuringExecution": {
                                  "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                                  "type": "array",
                                  "items": {
                                    "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                                    "type": "object",
                                    "required": [
                                      "podAffinityTerm",
                                      "weight"
                                    ],
                                    "properties": {
                                      "podAffinityTerm": {
                                        "description": "Required. A pod affinity term, associated with the corresponding weight.",
                                        "type": "object",
                                        "required": [
                                          "topologyKey"
                                        ],
                                        "properties": {
                                          "labelSelector": {
                                            "description": "A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.",
                                            "type": "object",
                                            "properties": {
                                              "matchExpressions": {
                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                "type": "array",
                                                "items": {
                                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                  "type": "object",
                                                  "required": [
                                                    "key",
                                                    "operator"
                                                  ],
                                                  "properties": {
                                                    "key": {
                                                      "description": "key is the label key that the selector applies to.",
                                                      "type": "string"
                                                    },
                                                    "operator": {
                                                      "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                      "type": "string"
                                                    },
                                                    "values": {
                                                      "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "matchLabels": {
                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                "type": "object",
                                                "additionalProperties": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          },
                                          "matchLabelKeys": {
                                            "description": "MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. Also, MatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            },
                                            "x-kubernetes-list-type": "atomic"
                                          },
                                          "mismatchLabelKeys": {
                                            "description": "MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector. Also, MismatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            },
                                            "x-kubernetes-list-type": "atomic"
                                          },
                                          "namespaceSelector": {
                                            "description": "A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \"this pod's namespace\". An empty selector ({}) matches all namespaces.",
                                            "type": "object",
                                            "properties": {
                                              "matchExpressions": {
                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                "type": "array",
                                                "items": {
                                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                  "type": "object",
                                                  "required": [
                                                    "key",
                                                    "operator"
                                                  ],
                                                  "properties": {
                                                    "key": {
                                                      "description": "key is the label key that the selector applies to.",
                                                      "type": "string"
                                                    },
                                                    "operator": {
                                                      "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                      "type": "string"
                                                    },
                                                    "values": {
                                                      "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "matchLabels": {
                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                "type": "object",
                                                "additionalProperties": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          },
                                          "namespaces": {
                                            "description": "namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "topologyKey": {
                                            "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "weight": {
                                        "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
                                        "type": "integer",
                                        "format": "int32"
                                      }
                                    }
                                  }
                                },
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                  "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                                  "type": "array",
                                  "items": {
                                    "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running",
                                    "type": "object",
                                    "required": [
                                      "topologyKey"
                                    ],
                                    "properties": {
                                      "labelSelector": {
                                        "description": "A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.",
                                        "type": "object",
                                        "properties": {
                                          "matchExpressions": {
                                            "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                            "type": "array",
                                            "items": {
                                              "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                              "type": "object",
                                              "required": [
                                                "key",
                                                "operator"
                                              ],
                                              "properties": {
                                                "key": {
                                                  "description": "key is the label key that the selector applies to.",
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "matchLabels": {
                                            "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-kubernetes-map-type": "atomic"
                                      },
                                      "matchLabelKeys": {
                                        "description": "MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. Also, MatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        },
                                        "x-kubernetes-list-type": "atomic"
                                      },
                                      "mismatchLabelKeys": {
                                        "description": "MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector. Also, MismatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        },
                                        "x-kubernetes-list-type": "atomic"
                                      },
                                      "namespaceSelector": {
                                        "description": "A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \"this pod's namespace\". An empty selector ({}) matches all namespaces.",
                                        "type": "object",
                                        "properties": {
                                          "matchExpressions": {
                                            "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                            "type": "array",
                                            "items": {
                                              "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                              "type": "object",
                                              "required": [
                                                "key",
                                                "operator"
                                              ],
                                              "properties": {
                                                "key": {
                                                  "description": "key is the label key that the selector applies to.",
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "matchLabels": {
                                            "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-kubernetes-map-type": "atomic"
                                      },
                                      "namespaces": {
                                        "description": "namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "topologyKey": {
                                        "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "podAntiAffinity": {
                              "description": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).",
                              "type": "object",
                              "properties": {
                                "preferredDuringSchedulingIgnoredDuringExecution": {
                                  "description": "The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                                  "type": "array",
                                  "items": {
                                    "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                                    "type": "object",
                                    "required": [
                                      "podAffinityTerm",
                                      "weight"
                                    ],
                                    "properties": {
                                      "podAffinityTerm": {
                                        "description": "Required. A pod affinity term, associated with the corresponding weight.",
                                        "type": "object",
                                        "required": [
                                          "topologyKey"
                                        ],
                                        "properties": {
                                          "labelSelector": {
                                            "description": "A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.",
                                            "type": "object",
                                            "properties": {
                                              "matchExpressions": {
                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                "type": "array",
                                                "items": {
                                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                  "type": "object",
                                                  "required": [
                                                    "key",
                                                    "operator"
                                                  ],
                                                  "properties": {
                                                    "key": {
                                                      "description": "key is the label key that the selector applies to.",
                                                      "type": "string"
                                                    },
                                                    "operator": {
                                                      "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                      "type": "string"
                                                    },
                                                    "values": {
                                                      "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "matchLabels": {
                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                "type": "object",
                                                "additionalProperties": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          },
                                          "matchLabelKeys": {
                                            "description": "MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. Also, MatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            },
                                            "x-kubernetes-list-type": "atomic"
                                          },
                                          "mismatchLabelKeys": {
                                            "description": "MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector. Also, MismatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            },
                                            "x-kubernetes-list-type": "atomic"
                                          },
                                          "namespaceSelector": {
                                            "description": "A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \"this pod's namespace\". An empty selector ({}) matches all namespaces.",
                                            "type": "object",
                                            "properties": {
                                              "matchExpressions": {
                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                "type": "array",
                                                "items": {
                                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                  "type": "object",
                                                  "required": [
                                                    "key",
                                                    "operator"
                                                  ],
                                                  "properties": {
                                                    "key": {
                                                      "description": "key is the label key that the selector applies to.",
                                                      "type": "string"
                                                    },
                                                    "operator": {
                                                      "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                      "type": "string"
                                                    },
                                                    "values": {
                                                      "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "matchLabels": {
                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                "type": "object",
                                                "additionalProperties": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          },
                                          "namespaces": {
                                            "description": "namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "topologyKey": {
                                            "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "weight": {
                                        "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
                                        "type": "integer",
                                        "format": "int32"
                                      }
                                    }
                                  }
                                },
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                  "description": "If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                                  "type": "array",
                                  "items": {
                                    "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running",
                                    "type": "object",
                                    "required": [
                                      "topologyKey"
                                    ],
                                    "properties": {
                                      "labelSelector": {
                                        "description": "A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.",
                                        "type": "object",
                                        "properties": {
                                          "matchExpressions": {
                                            "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                            "type": "array",
                                            "items": {
                                              "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                              "type": "object",
                                              "required": [
                                                "key",
                                                "operator"
                                              ],
                                              "properties": {
                                                "key": {
                                                  "description": "key is the label key that the selector applies to.",
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "matchLabels": {
                                            "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-kubernetes-map-type": "atomic"
                                      },
                                      "matchLabelKeys": {
                                        "description": "MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. Also, MatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        },
                                        "x-kubernetes-list-type": "atomic"
                                      },
                                      "mismatchLabelKeys": {
                                        "description": "MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector. Also, MismatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        },
                                        "x-kubernetes-list-type": "atomic"
                                      },
                                      "namespaceSelector": {
                                        "description": "A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \"this pod's namespace\". An empty selector ({}) matches all namespaces.",
                                        "type": "object",
                                        "properties": {
                                          "matchExpressions": {
                                            "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                            "type": "array",
                                            "items": {
                                              "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                              "type": "object",
                                              "required": [
                                                "key",
                                                "operator"
                                              ],
                                              "properties": {
                                                "key": {
                                                  "description": "key is the label key that the selector applies to.",
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "matchLabels": {
                                            "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-kubernetes-map-type": "atomic"
                                      },
                                      "namespaces": {
                                        "description": "namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "topologyKey": {
                                        "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "delayStartSeconds": {
                          "description": "DelayStartSeconds is the time the init container (`setup-container`) will sleep before terminating. This effectively delays the time between starting the Pod and starting the `rabbitmq` container. RabbitMQ relies on up-to-date DNS entries early during peer discovery. The purpose of this artificial delay is to ensure that DNS entries are up-to-date when booting RabbitMQ. For more information, see https://github.com/kubernetes/kubernetes/issues/92559 If your Kubernetes DNS backend is configured with a low DNS cache value or publishes not ready addresses promptly, you can decrase this value or set it to 0.",
                          "type": "integer",
                          "format": "int32",
                          "default": 30,
                          "minimum": 0
                        },
                        "image": {
                          "description": "Image is the name of the RabbitMQ docker image to use for RabbitMQ nodes in the RabbitmqCluster. Must be provided together with ImagePullSecrets in order to use an image in a private registry.",
                          "type": "string"
                        },
                        "imagePullSecrets": {
                          "description": "List of Secret resource containing access credentials to the registry for the RabbitMQ image. Required if the docker registry is private.",
                          "type": "array",
                          "items": {
                            "description": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                "type": "string"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          }
                        },
                        "override": {
                          "type": "object",
                          "properties": {
                            "service": {
                              "type": "object",
                              "properties": {
                                "metadata": {
                                  "type": "object",
                                  "properties": {
                                    "annotations": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "labels": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "spec": {
                                  "type": "object",
                                  "properties": {
                                    "allocateLoadBalancerNodePorts": {
                                      "type": "boolean"
                                    },
                                    "clusterIP": {
                                      "type": "string"
                                    },
                                    "clusterIPs": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    },
                                    "externalIPs": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "externalName": {
                                      "type": "string"
                                    },
                                    "externalTrafficPolicy": {
                                      "type": "string"
                                    },
                                    "healthCheckNodePort": {
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "internalTrafficPolicy": {
                                      "type": "string"
                                    },
                                    "ipFamilies": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    },
                                    "ipFamilyPolicy": {
                                      "type": "string"
                                    },
                                    "loadBalancerClass": {
                                      "type": "string"
                                    },
                                    "loadBalancerIP": {
                                      "type": "string"
                                    },
                                    "loadBalancerSourceRanges": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "ports": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "port"
                                        ],
                                        "properties": {
                                          "appProtocol": {
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "nodePort": {
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "port": {
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "protocol": {
                                            "type": "string",
                                            "default": "TCP"
                                          },
                                          "targetPort": {
                                            "anyOf": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "x-kubernetes-int-or-string": true
                                          }
                                        }
                                      },
                                      "x-kubernetes-list-map-keys": [
                                        "port",
                                        "protocol"
                                      ],
                                      "x-kubernetes-list-type": "map"
                                    },
                                    "publishNotReadyAddresses": {
                                      "type": "boolean"
                                    },
                                    "selector": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "string"
                                      },
                                      "x-kubernetes-map-type": "atomic"
                                    },
                                    "sessionAffinity": {
                                      "type": "string"
                                    },
                                    "sessionAffinityConfig": {
                                      "type": "object",
                                      "properties": {
                                        "clientIP": {
                                          "type": "object",
                                          "properties": {
                                            "timeoutSeconds": {
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "type": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "statefulSet": {
                              "type": "object",
                              "properties": {
                                "metadata": {
                                  "type": "object",
                                  "properties": {
                                    "annotations": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "labels": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "spec": {
                                  "type": "object",
                                  "properties": {
                                    "minReadySeconds": {
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "persistentVolumeClaimRetentionPolicy": {
                                      "type": "object",
                                      "properties": {
                                        "whenDeleted": {
                                          "type": "string"
                                        },
                                        "whenScaled": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "podManagementPolicy": {
                                      "type": "string"
                                    },
                                    "replicas": {
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "selector": {
                                      "type": "object",
                                      "properties": {
                                        "matchExpressions": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "key",
                                              "operator"
                                            ],
                                            "properties": {
                                              "key": {
                                                "type": "string"
                                              },
                                              "operator": {
                                                "type": "string"
                                              },
                                              "values": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "matchLabels": {
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-kubernetes-map-type": "atomic"
                                    },
                                    "serviceName": {
                                      "type": "string"
                                    },
                                    "template": {
                                      "type": "object",
                                      "properties": {
                                        "metadata": {
                                          "type": "object",
                                          "properties": {
                                            "annotations": {
                                              "type": "object",
                                              "additionalProperties": {
                                                "type": "string"
                                              }
                                            },
                                            "labels": {
                                              "type": "object",
                                              "additionalProperties": {
                                                "type": "string"
                                              }
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "namespace": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "spec": {
                                          "type": "object",
                                          "required": [
                                            "containers"
                                          ],
                                          "properties": {
                                            "activeDeadlineSeconds": {
                                              "type": "integer",
                                              "format": "int64"
                                            },
                                            "affinity": {
                                              "type": "object",
                                              "properties": {
                                                "nodeAffinity": {
                                                  "type": "object",
                                                  "properties": {
                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "required": [
                                                          "preference",
                                                          "weight"
                                                        ],
                                                        "properties": {
                                                          "preference": {
                                                            "type": "object",
                                                            "properties": {
                                                              "matchExpressions": {
                                                                "type": "array",
                                                                "items": {
                                                                  "type": "object",
                                                                  "required": [
                                                                    "key",
                                                                    "operator"
                                                                  ],
                                                                  "properties": {
                                                                    "key": {
                                                                      "type": "string"
                                                                    },
                                                                    "operator": {
                                                                      "type": "string"
                                                                    },
                                                                    "values": {
                                                                      "type": "array",
                                                                      "items": {
                                                                        "type": "string"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "matchFields": {
                                                                "type": "array",
                                                                "items": {
                                                                  "type": "object",
                                                                  "required": [
                                                                    "key",
                                                                    "operator"
                                                                  ],
                                                                  "properties": {
                                                                    "key": {
                                                                      "type": "string"
                                                                    },
                                                                    "operator": {
                                                                      "type": "string"
                                                                    },
                                                                    "values": {
                                                                      "type": "array",
                                                                      "items": {
                                                                        "type": "string"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            },
                                                            "x-kubernetes-map-type": "atomic"
                                                          },
                                                          "weight": {
                                                            "type": "integer",
                                                            "format": "int32"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                      "type": "object",
                                                      "required": [
                                                        "nodeSelectorTerms"
                                                      ],
                                                      "properties": {
                                                        "nodeSelectorTerms": {
                                                          "type": "array",
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "matchExpressions": {
                                                                "type": "array",
                                                                "items": {
                                                                  "type": "object",
                                                                  "required": [
                                                                    "key",
                                                                    "operator"
                                                                  ],
                                                                  "properties": {
                                                                    "key": {
                                                                      "type": "string"
                                                                    },
                                                                    "operator": {
                                                                      "type": "string"
                                                                    },
                                                                    "values": {
                                                                      "type": "array",
                                                                      "items": {
                                                                        "type": "string"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "matchFields": {
                                                                "type": "array",
                                                                "items": {
                                                                  "type": "object",
                                                                  "required": [
                                                                    "key",
                                                                    "operator"
                                                                  ],
                                                                  "properties": {
                                                                    "key": {
                                                                      "type": "string"
                                                                    },
                                                                    "operator": {
                                                                      "type": "string"
                                                                    },
                                                                    "values": {
                                                                      "type": "array",
                                                                      "items": {
                                                                        "type": "string"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            },
                                                            "x-kubernetes-map-type": "atomic"
                                                          }
                                                        }
                                                      },
                                                      "x-kubernetes-map-type": "atomic"
                                                    }
                                                  }
                                                },
                                                "podAffinity": {
                                                  "type": "object",
                                                  "properties": {
                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "required": [
                                                          "podAffinityTerm",
                                                          "weight"
                                                        ],
                                                        "properties": {
                                                          "podAffinityTerm": {
                                                            "type": "object",
                                                            "required": [
                                                              "topologyKey"
                                                            ],
                                                            "properties": {
                                                              "labelSelector": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "matchExpressions": {
                                                                    "type": "array",
                                                                    "items": {
                                                                      "type": "object",
                                                                      "required": [
                                                                        "key",
                                                                        "operator"
                                                                      ],
                                                                      "properties": {
                                                                        "key": {
                                                                          "type": "string"
                                                                        },
                                                                        "operator": {
                                                                          "type": "string"
                                                                        },
                                                                        "values": {
                                                                          "type": "array",
                                                                          "items": {
                                                                            "type": "string"
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  "matchLabels": {
                                                                    "type": "object",
                                                                    "additionalProperties": {
                                                                      "type": "string"
                                                                    }
                                                                  }
                                                                },
                                                                "x-kubernetes-map-type": "atomic"
                                                              },
                                                              "matchLabelKeys": {
                                                                "type": "array",
                                                                "items": {
                                                                  "type": "string"
                                                                },
                                                                "x-kubernetes-list-type": "atomic"
                                                              },
                                                              "mismatchLabelKeys": {
                                                                "type": "array",
                                                                "items": {
                                                                  "type": "string"
                                                                },
                                                                "x-kubernetes-list-type": "atomic"
                                                              },
                                                              "namespaceSelector": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "matchExpressions": {
                                                                    "type": "array",
                                                                    "items": {
                                                                      "type": "object",
                                                                      "required": [
                                                                        "key",
                                                                        "operator"
                                                                      ],
                                                                      "properties": {
                                                                        "key": {
                                                                          "type": "string"
                                                                        },
                                                                        "operator": {
                                                                          "type": "string"
                                                                        },
                                                                        "values": {
                                                                          "type": "array",
                                                                          "items": {
                                                                            "type": "string"
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  "matchLabels": {
                                                                    "type": "object",
                                                                    "additionalProperties": {
                                                                      "type": "string"
                                                                    }
                                                                  }
                                                                },
                                                                "x-kubernetes-map-type": "atomic"
                                                              },
                                                              "namespaces": {
                                                                "type": "array",
                                                                "items": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "topologyKey": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          },
                                                          "weight": {
                                                            "type": "integer",
                                                            "format": "int32"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "required": [
                                                          "topologyKey"
                                                        ],
                                                        "properties": {
                                                          "labelSelector": {
                                                            "type": "object",
                                                            "properties": {
                                                              "matchExpressions": {
                                                                "type": "array",
                                                                "items": {
                                                                  "type": "object",
                                                                  "required": [
                                                                    "key",
                                                                    "operator"
                                                                  ],
                                                                  "properties": {
                                                                    "key": {
                                                                      "type": "string"
                                                                    },
                                                                    "operator": {
                                                                      "type": "string"
                                                                    },
                                                                    "values": {
                                                                      "type": "array",
                                                                      "items": {
                                                                        "type": "string"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "matchLabels": {
                                                                "type": "object",
                                                                "additionalProperties": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            },
                                                            "x-kubernetes-map-type": "atomic"
                                                          },
                                                          "matchLabelKeys": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            },
                                                            "x-kubernetes-list-type": "atomic"
                                                          },
                                                          "mismatchLabelKeys": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            },
                                                            "x-kubernetes-list-type": "atomic"
                                                          },
                                                          "namespaceSelector": {
                                                            "type": "object",
                                                            "properties": {
                                                              "matchExpressions": {
                                                                "type": "array",
                                                                "items": {
                                                                  "type": "object",
                                                                  "required": [
                                                                    "key",
                                                                    "operator"
                                                                  ],
                                                                  "properties": {
                                                                    "key": {
                                                                      "type": "string"
                                                                    },
                                                                    "operator": {
                                                                      "type": "string"
                                                                    },
                                                                    "values": {
                                                                      "type": "array",
                                                                      "items": {
                                                                        "type": "string"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "matchLabels": {
                                                                "type": "object",
                                                                "additionalProperties": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            },
                                                            "x-kubernetes-map-type": "atomic"
                                                          },
                                                          "namespaces": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "topologyKey": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "podAntiAffinity": {
                                                  "type": "object",
                                                  "properties": {
                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "required": [
                                                          "podAffinityTerm",
                                                          "weight"
                                                        ],
                                                        "properties": {
                                                          "podAffinityTerm": {
                                                            "type": "object",
                                                            "required": [
                                                              "topologyKey"
                                                            ],
                                                            "properties": {
                                                              "labelSelector": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "matchExpressions": {
                                                                    "type": "array",
                                                                    "items": {
                                                                      "type": "object",
                                                                      "required": [
                                                                        "key",
                                                                        "operator"
                                                                      ],
                                                                      "properties": {
                                                                        "key": {
                                                                          "type": "string"
                                                                        },
                                                                        "operator": {
                                                                          "type": "string"
                                                                        },
                                                                        "values": {
                                                                          "type": "array",
                                                                          "items": {
                                                                            "type": "string"
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  "matchLabels": {
                                                                    "type": "object",
                                                                    "additionalProperties": {
                                                                      "type": "string"
                                                                    }
                                                                  }
                                                                },
                                                                "x-kubernetes-map-type": "atomic"
                                                              },
                                                              "matchLabelKeys": {
                                                                "type": "array",
                                                                "items": {
                                                                  "type": "string"
                                                                },
                                                                "x-kubernetes-list-type": "atomic"
                                                              },
                                                              "mismatchLabelKeys": {
                                                                "type": "array",
                                                                "items": {
                                                                  "type": "string"
                                                                },
                                                                "x-kubernetes-list-type": "atomic"
                                                              },
                                                              "namespaceSelector": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "matchExpressions": {
                                                                    "type": "array",
                                                                    "items": {
                                                                      "type": "object",
                                                                      "required": [
                                                                        "key",
                                                                        "operator"
                                                                      ],
                                                                      "properties": {
                                                                        "key": {
                                                                          "type": "string"
                                                                        },
                                                                        "operator": {
                                                                          "type": "string"
                                                                        },
                                                                        "values": {
                                                                          "type": "array",
                                                                          "items": {
                                                                            "type": "string"
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  "matchLabels": {
                                                                    "type": "object",
                                                                    "additionalProperties": {
                                                                      "type": "string"
                                                                    }
                                                                  }
                                                                },
                                                                "x-kubernetes-map-type": "atomic"
                                                              },
                                                              "namespaces": {
                                                                "type": "array",
                                                                "items": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "topologyKey": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          },
                                                          "weight": {
                                                            "type": "integer",
                                                            "format": "int32"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "required": [
                                                          "topologyKey"
                                                        ],
                                                        "properties": {
                                                          "labelSelector": {
                                                            "type": "object",
                                                            "properties": {
                                                              "matchExpressions": {
                                                                "type": "array",
                                                                "items": {
                                                                  "type": "object",
                                                                  "required": [
                                                                    "key",
                                                                    "operator"
                                                                  ],
                                                                  "properties": {
                                                                    "key": {
                                                                      "type": "string"
                                                                    },
                                                                    "operator": {
                                                                      "type": "string"
                                                                    },
                                                                    "values": {
                                                                      "type": "array",
                                                                      "items": {
                                                                        "type": "string"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "matchLabels": {
                                                                "type": "object",
                                                                "additionalProperties": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            },
                                                            "x-kubernetes-map-type": "atomic"
                                                          },
                                                          "matchLabelKeys": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            },
                                                            "x-kubernetes-list-type": "atomic"
                                                          },
                                                          "mismatchLabelKeys": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            },
                                                            "x-kubernetes-list-type": "atomic"
                                                          },
                                                          "namespaceSelector": {
                                                            "type": "object",
                                                            "properties": {
                                                              "matchExpressions": {
                                                                "type": "array",
                                                                "items": {
                                                                  "type": "object",
                                                                  "required": [
                                                                    "key",
                                                                    "operator"
                                                                  ],
                                                                  "properties": {
                                                                    "key": {
                                                                      "type": "string"
                                                                    },
                                                                    "operator": {
                                                                      "type": "string"
                                                                    },
                                                                    "values": {
                                                                      "type": "array",
                                                                      "items": {
                                                                        "type": "string"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "matchLabels": {
                                                                "type": "object",
                                                                "additionalProperties": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            },
                                                            "x-kubernetes-map-type": "atomic"
                                                          },
                                                          "namespaces": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "topologyKey": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "automountServiceAccountToken": {
                                              "type": "boolean"
                                            },
                                            "containers": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "name"
                                                ],
                                                "properties": {
                                                  "args": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "command": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "env": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "required": [
                                                        "name"
                                                      ],
                                                      "properties": {
                                                        "name": {
                                                          "type": "string"
                                                        },
                                                        "value": {
                                                          "type": "string"
                                                        },
                                                        "valueFrom": {
                                                          "type": "object",
                                                          "properties": {
                                                            "configMapKeyRef": {
                                                              "type": "object",
                                                              "required": [
                                                                "key"
                                                              ],
                                                              "properties": {
                                                                "key": {
                                                                  "type": "string"
                                                                },
                                                                "name": {
                                                                  "type": "string"
                                                                },
                                                                "optional": {
                                                                  "type": "boolean"
                                                                }
                                                              },
                                                              "x-kubernetes-map-type": "atomic"
                                                            },
                                                            "fieldRef": {
                                                              "type": "object",
                                                              "required": [
                                                                "fieldPath"
                                                              ],
                                                              "properties": {
                                                                "apiVersion": {
                                                                  "type": "string"
                                                                },
                                                                "fieldPath": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "x-kubernetes-map-type": "atomic"
                                                            },
                                                            "resourceFieldRef": {
                                                              "type": "object",
                                                              "required": [
                                                                "resource"
                                                              ],
                                                              "properties": {
                                                                "containerName": {
                                                                  "type": "string"
                                                                },
                                                                "divisor": {
                                                                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                                  "anyOf": [
                                                                    {
                                                                      "type": "integer"
                                                                    },
                                                                    {
                                                                      "type": "string"
                                                                    }
                                                                  ],
                                                                  "x-kubernetes-int-or-string": true
                                                                },
                                                                "resource": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "x-kubernetes-map-type": "atomic"
                                                            },
                                                            "secretKeyRef": {
                                                              "type": "object",
                                                              "required": [
                                                                "key"
                                                              ],
                                                              "properties": {
                                                                "key": {
                                                                  "type": "string"
                                                                },
                                                                "name": {
                                                                  "type": "string"
                                                                },
                                                                "optional": {
                                                                  "type": "boolean"
                                                                }
                                                              },
                                                              "x-kubernetes-map-type": "atomic"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "envFrom": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "configMapRef": {
                                                          "type": "object",
                                                          "properties": {
                                                            "name": {
                                                              "type": "string"
                                                            },
                                                            "optional": {
                                                              "type": "boolean"
                                                            }
                                                          },
                                                          "x-kubernetes-map-type": "atomic"
                                                        },
                                                        "prefix": {
                                                          "type": "string"
                                                        },
                                                        "secretRef": {
                                                          "type": "object",
                                                          "properties": {
                                                            "name": {
                                                              "type": "string"
                                                            },
                                                            "optional": {
                                                              "type": "boolean"
                                                            }
                                                          },
                                                          "x-kubernetes-map-type": "atomic"
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "image": {
                                                    "type": "string"
                                                  },
                                                  "imagePullPolicy": {
                                                    "type": "string"
                                                  },
                                                  "lifecycle": {
                                                    "type": "object",
                                                    "properties": {
                                                      "postStart": {
                                                        "type": "object",
                                                        "properties": {
                                                          "exec": {
                                                            "type": "object",
                                                            "properties": {
                                                              "command": {
                                                                "type": "array",
                                                                "items": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "httpGet": {
                                                            "type": "object",
                                                            "required": [
                                                              "port"
                                                            ],
                                                            "properties": {
                                                              "host": {
                                                                "type": "string"
                                                              },
                                                              "httpHeaders": {
                                                                "type": "array",
                                                                "items": {
                                                                  "type": "object",
                                                                  "required": [
                                                                    "name",
                                                                    "value"
                                                                  ],
                                                                  "properties": {
                                                                    "name": {
                                                                      "type": "string"
                                                                    },
                                                                    "value": {
                                                                      "type": "string"
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "path": {
                                                                "type": "string"
                                                              },
                                                              "port": {
                                                                "anyOf": [
                                                                  {
                                                                    "type": "integer"
                                                                  },
                                                                  {
                                                                    "type": "string"
                                                                  }
                                                                ],
                                                                "x-kubernetes-int-or-string": true
                                                              },
                                                              "scheme": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          },
                                                          "sleep": {
                                                            "type": "object",
                                                            "required": [
                                                              "seconds"
                                                            ],
                                                            "properties": {
                                                              "seconds": {
                                                                "type": "integer",
                                                                "format": "int64"
                                                              }
                                                            }
                                                          },
                                                          "tcpSocket": {
                                                            "type": "object",
                                                            "required": [
                                                              "port"
                                                            ],
                                                            "properties": {
                                                              "host": {
                                                                "type": "string"
                                                              },
                                                              "port": {
                                                                "anyOf": [
                                                                  {
                                                                    "type": "integer"
                                                                  },
                                                                  {
                                                                    "type": "string"
                                                                  }
                                                                ],
                                                                "x-kubernetes-int-or-string": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "preStop": {
                                                        "type": "object",
                                                        "properties": {
                                                          "exec": {
                                                            "type": "object",
                                                            "properties": {
                                                              "command": {
                                                                "type": "array",
                                                                "items": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "httpGet": {
                                                            "type": "object",
                                                            "required": [
                                                              "port"
                                                            ],
                                                            "properties": {
                                                              "host": {
                                                                "type": "string"
                                                              },
                                                              "httpHeaders": {
                                                                "type": "array",
                                                                "items": {
                                                                  "type": "object",
                                                                  "required": [
                                                                    "name",
                                                                    "value"
                                                                  ],
                                                                  "properties": {
                                                                    "name": {
                                                                      "type": "string"
                                                                    },
                                                                    "value": {
                                                                      "type": "string"
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "path": {
                                                                "type": "string"
                                                              },
                                                              "port": {
                                                                "anyOf": [
                                                                  {
                                                                    "type": "integer"
                                                                  },
                                                                  {
                                                                    "type": "string"
                                                                  }
                                                                ],
                                                                "x-kubernetes-int-or-string": true
                                                              },
                                                              "scheme": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          },
                                                          "sleep": {
                                                            "type": "object",
                                                            "required": [
                                                              "seconds"
                                                            ],
                                                            "properties": {
                                                              "seconds": {
                                                                "type": "integer",
                                                                "format": "int64"
                                                              }
                                                            }
                                                          },
                                                          "tcpSocket": {
                                                            "type": "object",
                                                            "required": [
                                                              "port"
                                                            ],
                                                            "properties": {
                                                              "host": {
                                                                "type": "string"
                                                              },
                                                              "port": {
                                                                "anyOf": [
                                                                  {
                                                                    "type": "integer"
                                                                  },
                                                                  {
                                                                    "type": "string"
                                                                  }
                                                                ],
                                                                "x-kubernetes-int-or-string": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "livenessProbe": {
                                                    "type": "object",
                                                    "properties": {
                                                      "exec": {
                                                        "type": "object",
                                                        "properties": {
                                                          "command": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "failureThreshold": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      },
                                                      "grpc": {
                                                        "type": "object",
                                                        "required": [
                                                          "port"
                                                        ],
                                                        "properties": {
                                                          "port": {
                                                            "type": "integer",
                                                            "format": "int32"
                                                          },
                                                          "service": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "httpGet": {
                                                        "type": "object",
                                                        "required": [
                                                          "port"
                                                        ],
                                                        "properties": {
                                                          "host": {
                                                            "type": "string"
                                                          },
                                                          "httpHeaders": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "object",
                                                              "required": [
                                                                "name",
                                                                "value"
                                                              ],
                                                              "properties": {
                                                                "name": {
                                                                  "type": "string"
                                                                },
                                                                "value": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "path": {
                                                            "type": "string"
                                                          },
                                                          "port": {
                                                            "anyOf": [
                                                              {
                                                                "type": "integer"
                                                              },
                                                              {
                                                                "type": "string"
                                                              }
                                                            ],
                                                            "x-kubernetes-int-or-string": true
                                                          },
                                                          "scheme": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "initialDelaySeconds": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      },
                                                      "periodSeconds": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      },
                                                      "successThreshold": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      },
                                                      "tcpSocket": {
                                                        "type": "object",
                                                        "required": [
                                                          "port"
                                                        ],
                                                        "properties": {
                                                          "host": {
                                                            "type": "string"
                                                          },
                                                          "port": {
                                                            "anyOf": [
                                                              {
                                                                "type": "integer"
                                                              },
                                                              {
                                                                "type": "string"
                                                              }
                                                            ],
                                                            "x-kubernetes-int-or-string": true
                                                          }
                                                        }
                                                      },
                                                      "terminationGracePeriodSeconds": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                      },
                                                      "timeoutSeconds": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      }
                                                    }
                                                  },
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "ports": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "required": [
                                                        "containerPort"
                                                      ],
                                                      "properties": {
                                                        "containerPort": {
                                                          "type": "integer",
                                                          "format": "int32"
                                                        },
                                                        "hostIP": {
                                                          "type": "string"
                                                        },
                                                        "hostPort": {
                                                          "type": "integer",
                                                          "format": "int32"
                                                        },
                                                        "name": {
                                                          "type": "string"
                                                        },
                                                        "protocol": {
                                                          "type": "string",
                                                          "default": "TCP"
                                                        }
                                                      }
                                                    },
                                                    "x-kubernetes-list-map-keys": [
                                                      "containerPort",
                                                      "protocol"
                                                    ],
                                                    "x-kubernetes-list-type": "map"
                                                  },
                                                  "readinessProbe": {
                                                    "type": "object",
                                                    "properties": {
                                                      "exec": {
                                                        "type": "object",
                                                        "properties": {
                                                          "command": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "failureThreshold": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      },
                                                      "grpc": {
                                                        "type": "object",
                                                        "required": [
                                                          "port"
                                                        ],
                                                        "properties": {
                                                          "port": {
                                                            "type": "integer",
                                                            "format": "int32"
                                                          },
                                                          "service": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "httpGet": {
                                                        "type": "object",
                                                        "required": [
                                                          "port"
                                                        ],
                                                        "properties": {
                                                          "host": {
                                                            "type": "string"
                                                          },
                                                          "httpHeaders": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "object",
                                                              "required": [
                                                                "name",
                                                                "value"
                                                              ],
                                                              "properties": {
                                                                "name": {
                                                                  "type": "string"
                                                                },
                                                                "value": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "path": {
                                                            "type": "string"
                                                          },
                                                          "port": {
                                                            "anyOf": [
                                                              {
                                                                "type": "integer"
                                                              },
                                                              {
                                                                "type": "string"
                                                              }
                                                            ],
                                                            "x-kubernetes-int-or-string": true
                                                          },
                                                          "scheme": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "initialDelaySeconds": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      },
                                                      "periodSeconds": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      },
                                                      "successThreshold": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      },
                                                      "tcpSocket": {
                                                        "type": "object",
                                                        "required": [
                                                          "port"
                                                        ],
                                                        "properties": {
                                                          "host": {
                                                            "type": "string"
                                                          },
                                                          "port": {
                                                            "anyOf": [
                                                              {
                                                                "type": "integer"
                                                              },
                                                              {
                                                                "type": "string"
                                                              }
                                                            ],
                                                            "x-kubernetes-int-or-string": true
                                                          }
                                                        }
                                                      },
                                                      "terminationGracePeriodSeconds": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                      },
                                                      "timeoutSeconds": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      }
                                                    }
                                                  },
                                                  "resizePolicy": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "required": [
                                                        "resourceName",
                                                        "restartPolicy"
                                                      ],
                                                      "properties": {
                                                        "resourceName": {
                                                          "type": "string"
                                                        },
                                                        "restartPolicy": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    },
                                                    "x-kubernetes-list-type": "atomic"
                                                  },
                                                  "resources": {
                                                    "type": "object",
                                                    "properties": {
                                                      "claims": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "required": [
                                                            "name"
                                                          ],
                                                          "properties": {
                                                            "name": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        },
                                                        "x-kubernetes-list-map-keys": [
                                                          "name"
                                                        ],
                                                        "x-kubernetes-list-type": "map"
                                                      },
                                                      "limits": {
                                                        "type": "object",
                                                        "additionalProperties": {
                                                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                          "anyOf": [
                                                            {
                                                              "type": "integer"
                                                            },
                                                            {
                                                              "type": "string"
                                                            }
                                                          ],
                                                          "x-kubernetes-int-or-string": true
                                                        }
                                                      },
                                                      "requests": {
                                                        "type": "object",
                                                        "additionalProperties": {
                                                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                          "anyOf": [
                                                            {
                                                              "type": "integer"
                                                            },
                                                            {
                                                              "type": "string"
                                                            }
                                                          ],
                                                          "x-kubernetes-int-or-string": true
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "restartPolicy": {
                                                    "type": "string"
                                                  },
                                                  "securityContext": {
                                                    "type": "object",
                                                    "properties": {
                                                      "allowPrivilegeEscalation": {
                                                        "type": "boolean"
                                                      },
                                                      "capabilities": {
                                                        "type": "object",
                                                        "properties": {
                                                          "add": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "drop": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "privileged": {
                                                        "type": "boolean"
                                                      },
                                                      "procMount": {
                                                        "type": "string"
                                                      },
                                                      "readOnlyRootFilesystem": {
                                                        "type": "boolean"
                                                      },
                                                      "runAsGroup": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                      },
                                                      "runAsNonRoot": {
                                                        "type": "boolean"
                                                      },
                                                      "runAsUser": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                      },
                                                      "seLinuxOptions": {
                                                        "type": "object",
                                                        "properties": {
                                                          "level": {
                                                            "type": "string"
                                                          },
                                                          "role": {
                                                            "type": "string"
                                                          },
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "user": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "seccompProfile": {
                                                        "type": "object",
                                                        "required": [
                                                          "type"
                                                        ],
                                                        "properties": {
                                                          "localhostProfile": {
                                                            "type": "string"
                                                          },
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "windowsOptions": {
                                                        "type": "object",
                                                        "properties": {
                                                          "gmsaCredentialSpec": {
                                                            "type": "string"
                                                          },
                                                          "gmsaCredentialSpecName": {
                                                            "type": "string"
                                                          },
                                                          "hostProcess": {
                                                            "type": "boolean"
                                                          },
                                                          "runAsUserName": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "startupProbe": {
                                                    "type": "object",
                                                    "properties": {
                                                      "exec": {
                                                        "type": "object",
                                                        "properties": {
                                                          "command": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "failureThreshold": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      },
                                                      "grpc": {
                                                        "type": "object",
                                                        "required": [
                                                          "port"
                                                        ],
                                                        "properties": {
                                                          "port": {
                                                            "type": "integer",
                                                            "format": "int32"
                                                          },
                                                          "service": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "httpGet": {
                                                        "type": "object",
                                                        "required": [
                                                          "port"
                                                        ],
                                                        "properties": {
                                                          "host": {
                                                            "type": "string"
                                                          },
                                                          "httpHeaders": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "object",
                                                              "required": [
                                                                "name",
                                                                "value"
                                                              ],
                                                              "properties": {
                                                                "name": {
                                                                  "type": "string"
                                                                },
                                                                "value": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "path": {
                                                            "type": "string"
                                                          },
                                                          "port": {
                                                            "anyOf": [
                                                              {
                                                                "type": "integer"
                                                              },
                                                              {
                                                                "type": "string"
                                                              }
                                                            ],
                                                            "x-kubernetes-int-or-string": true
                                                          },
                                                          "scheme": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "initialDelaySeconds": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      },
                                                      "periodSeconds": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      },
                                                      "successThreshold": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      },
                                                      "tcpSocket": {
                                                        "type": "object",
                                                        "required": [
                                                          "port"
                                                        ],
                                                        "properties": {
                                                          "host": {
                                                            "type": "string"
                                                          },
                                                          "port": {
                                                            "anyOf": [
                                                              {
                                                                "type": "integer"
                                                              },
                                                              {
                                                                "type": "string"
                                                              }
                                                            ],
                                                            "x-kubernetes-int-or-string": true
                                                          }
                                                        }
                                                      },
                                                      "terminationGracePeriodSeconds": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                      },
                                                      "timeoutSeconds": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      }
                                                    }
                                                  },
                                                  "stdin": {
                                                    "type": "boolean"
                                                  },
                                                  "stdinOnce": {
                                                    "type": "boolean"
                                                  },
                                                  "terminationMessagePath": {
                                                    "type": "string"
                                                  },
                                                  "terminationMessagePolicy": {
                                                    "type": "string"
                                                  },
                                                  "tty": {
                                                    "type": "boolean"
                                                  },
                                                  "volumeDevices": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "required": [
                                                        "devicePath",
                                                        "name"
                                                      ],
                                                      "properties": {
                                                        "devicePath": {
                                                          "type": "string"
                                                        },
                                                        "name": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "volumeMounts": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "required": [
                                                        "mountPath",
                                                        "name"
                                                      ],
                                                      "properties": {
                                                        "mountPath": {
                                                          "type": "string"
                                                        },
                                                        "mountPropagation": {
                                                          "type": "string"
                                                        },
                                                        "name": {
                                                          "type": "string"
                                                        },
                                                        "readOnly": {
                                                          "type": "boolean"
                                                        },
                                                        "subPath": {
                                                          "type": "string"
                                                        },
                                                        "subPathExpr": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "workingDir": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            },
                                            "dnsConfig": {
                                              "type": "object",
                                              "properties": {
                                                "nameservers": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "options": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "name": {
                                                        "type": "string"
                                                      },
                                                      "value": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "searches": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            },
                                            "dnsPolicy": {
                                              "type": "string"
                                            },
                                            "enableServiceLinks": {
                                              "type": "boolean"
                                            },
                                            "ephemeralContainers": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "name"
                                                ],
                                                "properties": {
                                                  "args": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "command": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "env": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "required": [
                                                        "name"
                                                      ],
                                                      "properties": {
                                                        "name": {
                                                          "type": "string"
                                                        },
                                                        "value": {
                                                          "type": "string"
                                                        },
                                                        "valueFrom": {
                                                          "type": "object",
                                                          "properties": {
                                                            "configMapKeyRef": {
                                                              "type": "object",
                                                              "required": [
                                                                "key"
                                                              ],
                                                              "properties": {
                                                                "key": {
                                                                  "type": "string"
                                                                },
                                                                "name": {
                                                                  "type": "string"
                                                                },
                                                                "optional": {
                                                                  "type": "boolean"
                                                                }
                                                              },
                                                              "x-kubernetes-map-type": "atomic"
                                                            },
                                                            "fieldRef": {
                                                              "type": "object",
                                                              "required": [
                                                                "fieldPath"
                                                              ],
                                                              "properties": {
                                                                "apiVersion": {
                                                                  "type": "string"
                                                                },
                                                                "fieldPath": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "x-kubernetes-map-type": "atomic"
                                                            },
                                                            "resourceFieldRef": {
                                                              "type": "object",
                                                              "required": [
                                                                "resource"
                                                              ],
                                                              "properties": {
                                                                "containerName": {
                                                                  "type": "string"
                                                                },
                                                                "divisor": {
                                                                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                                  "anyOf": [
                                                                    {
                                                                      "type": "integer"
                                                                    },
                                                                    {
                                                                      "type": "string"
                                                                    }
                                                                  ],
                                                                  "x-kubernetes-int-or-string": true
                                                                },
                                                                "resource": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "x-kubernetes-map-type": "atomic"
                                                            },
                                                            "secretKeyRef": {
                                                              "type": "object",
                                                              "required": [
                                                                "key"
                                                              ],
                                                              "properties": {
                                                                "key": {
                                                                  "type": "string"
                                                                },
                                                                "name": {
                                                                  "type": "string"
                                                                },
                                                                "optional": {
                                                                  "type": "boolean"
                                                                }
                                                              },
                                                              "x-kubernetes-map-type": "atomic"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "envFrom": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "configMapRef": {
                                                          "type": "object",
                                                          "properties": {
                                                            "name": {
                                                              "type": "string"
                                                            },
                                                            "optional": {
                                                              "type": "boolean"
                                                            }
                                                          },
                                                          "x-kubernetes-map-type": "atomic"
                                                        },
                                                        "prefix": {
                                                          "type": "string"
                                                        },
                                                        "secretRef": {
                                                          "type": "object",
                                                          "properties": {
                                                            "name": {
                                                              "type": "string"
                                                            },
                                                            "optional": {
                                                              "type": "boolean"
                                                            }
                                                          },
                                                          "x-kubernetes-map-type": "atomic"
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "image": {
                                                    "type": "string"
                                                  },
                                                  "imagePullPolicy": {
                                                    "type": "string"
                                                  },
                                                  "lifecycle": {
                                                    "type": "object",
                                                    "properties": {
                                                      "postStart": {
                                                        "type": "object",
                                                        "properties": {
                                                          "exec": {
                                                            "type": "object",
                                                            "properties": {
                                                              "command": {
                                                                "type": "array",
                                                                "items": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "httpGet": {
                                                            "type": "object",
                                                            "required": [
                                                              "port"
                                                            ],
                                                            "properties": {
                                                              "host": {
                                                                "type": "string"
                                                              },
                                                              "httpHeaders": {
                                                                "type": "array",
                                                                "items": {
                                                                  "type": "object",
                                                                  "required": [
                                                                    "name",
                                                                    "value"
                                                                  ],
                                                                  "properties": {
                                                                    "name": {
                                                                      "type": "string"
                                                                    },
                                                                    "value": {
                                                                      "type": "string"
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "path": {
                                                                "type": "string"
                                                              },
                                                              "port": {
                                                                "anyOf": [
                                                                  {
                                                                    "type": "integer"
                                                                  },
                                                                  {
                                                                    "type": "string"
                                                                  }
                                                                ],
                                                                "x-kubernetes-int-or-string": true
                                                              },
                                                              "scheme": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          },
                                                          "sleep": {
                                                            "type": "object",
                                                            "required": [
                                                              "seconds"
                                                            ],
                                                            "properties": {
                                                              "seconds": {
                                                                "type": "integer",
                                                                "format": "int64"
                                                              }
                                                            }
                                                          },
                                                          "tcpSocket": {
                                                            "type": "object",
                                                            "required": [
                                                              "port"
                                                            ],
                                                            "properties": {
                                                              "host": {
                                                                "type": "string"
                                                              },
                                                              "port": {
                                                                "anyOf": [
                                                                  {
                                                                    "type": "integer"
                                                                  },
                                                                  {
                                                                    "type": "string"
                                                                  }
                                                                ],
                                                                "x-kubernetes-int-or-string": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "preStop": {
                                                        "type": "object",
                                                        "properties": {
                                                          "exec": {
                                                            "type": "object",
                                                            "properties": {
                                                              "command": {
                                                                "type": "array",
                                                                "items": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "httpGet": {
                                                            "type": "object",
                                                            "required": [
                                                              "port"
                                                            ],
                                                            "properties": {
                                                              "host": {
                                                                "type": "string"
                                                              },
                                                              "httpHeaders": {
                                                                "type": "array",
                                                                "items": {
                                                                  "type": "object",
                                                                  "required": [
                                                                    "name",
                                                                    "value"
                                                                  ],
                                                                  "properties": {
                                                                    "name": {
                                                                      "type": "string"
                                                                    },
                                                                    "value": {
                                                                      "type": "string"
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "path": {
                                                                "type": "string"
                                                              },
                                                              "port": {
                                                                "anyOf": [
                                                                  {
                                                                    "type": "integer"
                                                                  },
                                                                  {
                                                                    "type": "string"
                                                                  }
                                                                ],
                                                                "x-kubernetes-int-or-string": true
                                                              },
                                                              "scheme": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          },
                                                          "sleep": {
                                                            "type": "object",
                                                            "required": [
                                                              "seconds"
                                                            ],
                                                            "properties": {
                                                              "seconds": {
                                                                "type": "integer",
                                                                "format": "int64"
                                                              }
                                                            }
                                                          },
                                                          "tcpSocket": {
                                                            "type": "object",
                                                            "required": [
                                                              "port"
                                                            ],
                                                            "properties": {
                                                              "host": {
                                                                "type": "string"
                                                              },
                                                              "port": {
                                                                "anyOf": [
                                                                  {
                                                                    "type": "integer"
                                                                  },
                                                                  {
                                                                    "type": "string"
                                                                  }
                                                                ],
                                                                "x-kubernetes-int-or-string": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "livenessProbe": {
                                                    "type": "object",
                                                    "properties": {
                                                      "exec": {
                                                        "type": "object",
                                                        "properties": {
                                                          "command": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "failureThreshold": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      },
                                                      "grpc": {
                                                        "type": "object",
                                                        "required": [
                                                          "port"
                                                        ],
                                                        "properties": {
                                                          "port": {
                                                            "type": "integer",
                                                            "format": "int32"
                                                          },
                                                          "service": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "httpGet": {
                                                        "type": "object",
                                                        "required": [
                                                          "port"
                                                        ],
                                                        "properties": {
                                                          "host": {
                                                            "type": "string"
                                                          },
                                                          "httpHeaders": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "object",
                                                              "required": [
                                                                "name",
                                                                "value"
                                                              ],
                                                              "properties": {
                                                                "name": {
                                                                  "type": "string"
                                                                },
                                                                "value": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "path": {
                                                            "type": "string"
                                                          },
                                                          "port": {
                                                            "anyOf": [
                                                              {
                                                                "type": "integer"
                                                              },
                                                              {
                                                                "type": "string"
                                                              }
                                                            ],
                                                            "x-kubernetes-int-or-string": true
                                                          },
                                                          "scheme": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "initialDelaySeconds": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      },
                                                      "periodSeconds": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      },
                                                      "successThreshold": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      },
                                                      "tcpSocket": {
                                                        "type": "object",
                                                        "required": [
                                                          "port"
                                                        ],
                                                        "properties": {
                                                          "host": {
                                                            "type": "string"
                                                          },
                                                          "port": {
                                                            "anyOf": [
                                                              {
                                                                "type": "integer"
                                                              },
                                                              {
                                                                "type": "string"
                                                              }
                                                            ],
                                                            "x-kubernetes-int-or-string": true
                                                          }
                                                        }
                                                      },
                                                      "terminationGracePeriodSeconds": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                      },
                                                      "timeoutSeconds": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      }
                                                    }
                                                  },
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "ports": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "required": [
                                                        "containerPort"
                                                      ],
                                                      "properties": {
                                                        "containerPort": {
                                                          "type": "integer",
                                                          "format": "int32"
                                                        },
                                                        "hostIP": {
                                                          "type": "string"
                                                        },
                                                        "hostPort": {
                                                          "type": "integer",
                                                          "format": "int32"
                                                        },
                                                        "name": {
                                                          "type": "string"
                                                        },
                                                        "protocol": {
                                                          "type": "string",
                                                          "default": "TCP"
                                                        }
                                                      }
                                                    },
                                                    "x-kubernetes-list-map-keys": [
                                                      "containerPort",
                                                      "protocol"
                                                    ],
                                                    "x-kubernetes-list-type": "map"
                                                  },
                                                  "readinessProbe": {
                                                    "type": "object",
                                                    "properties": {
                                                      "exec": {
                                                        "type": "object",
                                                        "properties": {
                                                          "command": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "failureThreshold": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      },
                                                      "grpc": {
                                                        "type": "object",
                                                        "required": [
                                                          "port"
                                                        ],
                                                        "properties": {
                                                          "port": {
                                                            "type": "integer",
                                                            "format": "int32"
                                                          },
                                                          "service": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "httpGet": {
                                                        "type": "object",
                                                        "required": [
                                                          "port"
                                                        ],
                                                        "properties": {
                                                          "host": {
                                                            "type": "string"
                                                          },
                                                          "httpHeaders": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "object",
                                                              "required": [
                                                                "name",
                                                                "value"
                                                              ],
                                                              "properties": {
                                                                "name": {
                                                                  "type": "string"
                                                                },
                                                                "value": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "path": {
                                                            "type": "string"
                                                          },
                                                          "port": {
                                                            "anyOf": [
                                                              {
                                                                "type": "integer"
                                                              },
                                                              {
                                                                "type": "string"
                                                              }
                                                            ],
                                                            "x-kubernetes-int-or-string": true
                                                          },
                                                          "scheme": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "initialDelaySeconds": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      },
                                                      "periodSeconds": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      },
                                                      "successThreshold": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      },
                                                      "tcpSocket": {
                                                        "type": "object",
                                                        "required": [
                                                          "port"
                                                        ],
                                                        "properties": {
                                                          "host": {
                                                            "type": "string"
                                                          },
                                                          "port": {
                                                            "anyOf": [
                                                              {
                                                                "type": "integer"
                                                              },
                                                              {
                                                                "type": "string"
                                                              }
                                                            ],
                                                            "x-kubernetes-int-or-string": true
                                                          }
                                                        }
                                                      },
                                                      "terminationGracePeriodSeconds": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                      },
                                                      "timeoutSeconds": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      }
                                                    }
                                                  },
                                                  "resizePolicy": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "required": [
                                                        "resourceName",
                                                        "restartPolicy"
                                                      ],
                                                      "properties": {
                                                        "resourceName": {
                                                          "type": "string"
                                                        },
                                                        "restartPolicy": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    },
                                                    "x-kubernetes-list-type": "atomic"
                                                  },
                                                  "resources": {
                                                    "type": "object",
                                                    "properties": {
                                                      "claims": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "required": [
                                                            "name"
                                                          ],
                                                          "properties": {
                                                            "name": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        },
                                                        "x-kubernetes-list-map-keys": [
                                                          "name"
                                                        ],
                                                        "x-kubernetes-list-type": "map"
                                                      },
                                                      "limits": {
                                                        "type": "object",
                                                        "additionalProperties": {
                                                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                          "anyOf": [
                                                            {
                                                              "type": "integer"
                                                            },
                                                            {
                                                              "type": "string"
                                                            }
                                                          ],
                                                          "x-kubernetes-int-or-string": true
                                                        }
                                                      },
                                                      "requests": {
                                                        "type": "object",
                                                        "additionalProperties": {
                                                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                          "anyOf": [
                                                            {
                                                              "type": "integer"
                                                            },
                                                            {
                                                              "type": "string"
                                                            }
                                                          ],
                                                          "x-kubernetes-int-or-string": true
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "restartPolicy": {
                                                    "type": "string"
                                                  },
                                                  "securityContext": {
                                                    "type": "object",
                                                    "properties": {
                                                      "allowPrivilegeEscalation": {
                                                        "type": "boolean"
                                                      },
                                                      "capabilities": {
                                                        "type": "object",
                                                        "properties": {
                                                          "add": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "drop": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "privileged": {
                                                        "type": "boolean"
                                                      },
                                                      "procMount": {
                                                        "type": "string"
                                                      },
                                                      "readOnlyRootFilesystem": {
                                                        "type": "boolean"
                                                      },
                                                      "runAsGroup": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                      },
                                                      "runAsNonRoot": {
                                                        "type": "boolean"
                                                      },
                                                      "runAsUser": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                      },
                                                      "seLinuxOptions": {
                                                        "type": "object",
                                                        "properties": {
                                                          "level": {
                                                            "type": "string"
                                                          },
                                                          "role": {
                                                            "type": "string"
                                                          },
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "user": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "seccompProfile": {
                                                        "type": "object",
                                                        "required": [
                                                          "type"
                                                        ],
                                                        "properties": {
                                                          "localhostProfile": {
                                                            "type": "string"
                                                          },
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "windowsOptions": {
                                                        "type": "object",
                                                        "properties": {
                                                          "gmsaCredentialSpec": {
                                                            "type": "string"
                                                          },
                                                          "gmsaCredentialSpecName": {
                                                            "type": "string"
                                                          },
                                                          "hostProcess": {
                                                            "type": "boolean"
                                                          },
                                                          "runAsUserName": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "startupProbe": {
                                                    "type": "object",
                                                    "properties": {
                                                      "exec": {
                                                        "type": "object",
                                                        "properties": {
                                                          "command": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "failureThreshold": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      },
                                                      "grpc": {
                                                        "type": "object",
                                                        "required": [
                                                          "port"
                                                        ],
                                                        "properties": {
                                                          "port": {
                                                            "type": "integer",
                                                            "format": "int32"
                                                          },
                                                          "service": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "httpGet": {
                                                        "type": "object",
                                                        "required": [
                                                          "port"
                                                        ],
                                                        "properties": {
                                                          "host": {
                                                            "type": "string"
                                                          },
                                                          "httpHeaders": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "object",
                                                              "required": [
                                                                "name",
                                                                "value"
                                                              ],
                                                              "properties": {
                                                                "name": {
                                                                  "type": "string"
                                                                },
                                                                "value": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "path": {
                                                            "type": "string"
                                                          },
                                                          "port": {
                                                            "anyOf": [
                                                              {
                                                                "type": "integer"
                                                              },
                                                              {
                                                                "type": "string"
                                                              }
                                                            ],
                                                            "x-kubernetes-int-or-string": true
                                                          },
                                                          "scheme": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "initialDelaySeconds": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      },
                                                      "periodSeconds": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      },
                                                      "successThreshold": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      },
                                                      "tcpSocket": {
                                                        "type": "object",
                                                        "required": [
                                                          "port"
                                                        ],
                                                        "properties": {
                                                          "host": {
                                                            "type": "string"
                                                          },
                                                          "port": {
                                                            "anyOf": [
                                                              {
                                                                "type": "integer"
                                                              },
                                                              {
                                                                "type": "string"
                                                              }
                                                            ],
                                                            "x-kubernetes-int-or-string": true
                                                          }
                                                        }
                                                      },
                                                      "terminationGracePeriodSeconds": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                      },
                                                      "timeoutSeconds": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      }
                                                    }
                                                  },
                                                  "stdin": {
                                                    "type": "boolean"
                                                  },
                                                  "stdinOnce": {
                                                    "type": "boolean"
                                                  },
                                                  "targetContainerName": {
                                                    "type": "string"
                                                  },
                                                  "terminationMessagePath": {
                                                    "type": "string"
                                                  },
                                                  "terminationMessagePolicy": {
                                                    "type": "string"
                                                  },
                                                  "tty": {
                                                    "type": "boolean"
                                                  },
                                                  "volumeDevices": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "required": [
                                                        "devicePath",
                                                        "name"
                                                      ],
                                                      "properties": {
                                                        "devicePath": {
                                                          "type": "string"
                                                        },
                                                        "name": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "volumeMounts": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "required": [
                                                        "mountPath",
                                                        "name"
                                                      ],
                                                      "properties": {
                                                        "mountPath": {
                                                          "type": "string"
                                                        },
                                                        "mountPropagation": {
                                                          "type": "string"
                                                        },
                                                        "name": {
                                                          "type": "string"
                                                        },
                                                        "readOnly": {
                                                          "type": "boolean"
                                                        },
                                                        "subPath": {
                                                          "type": "string"
                                                        },
                                                        "subPathExpr": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "workingDir": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            },
                                            "hostAliases": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "hostnames": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "ip": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            },
                                            "hostIPC": {
                                              "type": "boolean"
                                            },
                                            "hostNetwork": {
                                              "type": "boolean"
                                            },
                                            "hostPID": {
                                              "type": "boolean"
                                            },
                                            "hostUsers": {
                                              "type": "boolean"
                                            },
                                            "hostname": {
                                              "type": "string"
                                            },
                                            "imagePullSecrets": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "name": {
                                                    "type": "string"
                                                  }
                                                },
                                                "x-kubernetes-map-type": "atomic"
                                              }
                                            },
                                            "initContainers": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "name"
                                                ],
                                                "properties": {
                                                  "args": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "command": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "env": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "required": [
                                                        "name"
                                                      ],
                                                      "properties": {
                                                        "name": {
                                                          "type": "string"
                                                        },
                                                        "value": {
                                                          "type": "string"
                                                        },
                                                        "valueFrom": {
                                                          "type": "object",
                                                          "properties": {
                                                            "configMapKeyRef": {
                                                              "type": "object",
                                                              "required": [
                                                                "key"
                                                              ],
                                                              "properties": {
                                                                "key": {
                                                                  "type": "string"
                                                                },
                                                                "name": {
                                                                  "type": "string"
                                                                },
                                                                "optional": {
                                                                  "type": "boolean"
                                                                }
                                                              },
                                                              "x-kubernetes-map-type": "atomic"
                                                            },
                                                            "fieldRef": {
                                                              "type": "object",
                                                              "required": [
                                                                "fieldPath"
                                                              ],
                                                              "properties": {
                                                                "apiVersion": {
                                                                  "type": "string"
                                                                },
                                                                "fieldPath": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "x-kubernetes-map-type": "atomic"
                                                            },
                                                            "resourceFieldRef": {
                                                              "type": "object",
                                                              "required": [
                                                                "resource"
                                                              ],
                                                              "properties": {
                                                                "containerName": {
                                                                  "type": "string"
                                                                },
                                                                "divisor": {
                                                                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                                  "anyOf": [
                                                                    {
                                                                      "type": "integer"
                                                                    },
                                                                    {
                                                                      "type": "string"
                                                                    }
                                                                  ],
                                                                  "x-kubernetes-int-or-string": true
                                                                },
                                                                "resource": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "x-kubernetes-map-type": "atomic"
                                                            },
                                                            "secretKeyRef": {
                                                              "type": "object",
                                                              "required": [
                                                                "key"
                                                              ],
                                                              "properties": {
                                                                "key": {
                                                                  "type": "string"
                                                                },
                                                                "name": {
                                                                  "type": "string"
                                                                },
                                                                "optional": {
                                                                  "type": "boolean"
                                                                }
                                                              },
                                                              "x-kubernetes-map-type": "atomic"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "envFrom": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "configMapRef": {
                                                          "type": "object",
                                                          "properties": {
                                                            "name": {
                                                              "type": "string"
                                                            },
                                                            "optional": {
                                                              "type": "boolean"
                                                            }
                                                          },
                                                          "x-kubernetes-map-type": "atomic"
                                                        },
                                                        "prefix": {
                                                          "type": "string"
                                                        },
                                                        "secretRef": {
                                                          "type": "object",
                                                          "properties": {
                                                            "name": {
                                                              "type": "string"
                                                            },
                                                            "optional": {
                                                              "type": "boolean"
                                                            }
                                                          },
                                                          "x-kubernetes-map-type": "atomic"
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "image": {
                                                    "type": "string"
                                                  },
                                                  "imagePullPolicy": {
                                                    "type": "string"
                                                  },
                                                  "lifecycle": {
                                                    "type": "object",
                                                    "properties": {
                                                      "postStart": {
                                                        "type": "object",
                                                        "properties": {
                                                          "exec": {
                                                            "type": "object",
                                                            "properties": {
                                                              "command": {
                                                                "type": "array",
                                                                "items": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "httpGet": {
                                                            "type": "object",
                                                            "required": [
                                                              "port"
                                                            ],
                                                            "properties": {
                                                              "host": {
                                                                "type": "string"
                                                              },
                                                              "httpHeaders": {
                                                                "type": "array",
                                                                "items": {
                                                                  "type": "object",
                                                                  "required": [
                                                                    "name",
                                                                    "value"
                                                                  ],
                                                                  "properties": {
                                                                    "name": {
                                                                      "type": "string"
                                                                    },
                                                                    "value": {
                                                                      "type": "string"
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "path": {
                                                                "type": "string"
                                                              },
                                                              "port": {
                                                                "anyOf": [
                                                                  {
                                                                    "type": "integer"
                                                                  },
                                                                  {
                                                                    "type": "string"
                                                                  }
                                                                ],
                                                                "x-kubernetes-int-or-string": true
                                                              },
                                                              "scheme": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          },
                                                          "sleep": {
                                                            "type": "object",
                                                            "required": [
                                                              "seconds"
                                                            ],
                                                            "properties": {
                                                              "seconds": {
                                                                "type": "integer",
                                                                "format": "int64"
                                                              }
                                                            }
                                                          },
                                                          "tcpSocket": {
                                                            "type": "object",
                                                            "required": [
                                                              "port"
                                                            ],
                                                            "properties": {
                                                              "host": {
                                                                "type": "string"
                                                              },
                                                              "port": {
                                                                "anyOf": [
                                                                  {
                                                                    "type": "integer"
                                                                  },
                                                                  {
                                                                    "type": "string"
                                                                  }
                                                                ],
                                                                "x-kubernetes-int-or-string": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "preStop": {
                                                        "type": "object",
                                                        "properties": {
                                                          "exec": {
                                                            "type": "object",
                                                            "properties": {
                                                              "command": {
                                                                "type": "array",
                                                                "items": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "httpGet": {
                                                            "type": "object",
                                                            "required": [
                                                              "port"
                                                            ],
                                                            "properties": {
                                                              "host": {
                                                                "type": "string"
                                                              },
                                                              "httpHeaders": {
                                                                "type": "array",
                                                                "items": {
                                                                  "type": "object",
                                                                  "required": [
                                                                    "name",
                                                                    "value"
                                                                  ],
                                                                  "properties": {
                                                                    "name": {
                                                                      "type": "string"
                                                                    },
                                                                    "value": {
                                                                      "type": "string"
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "path": {
                                                                "type": "string"
                                                              },
                                                              "port": {
                                                                "anyOf": [
                                                                  {
                                                                    "type": "integer"
                                                                  },
                                                                  {
                                                                    "type": "string"
                                                                  }
                                                                ],
                                                                "x-kubernetes-int-or-string": true
                                                              },
                                                              "scheme": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          },
                                                          "sleep": {
                                                            "type": "object",
                                                            "required": [
                                                              "seconds"
                                                            ],
                                                            "properties": {
                                                              "seconds": {
                                                                "type": "integer",
                                                                "format": "int64"
                                                              }
                                                            }
                                                          },
                                                          "tcpSocket": {
                                                            "type": "object",
                                                            "required": [
                                                              "port"
                                                            ],
                                                            "properties": {
                                                              "host": {
                                                                "type": "string"
                                                              },
                                                              "port": {
                                                                "anyOf": [
                                                                  {
                                                                    "type": "integer"
                                                                  },
                                                                  {
                                                                    "type": "string"
                                                                  }
                                                                ],
                                                                "x-kubernetes-int-or-string": true
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "livenessProbe": {
                                                    "type": "object",
                                                    "properties": {
                                                      "exec": {
                                                        "type": "object",
                                                        "properties": {
                                                          "command": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "failureThreshold": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      },
                                                      "grpc": {
                                                        "type": "object",
                                                        "required": [
                                                          "port"
                                                        ],
                                                        "properties": {
                                                          "port": {
                                                            "type": "integer",
                                                            "format": "int32"
                                                          },
                                                          "service": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "httpGet": {
                                                        "type": "object",
                                                        "required": [
                                                          "port"
                                                        ],
                                                        "properties": {
                                                          "host": {
                                                            "type": "string"
                                                          },
                                                          "httpHeaders": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "object",
                                                              "required": [
                                                                "name",
                                                                "value"
                                                              ],
                                                              "properties": {
                                                                "name": {
                                                                  "type": "string"
                                                                },
                                                                "value": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "path": {
                                                            "type": "string"
                                                          },
                                                          "port": {
                                                            "anyOf": [
                                                              {
                                                                "type": "integer"
                                                              },
                                                              {
                                                                "type": "string"
                                                              }
                                                            ],
                                                            "x-kubernetes-int-or-string": true
                                                          },
                                                          "scheme": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "initialDelaySeconds": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      },
                                                      "periodSeconds": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      },
                                                      "successThreshold": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      },
                                                      "tcpSocket": {
                                                        "type": "object",
                                                        "required": [
                                                          "port"
                                                        ],
                                                        "properties": {
                                                          "host": {
                                                            "type": "string"
                                                          },
                                                          "port": {
                                                            "anyOf": [
                                                              {
                                                                "type": "integer"
                                                              },
                                                              {
                                                                "type": "string"
                                                              }
                                                            ],
                                                            "x-kubernetes-int-or-string": true
                                                          }
                                                        }
                                                      },
                                                      "terminationGracePeriodSeconds": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                      },
                                                      "timeoutSeconds": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      }
                                                    }
                                                  },
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "ports": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "required": [
                                                        "containerPort"
                                                      ],
                                                      "properties": {
                                                        "containerPort": {
                                                          "type": "integer",
                                                          "format": "int32"
                                                        },
                                                        "hostIP": {
                                                          "type": "string"
                                                        },
                                                        "hostPort": {
                                                          "type": "integer",
                                                          "format": "int32"
                                                        },
                                                        "name": {
                                                          "type": "string"
                                                        },
                                                        "protocol": {
                                                          "type": "string",
                                                          "default": "TCP"
                                                        }
                                                      }
                                                    },
                                                    "x-kubernetes-list-map-keys": [
                                                      "containerPort",
                                                      "protocol"
                                                    ],
                                                    "x-kubernetes-list-type": "map"
                                                  },
                                                  "readinessProbe": {
                                                    "type": "object",
                                                    "properties": {
                                                      "exec": {
                                                        "type": "object",
                                                        "properties": {
                                                          "command": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "failureThreshold": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      },
                                                      "grpc": {
                                                        "type": "object",
                                                        "required": [
                                                          "port"
                                                        ],
                                                        "properties": {
                                                          "port": {
                                                            "type": "integer",
                                                            "format": "int32"
                                                          },
                                                          "service": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "httpGet": {
                                                        "type": "object",
                                                        "required": [
                                                          "port"
                                                        ],
                                                        "properties": {
                                                          "host": {
                                                            "type": "string"
                                                          },
                                                          "httpHeaders": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "object",
                                                              "required": [
                                                                "name",
                                                                "value"
                                                              ],
                                                              "properties": {
                                                                "name": {
                                                                  "type": "string"
                                                                },
                                                                "value": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "path": {
                                                            "type": "string"
                                                          },
                                                          "port": {
                                                            "anyOf": [
                                                              {
                                                                "type": "integer"
                                                              },
                                                              {
                                                                "type": "string"
                                                              }
                                                            ],
                                                            "x-kubernetes-int-or-string": true
                                                          },
                                                          "scheme": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "initialDelaySeconds": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      },
                                                      "periodSeconds": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      },
                                                      "successThreshold": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      },
                                                      "tcpSocket": {
                                                        "type": "object",
                                                        "required": [
                                                          "port"
                                                        ],
                                                        "properties": {
                                                          "host": {
                                                            "type": "string"
                                                          },
                                                          "port": {
                                                            "anyOf": [
                                                              {
                                                                "type": "integer"
                                                              },
                                                              {
                                                                "type": "string"
                                                              }
                                                            ],
                                                            "x-kubernetes-int-or-string": true
                                                          }
                                                        }
                                                      },
                                                      "terminationGracePeriodSeconds": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                      },
                                                      "timeoutSeconds": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      }
                                                    }
                                                  },
                                                  "resizePolicy": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "required": [
                                                        "resourceName",
                                                        "restartPolicy"
                                                      ],
                                                      "properties": {
                                                        "resourceName": {
                                                          "type": "string"
                                                        },
                                                        "restartPolicy": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    },
                                                    "x-kubernetes-list-type": "atomic"
                                                  },
                                                  "resources": {
                                                    "type": "object",
                                                    "properties": {
                                                      "claims": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "required": [
                                                            "name"
                                                          ],
                                                          "properties": {
                                                            "name": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        },
                                                        "x-kubernetes-list-map-keys": [
                                                          "name"
                                                        ],
                                                        "x-kubernetes-list-type": "map"
                                                      },
                                                      "limits": {
                                                        "type": "object",
                                                        "additionalProperties": {
                                                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                          "anyOf": [
                                                            {
                                                              "type": "integer"
                                                            },
                                                            {
                                                              "type": "string"
                                                            }
                                                          ],
                                                          "x-kubernetes-int-or-string": true
                                                        }
                                                      },
                                                      "requests": {
                                                        "type": "object",
                                                        "additionalProperties": {
                                                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                          "anyOf": [
                                                            {
                                                              "type": "integer"
                                                            },
                                                            {
                                                              "type": "string"
                                                            }
                                                          ],
                                                          "x-kubernetes-int-or-string": true
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "restartPolicy": {
                                                    "type": "string"
                                                  },
                                                  "securityContext": {
                                                    "type": "object",
                                                    "properties": {
                                                      "allowPrivilegeEscalation": {
                                                        "type": "boolean"
                                                      },
                                                      "capabilities": {
                                                        "type": "object",
                                                        "properties": {
                                                          "add": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "drop": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "privileged": {
                                                        "type": "boolean"
                                                      },
                                                      "procMount": {
                                                        "type": "string"
                                                      },
                                                      "readOnlyRootFilesystem": {
                                                        "type": "boolean"
                                                      },
                                                      "runAsGroup": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                      },
                                                      "runAsNonRoot": {
                                                        "type": "boolean"
                                                      },
                                                      "runAsUser": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                      },
                                                      "seLinuxOptions": {
                                                        "type": "object",
                                                        "properties": {
                                                          "level": {
                                                            "type": "string"
                                                          },
                                                          "role": {
                                                            "type": "string"
                                                          },
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "user": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "seccompProfile": {
                                                        "type": "object",
                                                        "required": [
                                                          "type"
                                                        ],
                                                        "properties": {
                                                          "localhostProfile": {
                                                            "type": "string"
                                                          },
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "windowsOptions": {
                                                        "type": "object",
                                                        "properties": {
                                                          "gmsaCredentialSpec": {
                                                            "type": "string"
                                                          },
                                                          "gmsaCredentialSpecName": {
                                                            "type": "string"
                                                          },
                                                          "hostProcess": {
                                                            "type": "boolean"
                                                          },
                                                          "runAsUserName": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "startupProbe": {
                                                    "type": "object",
                                                    "properties": {
                                                      "exec": {
                                                        "type": "object",
                                                        "properties": {
                                                          "command": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "failureThreshold": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      },
                                                      "grpc": {
                                                        "type": "object",
                                                        "required": [
                                                          "port"
                                                        ],
                                                        "properties": {
                                                          "port": {
                                                            "type": "integer",
                                                            "format": "int32"
                                                          },
                                                          "service": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "httpGet": {
                                                        "type": "object",
                                                        "required": [
                                                          "port"
                                                        ],
                                                        "properties": {
                                                          "host": {
                                                            "type": "string"
                                                          },
                                                          "httpHeaders": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "object",
                                                              "required": [
                                                                "name",
                                                                "value"
                                                              ],
                                                              "properties": {
                                                                "name": {
                                                                  "type": "string"
                                                                },
                                                                "value": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "path": {
                                                            "type": "string"
                                                          },
                                                          "port": {
                                                            "anyOf": [
                                                              {
                                                                "type": "integer"
                                                              },
                                                              {
                                                                "type": "string"
                                                              }
                                                            ],
                                                            "x-kubernetes-int-or-string": true
                                                          },
                                                          "scheme": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "initialDelaySeconds": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      },
                                                      "periodSeconds": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      },
                                                      "successThreshold": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      },
                                                      "tcpSocket": {
                                                        "type": "object",
                                                        "required": [
                                                          "port"
                                                        ],
                                                        "properties": {
                                                          "host": {
                                                            "type": "string"
                                                          },
                                                          "port": {
                                                            "anyOf": [
                                                              {
                                                                "type": "integer"
                                                              },
                                                              {
                                                                "type": "string"
                                                              }
                                                            ],
                                                            "x-kubernetes-int-or-string": true
                                                          }
                                                        }
                                                      },
                                                      "terminationGracePeriodSeconds": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                      },
                                                      "timeoutSeconds": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      }
                                                    }
                                                  },
                                                  "stdin": {
                                                    "type": "boolean"
                                                  },
                                                  "stdinOnce": {
                                                    "type": "boolean"
                                                  },
                                                  "terminationMessagePath": {
                                                    "type": "string"
                                                  },
                                                  "terminationMessagePolicy": {
                                                    "type": "string"
                                                  },
                                                  "tty": {
                                                    "type": "boolean"
                                                  },
                                                  "volumeDevices": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "required": [
                                                        "devicePath",
                                                        "name"
                                                      ],
                                                      "properties": {
                                                        "devicePath": {
                                                          "type": "string"
                                                        },
                                                        "name": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "volumeMounts": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "required": [
                                                        "mountPath",
                                                        "name"
                                                      ],
                                                      "properties": {
                                                        "mountPath": {
                                                          "type": "string"
                                                        },
                                                        "mountPropagation": {
                                                          "type": "string"
                                                        },
                                                        "name": {
                                                          "type": "string"
                                                        },
                                                        "readOnly": {
                                                          "type": "boolean"
                                                        },
                                                        "subPath": {
                                                          "type": "string"
                                                        },
                                                        "subPathExpr": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "workingDir": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            },
                                            "nodeName": {
                                              "type": "string"
                                            },
                                            "nodeSelector": {
                                              "type": "object",
                                              "additionalProperties": {
                                                "type": "string"
                                              },
                                              "x-kubernetes-map-type": "atomic"
                                            },
                                            "os": {
                                              "type": "object",
                                              "required": [
                                                "name"
                                              ],
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "overhead": {
                                              "type": "object",
                                              "additionalProperties": {
                                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                "anyOf": [
                                                  {
                                                    "type": "integer"
                                                  },
                                                  {
                                                    "type": "string"
                                                  }
                                                ],
                                                "x-kubernetes-int-or-string": true
                                              }
                                            },
                                            "preemptionPolicy": {
                                              "type": "string"
                                            },
                                            "priority": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "priorityClassName": {
                                              "type": "string"
                                            },
                                            "readinessGates": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "conditionType"
                                                ],
                                                "properties": {
                                                  "conditionType": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            },
                                            "resourceClaims": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "name"
                                                ],
                                                "properties": {
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "source": {
                                                    "type": "object",
                                                    "properties": {
                                                      "resourceClaimName": {
                                                        "type": "string"
                                                      },
                                                      "resourceClaimTemplateName": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "x-kubernetes-list-map-keys": [
                                                "name"
                                              ],
                                              "x-kubernetes-list-type": "map"
                                            },
                                            "restartPolicy": {
                                              "type": "string"
                                            },
                                            "runtimeClassName": {
                                              "type": "string"
                                            },
                                            "schedulerName": {
                                              "type": "string"
                                            },
                                            "schedulingGates": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "name"
                                                ],
                                                "properties": {
                                                  "name": {
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "x-kubernetes-list-map-keys": [
                                                "name"
                                              ],
                                              "x-kubernetes-list-type": "map"
                                            },
                                            "securityContext": {
                                              "type": "object",
                                              "properties": {
                                                "fsGroup": {
                                                  "type": "integer",
                                                  "format": "int64"
                                                },
                                                "fsGroupChangePolicy": {
                                                  "type": "string"
                                                },
                                                "runAsGroup": {
                                                  "type": "integer",
                                                  "format": "int64"
                                                },
                                                "runAsNonRoot": {
                                                  "type": "boolean"
                                                },
                                                "runAsUser": {
                                                  "type": "integer",
                                                  "format": "int64"
                                                },
                                                "seLinuxOptions": {
                                                  "type": "object",
                                                  "properties": {
                                                    "level": {
                                                      "type": "string"
                                                    },
                                                    "role": {
                                                      "type": "string"
                                                    },
                                                    "type": {
                                                      "type": "string"
                                                    },
                                                    "user": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "seccompProfile": {
                                                  "type": "object",
                                                  "required": [
                                                    "type"
                                                  ],
                                                  "properties": {
                                                    "localhostProfile": {
                                                      "type": "string"
                                                    },
                                                    "type": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "supplementalGroups": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                  }
                                                },
                                                "sysctls": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "required": [
                                                      "name",
                                                      "value"
                                                    ],
                                                    "properties": {
                                                      "name": {
                                                        "type": "string"
                                                      },
                                                      "value": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "windowsOptions": {
                                                  "type": "object",
                                                  "properties": {
                                                    "gmsaCredentialSpec": {
                                                      "type": "string"
                                                    },
                                                    "gmsaCredentialSpecName": {
                                                      "type": "string"
                                                    },
                                                    "hostProcess": {
                                                      "type": "boolean"
                                                    },
                                                    "runAsUserName": {
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "serviceAccount": {
                                              "type": "string"
                                            },
                                            "serviceAccountName": {
                                              "type": "string"
                                            },
                                            "setHostnameAsFQDN": {
                                              "type": "boolean"
                                            },
                                            "shareProcessNamespace": {
                                              "type": "boolean"
                                            },
                                            "subdomain": {
                                              "type": "string"
                                            },
                                            "terminationGracePeriodSeconds": {
                                              "type": "integer",
                                              "format": "int64"
                                            },
                                            "tolerations": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "effect": {
                                                    "type": "string"
                                                  },
                                                  "key": {
                                                    "type": "string"
                                                  },
                                                  "operator": {
                                                    "type": "string"
                                                  },
                                                  "tolerationSeconds": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                  },
                                                  "value": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            },
                                            "topologySpreadConstraints": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "maxSkew",
                                                  "topologyKey",
                                                  "whenUnsatisfiable"
                                                ],
                                                "properties": {
                                                  "labelSelector": {
                                                    "type": "object",
                                                    "properties": {
                                                      "matchExpressions": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "required": [
                                                            "key",
                                                            "operator"
                                                          ],
                                                          "properties": {
                                                            "key": {
                                                              "type": "string"
                                                            },
                                                            "operator": {
                                                              "type": "string"
                                                            },
                                                            "values": {
                                                              "type": "array",
                                                              "items": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "matchLabels": {
                                                        "type": "object",
                                                        "additionalProperties": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    },
                                                    "x-kubernetes-map-type": "atomic"
                                                  },
                                                  "matchLabelKeys": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    },
                                                    "x-kubernetes-list-type": "atomic"
                                                  },
                                                  "maxSkew": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                  },
                                                  "minDomains": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                  },
                                                  "nodeAffinityPolicy": {
                                                    "type": "string"
                                                  },
                                                  "nodeTaintsPolicy": {
                                                    "type": "string"
                                                  },
                                                  "topologyKey": {
                                                    "type": "string"
                                                  },
                                                  "whenUnsatisfiable": {
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "x-kubernetes-list-map-keys": [
                                                "topologyKey",
                                                "whenUnsatisfiable"
                                              ],
                                              "x-kubernetes-list-type": "map"
                                            },
                                            "volumes": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "name"
                                                ],
                                                "properties": {
                                                  "awsElasticBlockStore": {
                                                    "type": "object",
                                                    "required": [
                                                      "volumeID"
                                                    ],
                                                    "properties": {
                                                      "fsType": {
                                                        "type": "string"
                                                      },
                                                      "partition": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      },
                                                      "readOnly": {
                                                        "type": "boolean"
                                                      },
                                                      "volumeID": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "azureDisk": {
                                                    "type": "object",
                                                    "required": [
                                                      "diskName",
                                                      "diskURI"
                                                    ],
                                                    "properties": {
                                                      "cachingMode": {
                                                        "type": "string"
                                                      },
                                                      "diskName": {
                                                        "type": "string"
                                                      },
                                                      "diskURI": {
                                                        "type": "string"
                                                      },
                                                      "fsType": {
                                                        "type": "string"
                                                      },
                                                      "kind": {
                                                        "type": "string"
                                                      },
                                                      "readOnly": {
                                                        "type": "boolean"
                                                      }
                                                    }
                                                  },
                                                  "azureFile": {
                                                    "type": "object",
                                                    "required": [
                                                      "secretName",
                                                      "shareName"
                                                    ],
                                                    "properties": {
                                                      "readOnly": {
                                                        "type": "boolean"
                                                      },
                                                      "secretName": {
                                                        "type": "string"
                                                      },
                                                      "shareName": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "cephfs": {
                                                    "type": "object",
                                                    "required": [
                                                      "monitors"
                                                    ],
                                                    "properties": {
                                                      "monitors": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "path": {
                                                        "type": "string"
                                                      },
                                                      "readOnly": {
                                                        "type": "boolean"
                                                      },
                                                      "secretFile": {
                                                        "type": "string"
                                                      },
                                                      "secretRef": {
                                                        "type": "object",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "x-kubernetes-map-type": "atomic"
                                                      },
                                                      "user": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "cinder": {
                                                    "type": "object",
                                                    "required": [
                                                      "volumeID"
                                                    ],
                                                    "properties": {
                                                      "fsType": {
                                                        "type": "string"
                                                      },
                                                      "readOnly": {
                                                        "type": "boolean"
                                                      },
                                                      "secretRef": {
                                                        "type": "object",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "x-kubernetes-map-type": "atomic"
                                                      },
                                                      "volumeID": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "configMap": {
                                                    "type": "object",
                                                    "properties": {
                                                      "defaultMode": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      },
                                                      "items": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "required": [
                                                            "key",
                                                            "path"
                                                          ],
                                                          "properties": {
                                                            "key": {
                                                              "type": "string"
                                                            },
                                                            "mode": {
                                                              "type": "integer",
                                                              "format": "int32"
                                                            },
                                                            "path": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "name": {
                                                        "type": "string"
                                                      },
                                                      "optional": {
                                                        "type": "boolean"
                                                      }
                                                    },
                                                    "x-kubernetes-map-type": "atomic"
                                                  },
                                                  "csi": {
                                                    "type": "object",
                                                    "required": [
                                                      "driver"
                                                    ],
                                                    "properties": {
                                                      "driver": {
                                                        "type": "string"
                                                      },
                                                      "fsType": {
                                                        "type": "string"
                                                      },
                                                      "nodePublishSecretRef": {
                                                        "type": "object",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "x-kubernetes-map-type": "atomic"
                                                      },
                                                      "readOnly": {
                                                        "type": "boolean"
                                                      },
                                                      "volumeAttributes": {
                                                        "type": "object",
                                                        "additionalProperties": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "downwardAPI": {
                                                    "type": "object",
                                                    "properties": {
                                                      "defaultMode": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      },
                                                      "items": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "required": [
                                                            "path"
                                                          ],
                                                          "properties": {
                                                            "fieldRef": {
                                                              "type": "object",
                                                              "required": [
                                                                "fieldPath"
                                                              ],
                                                              "properties": {
                                                                "apiVersion": {
                                                                  "type": "string"
                                                                },
                                                                "fieldPath": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "x-kubernetes-map-type": "atomic"
                                                            },
                                                            "mode": {
                                                              "type": "integer",
                                                              "format": "int32"
                                                            },
                                                            "path": {
                                                              "type": "string"
                                                            },
                                                            "resourceFieldRef": {
                                                              "type": "object",
                                                              "required": [
                                                                "resource"
                                                              ],
                                                              "properties": {
                                                                "containerName": {
                                                                  "type": "string"
                                                                },
                                                                "divisor": {
                                                                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                                  "anyOf": [
                                                                    {
                                                                      "type": "integer"
                                                                    },
                                                                    {
                                                                      "type": "string"
                                                                    }
                                                                  ],
                                                                  "x-kubernetes-int-or-string": true
                                                                },
                                                                "resource": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "x-kubernetes-map-type": "atomic"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "emptyDir": {
                                                    "type": "object",
                                                    "properties": {
                                                      "medium": {
                                                        "type": "string"
                                                      },
                                                      "sizeLimit": {
                                                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                        "anyOf": [
                                                          {
                                                            "type": "integer"
                                                          },
                                                          {
                                                            "type": "string"
                                                          }
                                                        ],
                                                        "x-kubernetes-int-or-string": true
                                                      }
                                                    }
                                                  },
                                                  "ephemeral": {
                                                    "type": "object",
                                                    "properties": {
                                                      "volumeClaimTemplate": {
                                                        "type": "object",
                                                        "required": [
                                                          "spec"
                                                        ],
                                                        "properties": {
                                                          "metadata": {
                                                            "type": "object"
                                                          },
                                                          "spec": {
                                                            "type": "object",
                                                            "properties": {
                                                              "accessModes": {
                                                                "type": "array",
                                                                "items": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "dataSource": {
                                                                "type": "object",
                                                                "required": [
                                                                  "kind",
                                                                  "name"
                                                                ],
                                                                "properties": {
                                                                  "apiGroup": {
                                                                    "type": "string"
                                                                  },
                                                                  "kind": {
                                                                    "type": "string"
                                                                  },
                                                                  "name": {
                                                                    "type": "string"
                                                                  }
                                                                },
                                                                "x-kubernetes-map-type": "atomic"
                                                              },
                                                              "dataSourceRef": {
                                                                "type": "object",
                                                                "required": [
                                                                  "kind",
                                                                  "name"
                                                                ],
                                                                "properties": {
                                                                  "apiGroup": {
                                                                    "type": "string"
                                                                  },
                                                                  "kind": {
                                                                    "type": "string"
                                                                  },
                                                                  "name": {
                                                                    "type": "string"
                                                                  },
                                                                  "namespace": {
                                                                    "type": "string"
                                                                  }
                                                                }
                                                              },
                                                              "resources": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "limits": {
                                                                    "type": "object",
                                                                    "additionalProperties": {
                                                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                                      "anyOf": [
                                                                        {
                                                                          "type": "integer"
                                                                        },
                                                                        {
                                                                          "type": "string"
                                                                        }
                                                                      ],
                                                                      "x-kubernetes-int-or-string": true
                                                                    }
                                                                  },
                                                                  "requests": {
                                                                    "type": "object",
                                                                    "additionalProperties": {
                                                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                                      "anyOf": [
                                                                        {
                                                                          "type": "integer"
                                                                        },
                                                                        {
                                                                          "type": "string"
                                                                        }
                                                                      ],
                                                                      "x-kubernetes-int-or-string": true
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "selector": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "matchExpressions": {
                                                                    "type": "array",
                                                                    "items": {
                                                                      "type": "object",
                                                                      "required": [
                                                                        "key",
                                                                        "operator"
                                                                      ],
                                                                      "properties": {
                                                                        "key": {
                                                                          "type": "string"
                                                                        },
                                                                        "operator": {
                                                                          "type": "string"
                                                                        },
                                                                        "values": {
                                                                          "type": "array",
                                                                          "items": {
                                                                            "type": "string"
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  "matchLabels": {
                                                                    "type": "object",
                                                                    "additionalProperties": {
                                                                      "type": "string"
                                                                    }
                                                                  }
                                                                },
                                                                "x-kubernetes-map-type": "atomic"
                                                              },
                                                              "storageClassName": {
                                                                "type": "string"
                                                              },
                                                              "volumeAttributesClassName": {
                                                                "type": "string"
                                                              },
                                                              "volumeMode": {
                                                                "type": "string"
                                                              },
                                                              "volumeName": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "fc": {
                                                    "type": "object",
                                                    "properties": {
                                                      "fsType": {
                                                        "type": "string"
                                                      },
                                                      "lun": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      },
                                                      "readOnly": {
                                                        "type": "boolean"
                                                      },
                                                      "targetWWNs": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "wwids": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "flexVolume": {
                                                    "type": "object",
                                                    "required": [
                                                      "driver"
                                                    ],
                                                    "properties": {
                                                      "driver": {
                                                        "type": "string"
                                                      },
                                                      "fsType": {
                                                        "type": "string"
                                                      },
                                                      "options": {
                                                        "type": "object",
                                                        "additionalProperties": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "readOnly": {
                                                        "type": "boolean"
                                                      },
                                                      "secretRef": {
                                                        "type": "object",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "x-kubernetes-map-type": "atomic"
                                                      }
                                                    }
                                                  },
                                                  "flocker": {
                                                    "type": "object",
                                                    "properties": {
                                                      "datasetName": {
                                                        "type": "string"
                                                      },
                                                      "datasetUUID": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "gcePersistentDisk": {
                                                    "type": "object",
                                                    "required": [
                                                      "pdName"
                                                    ],
                                                    "properties": {
                                                      "fsType": {
                                                        "type": "string"
                                                      },
                                                      "partition": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      },
                                                      "pdName": {
                                                        "type": "string"
                                                      },
                                                      "readOnly": {
                                                        "type": "boolean"
                                                      }
                                                    }
                                                  },
                                                  "gitRepo": {
                                                    "type": "object",
                                                    "required": [
                                                      "repository"
                                                    ],
                                                    "properties": {
                                                      "directory": {
                                                        "type": "string"
                                                      },
                                                      "repository": {
                                                        "type": "string"
                                                      },
                                                      "revision": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "glusterfs": {
                                                    "type": "object",
                                                    "required": [
                                                      "endpoints",
                                                      "path"
                                                    ],
                                                    "properties": {
                                                      "endpoints": {
                                                        "type": "string"
                                                      },
                                                      "path": {
                                                        "type": "string"
                                                      },
                                                      "readOnly": {
                                                        "type": "boolean"
                                                      }
                                                    }
                                                  },
                                                  "hostPath": {
                                                    "type": "object",
                                                    "required": [
                                                      "path"
                                                    ],
                                                    "properties": {
                                                      "path": {
                                                        "type": "string"
                                                      },
                                                      "type": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "iscsi": {
                                                    "type": "object",
                                                    "required": [
                                                      "iqn",
                                                      "lun",
                                                      "targetPortal"
                                                    ],
                                                    "properties": {
                                                      "chapAuthDiscovery": {
                                                        "type": "boolean"
                                                      },
                                                      "chapAuthSession": {
                                                        "type": "boolean"
                                                      },
                                                      "fsType": {
                                                        "type": "string"
                                                      },
                                                      "initiatorName": {
                                                        "type": "string"
                                                      },
                                                      "iqn": {
                                                        "type": "string"
                                                      },
                                                      "iscsiInterface": {
                                                        "type": "string"
                                                      },
                                                      "lun": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      },
                                                      "portals": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "readOnly": {
                                                        "type": "boolean"
                                                      },
                                                      "secretRef": {
                                                        "type": "object",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "x-kubernetes-map-type": "atomic"
                                                      },
                                                      "targetPortal": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "nfs": {
                                                    "type": "object",
                                                    "required": [
                                                      "path",
                                                      "server"
                                                    ],
                                                    "properties": {
                                                      "path": {
                                                        "type": "string"
                                                      },
                                                      "readOnly": {
                                                        "type": "boolean"
                                                      },
                                                      "server": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "persistentVolumeClaim": {
                                                    "type": "object",
                                                    "required": [
                                                      "claimName"
                                                    ],
                                                    "properties": {
                                                      "claimName": {
                                                        "type": "string"
                                                      },
                                                      "readOnly": {
                                                        "type": "boolean"
                                                      }
                                                    }
                                                  },
                                                  "photonPersistentDisk": {
                                                    "type": "object",
                                                    "required": [
                                                      "pdID"
                                                    ],
                                                    "properties": {
                                                      "fsType": {
                                                        "type": "string"
                                                      },
                                                      "pdID": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "portworxVolume": {
                                                    "type": "object",
                                                    "required": [
                                                      "volumeID"
                                                    ],
                                                    "properties": {
                                                      "fsType": {
                                                        "type": "string"
                                                      },
                                                      "readOnly": {
                                                        "type": "boolean"
                                                      },
                                                      "volumeID": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "projected": {
                                                    "type": "object",
                                                    "properties": {
                                                      "defaultMode": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      },
                                                      "sources": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "clusterTrustBundle": {
                                                              "type": "object",
                                                              "required": [
                                                                "path"
                                                              ],
                                                              "properties": {
                                                                "labelSelector": {
                                                                  "type": "object",
                                                                  "properties": {
                                                                    "matchExpressions": {
                                                                      "type": "array",
                                                                      "items": {
                                                                        "type": "object",
                                                                        "required": [
                                                                          "key",
                                                                          "operator"
                                                                        ],
                                                                        "properties": {
                                                                          "key": {
                                                                            "type": "string"
                                                                          },
                                                                          "operator": {
                                                                            "type": "string"
                                                                          },
                                                                          "values": {
                                                                            "type": "array",
                                                                            "items": {
                                                                              "type": "string"
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    },
                                                                    "matchLabels": {
                                                                      "type": "object",
                                                                      "additionalProperties": {
                                                                        "type": "string"
                                                                      }
                                                                    }
                                                                  },
                                                                  "x-kubernetes-map-type": "atomic"
                                                                },
                                                                "name": {
                                                                  "type": "string"
                                                                },
                                                                "optional": {
                                                                  "type": "boolean"
                                                                },
                                                                "path": {
                                                                  "type": "string"
                                                                },
                                                                "signerName": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            },
                                                            "configMap": {
                                                              "type": "object",
                                                              "properties": {
                                                                "items": {
                                                                  "type": "array",
                                                                  "items": {
                                                                    "type": "object",
                                                                    "required": [
                                                                      "key",
                                                                      "path"
                                                                    ],
                                                                    "properties": {
                                                                      "key": {
                                                                        "type": "string"
                                                                      },
                                                                      "mode": {
                                                                        "type": "integer",
                                                                        "format": "int32"
                                                                      },
                                                                      "path": {
                                                                        "type": "string"
                                                                      }
                                                                    }
                                                                  }
                                                                },
                                                                "name": {
                                                                  "type": "string"
                                                                },
                                                                "optional": {
                                                                  "type": "boolean"
                                                                }
                                                              },
                                                              "x-kubernetes-map-type": "atomic"
                                                            },
                                                            "downwardAPI": {
                                                              "type": "object",
                                                              "properties": {
                                                                "items": {
                                                                  "type": "array",
                                                                  "items": {
                                                                    "type": "object",
                                                                    "required": [
                                                                      "path"
                                                                    ],
                                                                    "properties": {
                                                                      "fieldRef": {
                                                                        "type": "object",
                                                                        "required": [
                                                                          "fieldPath"
                                                                        ],
                                                                        "properties": {
                                                                          "apiVersion": {
                                                                            "type": "string"
                                                                          },
                                                                          "fieldPath": {
                                                                            "type": "string"
                                                                          }
                                                                        },
                                                                        "x-kubernetes-map-type": "atomic"
                                                                      },
                                                                      "mode": {
                                                                        "type": "integer",
                                                                        "format": "int32"
                                                                      },
                                                                      "path": {
                                                                        "type": "string"
                                                                      },
                                                                      "resourceFieldRef": {
                                                                        "type": "object",
                                                                        "required": [
                                                                          "resource"
                                                                        ],
                                                                        "properties": {
                                                                          "containerName": {
                                                                            "type": "string"
                                                                          },
                                                                          "divisor": {
                                                                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                                            "anyOf": [
                                                                              {
                                                                                "type": "integer"
                                                                              },
                                                                              {
                                                                                "type": "string"
                                                                              }
                                                                            ],
                                                                            "x-kubernetes-int-or-string": true
                                                                          },
                                                                          "resource": {
                                                                            "type": "string"
                                                                          }
                                                                        },
                                                                        "x-kubernetes-map-type": "atomic"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            },
                                                            "secret": {
                                                              "type": "object",
                                                              "properties": {
                                                                "items": {
                                                                  "type": "array",
                                                                  "items": {
                                                                    "type": "object",
                                                                    "required": [
                                                                      "key",
                                                                      "path"
                                                                    ],
                                                                    "properties": {
                                                                      "key": {
                                                                        "type": "string"
                                                                      },
                                                                      "mode": {
                                                                        "type": "integer",
                                                                        "format": "int32"
                                                                      },
                                                                      "path": {
                                                                        "type": "string"
                                                                      }
                                                                    }
                                                                  }
                                                                },
                                                                "name": {
                                                                  "type": "string"
                                                                },
                                                                "optional": {
                                                                  "type": "boolean"
                                                                }
                                                              },
                                                              "x-kubernetes-map-type": "atomic"
                                                            },
                                                            "serviceAccountToken": {
                                                              "type": "object",
                                                              "required": [
                                                                "path"
                                                              ],
                                                              "properties": {
                                                                "audience": {
                                                                  "type": "string"
                                                                },
                                                                "expirationSeconds": {
                                                                  "type": "integer",
                                                                  "format": "int64"
                                                                },
                                                                "path": {
                                                                  "type": "string"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "quobyte": {
                                                    "type": "object",
                                                    "required": [
                                                      "registry",
                                                      "volume"
                                                    ],
                                                    "properties": {
                                                      "group": {
                                                        "type": "string"
                                                      },
                                                      "readOnly": {
                                                        "type": "boolean"
                                                      },
                                                      "registry": {
                                                        "type": "string"
                                                      },
                                                      "tenant": {
                                                        "type": "string"
                                                      },
                                                      "user": {
                                                        "type": "string"
                                                      },
                                                      "volume": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "rbd": {
                                                    "type": "object",
                                                    "required": [
                                                      "image",
                                                      "monitors"
                                                    ],
                                                    "properties": {
                                                      "fsType": {
                                                        "type": "string"
                                                      },
                                                      "image": {
                                                        "type": "string"
                                                      },
                                                      "keyring": {
                                                        "type": "string"
                                                      },
                                                      "monitors": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "pool": {
                                                        "type": "string"
                                                      },
                                                      "readOnly": {
                                                        "type": "boolean"
                                                      },
                                                      "secretRef": {
                                                        "type": "object",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "x-kubernetes-map-type": "atomic"
                                                      },
                                                      "user": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "scaleIO": {
                                                    "type": "object",
                                                    "required": [
                                                      "gateway",
                                                      "secretRef",
                                                      "system"
                                                    ],
                                                    "properties": {
                                                      "fsType": {
                                                        "type": "string"
                                                      },
                                                      "gateway": {
                                                        "type": "string"
                                                      },
                                                      "protectionDomain": {
                                                        "type": "string"
                                                      },
                                                      "readOnly": {
                                                        "type": "boolean"
                                                      },
                                                      "secretRef": {
                                                        "type": "object",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "x-kubernetes-map-type": "atomic"
                                                      },
                                                      "sslEnabled": {
                                                        "type": "boolean"
                                                      },
                                                      "storageMode": {
                                                        "type": "string"
                                                      },
                                                      "storagePool": {
                                                        "type": "string"
                                                      },
                                                      "system": {
                                                        "type": "string"
                                                      },
                                                      "volumeName": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "secret": {
                                                    "type": "object",
                                                    "properties": {
                                                      "defaultMode": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                      },
                                                      "items": {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "object",
                                                          "required": [
                                                            "key",
                                                            "path"
                                                          ],
                                                          "properties": {
                                                            "key": {
                                                              "type": "string"
                                                            },
                                                            "mode": {
                                                              "type": "integer",
                                                              "format": "int32"
                                                            },
                                                            "path": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "optional": {
                                                        "type": "boolean"
                                                      },
                                                      "secretName": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "storageos": {
                                                    "type": "object",
                                                    "properties": {
                                                      "fsType": {
                                                        "type": "string"
                                                      },
                                                      "readOnly": {
                                                        "type": "boolean"
                                                      },
                                                      "secretRef": {
                                                        "type": "object",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "x-kubernetes-map-type": "atomic"
                                                      },
                                                      "volumeName": {
                                                        "type": "string"
                                                      },
                                                      "volumeNamespace": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  },
                                                  "vsphereVolume": {
                                                    "type": "object",
                                                    "required": [
                                                      "volumePath"
                                                    ],
                                                    "properties": {
                                                      "fsType": {
                                                        "type": "string"
                                                      },
                                                      "storagePolicyID": {
                                                        "type": "string"
                                                      },
                                                      "storagePolicyName": {
                                                        "type": "string"
                                                      },
                                                      "volumePath": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "updateStrategy": {
                                      "type": "object",
                                      "properties": {
                                        "rollingUpdate": {
                                          "type": "object",
                                          "properties": {
                                            "maxUnavailable": {
                                              "anyOf": [
                                                {
                                                  "type": "integer"
                                                },
                                                {
                                                  "type": "string"
                                                }
                                              ],
                                              "x-kubernetes-int-or-string": true
                                            },
                                            "partition": {
                                              "type": "integer",
                                              "format": "int32"
                                            }
                                          }
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "volumeClaimTemplates": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "apiVersion": {
                                            "type": "string"
                                          },
                                          "kind": {
                                            "type": "string"
                                          },
                                          "metadata": {
                                            "type": "object",
                                            "properties": {
                                              "annotations": {
                                                "type": "object",
                                                "additionalProperties": {
                                                  "type": "string"
                                                }
                                              },
                                              "labels": {
                                                "type": "object",
                                                "additionalProperties": {
                                                  "type": "string"
                                                }
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "namespace": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "spec": {
                                            "type": "object",
                                            "properties": {
                                              "accessModes": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "dataSource": {
                                                "type": "object",
                                                "required": [
                                                  "kind",
                                                  "name"
                                                ],
                                                "properties": {
                                                  "apiGroup": {
                                                    "type": "string"
                                                  },
                                                  "kind": {
                                                    "type": "string"
                                                  },
                                                  "name": {
                                                    "type": "string"
                                                  }
                                                },
                                                "x-kubernetes-map-type": "atomic"
                                              },
                                              "dataSourceRef": {
                                                "type": "object",
                                                "required": [
                                                  "kind",
                                                  "name"
                                                ],
                                                "properties": {
                                                  "apiGroup": {
                                                    "type": "string"
                                                  },
                                                  "kind": {
                                                    "type": "string"
                                                  },
                                                  "name": {
                                                    "type": "string"
                                                  },
                                                  "namespace": {
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "resources": {
                                                "type": "object",
                                                "properties": {
                                                  "limits": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                      "anyOf": [
                                                        {
                                                          "type": "integer"
                                                        },
                                                        {
                                                          "type": "string"
                                                        }
                                                      ],
                                                      "x-kubernetes-int-or-string": true
                                                    }
                                                  },
                                                  "requests": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                      "anyOf": [
                                                        {
                                                          "type": "integer"
                                                        },
                                                        {
                                                          "type": "string"
                                                        }
                                                      ],
                                                      "x-kubernetes-int-or-string": true
                                                    }
                                                  }
                                                }
                                              },
                                              "selector": {
                                                "type": "object",
                                                "properties": {
                                                  "matchExpressions": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "required": [
                                                        "key",
                                                        "operator"
                                                      ],
                                                      "properties": {
                                                        "key": {
                                                          "type": "string"
                                                        },
                                                        "operator": {
                                                          "type": "string"
                                                        },
                                                        "values": {
                                                          "type": "array",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "matchLabels": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "x-kubernetes-map-type": "atomic"
                                              },
                                              "storageClassName": {
                                                "type": "string"
                                              },
                                              "volumeAttributesClassName": {
                                                "type": "string"
                                              },
                                              "volumeMode": {
                                                "type": "string"
                                              },
                                              "volumeName": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "persistence": {
                          "description": "The desired persistent storage configuration for each Pod in the cluster.",
                          "type": "object",
                          "default": {
                            "storage": "10Gi"
                          },
                          "properties": {
                            "storage": {
                              "description": "The requested size of the persistent volume attached to each Pod in the RabbitmqCluster. The format of this field matches that defined by kubernetes/apimachinery. See https://pkg.go.dev/k8s.io/apimachinery/pkg/api/resource#Quantity for more info on the format of this field.",
                              "default": "10Gi",
                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                              "anyOf": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "x-kubernetes-int-or-string": true
                            },
                            "storageClassName": {
                              "description": "The name of the StorageClass to claim a PersistentVolume from.",
                              "type": "string"
                            }
                          }
                        },
                        "rabbitmq": {
                          "description": "Configuration options for RabbitMQ Pods created in the cluster.",
                          "type": "object",
                          "properties": {
                            "additionalConfig": {
                              "description": "Modify to add to the rabbitmq.conf file in addition to default configurations set by the operator. Modifying this property on an existing RabbitmqCluster will trigger a StatefulSet rolling restart and will cause rabbitmq downtime. For more information on this config, see https://www.rabbitmq.com/configure.html#config-file",
                              "type": "string",
                              "maxLength": 2000
                            },
                            "additionalPlugins": {
                              "description": "List of plugins to enable in addition to essential plugins: rabbitmq_management, rabbitmq_prometheus, and rabbitmq_peer_discovery_k8s.",
                              "type": "array",
                              "maxItems": 100,
                              "items": {
                                "description": "A Plugin to enable on the RabbitmqCluster.",
                                "type": "string",
                                "maxLength": 100,
                                "pattern": "^\\w+$"
                              }
                            },
                            "advancedConfig": {
                              "description": "Specify any rabbitmq advanced.config configurations to apply to the cluster. For more information on advanced config, see https://www.rabbitmq.com/configure.html#advanced-config-file",
                              "type": "string",
                              "maxLength": 100000
                            },
                            "envConfig": {
                              "description": "Modify to add to the rabbitmq-env.conf file. Modifying this property on an existing RabbitmqCluster will trigger a StatefulSet rolling restart and will cause rabbitmq downtime. For more information on env config, see https://www.rabbitmq.com/man/rabbitmq-env.conf.5.html",
                              "type": "string",
                              "maxLength": 100000
                            },
                            "erlangInetConfig": {
                              "description": "Erlang Inet configuration to apply to the Erlang VM running rabbit. See also: https://www.erlang.org/doc/apps/erts/inet_cfg.html",
                              "type": "string",
                              "maxLength": 2000
                            }
                          }
                        },
                        "replicas": {
                          "description": "Replicas is the number of nodes in the RabbitMQ cluster. Each node is deployed as a Replica in a StatefulSet. Only 1, 3, 5 replicas clusters are tested. This value should be an odd number to ensure the resultant cluster can establish exactly one quorum of nodes in the event of a fragmenting network partition.",
                          "type": "integer",
                          "format": "int32",
                          "default": 1,
                          "minimum": 0
                        },
                        "resources": {
                          "description": "The desired compute resource requirements of Pods in the cluster.",
                          "type": "object",
                          "default": {
                            "limits": {
                              "cpu": "2000m",
                              "memory": "2Gi"
                            },
                            "requests": {
                              "cpu": "1000m",
                              "memory": "2Gi"
                            }
                          },
                          "properties": {
                            "claims": {
                              "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable. It can only be set for containers.",
                              "type": "array",
                              "items": {
                                "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                                "type": "object",
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-kubernetes-list-map-keys": [
                                "name"
                              ],
                              "x-kubernetes-list-type": "map"
                            },
                            "limits": {
                              "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                              "type": "object",
                              "additionalProperties": {
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "anyOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "x-kubernetes-int-or-string": true
                              }
                            },
                            "requests": {
                              "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                              "type": "object",
                              "additionalProperties": {
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "anyOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "x-kubernetes-int-or-string": true
                              }
                            }
                          }
                        },
                        "secretBackend": {
                          "description": "Secret backend configuration for the RabbitmqCluster. Enables to fetch default user credentials and certificates from K8s external secret stores.",
                          "type": "object",
                          "properties": {
                            "externalSecret": {
                              "description": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                  "type": "string"
                                }
                              },
                              "x-kubernetes-map-type": "atomic"
                            },
                            "vault": {
                              "description": "VaultSpec will add Vault annotations (see https://www.vaultproject.io/docs/platform/k8s/injector/annotations) to RabbitMQ Pods. It requires a Vault Agent Sidecar Injector (https://www.vaultproject.io/docs/platform/k8s/injector) to be installed in the K8s cluster. The injector is a K8s Mutation Webhook Controller that alters RabbitMQ Pod specifications (based on the added Vault annotations) to include Vault Agent containers that render Vault secrets to the volume.",
                              "type": "object",
                              "properties": {
                                "annotations": {
                                  "description": "Vault annotations that override the Vault annotations set by the cluster-operator. For a list of valid Vault annotations, see https://www.vaultproject.io/docs/platform/k8s/injector/annotations",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "defaultUserPath": {
                                  "description": "Path in Vault to access a KV (Key-Value) secret with the fields username and password for the default user. For example \"secret/data/rabbitmq/config\".",
                                  "type": "string"
                                },
                                "defaultUserUpdaterImage": {
                                  "description": "Sidecar container that updates the default user's password in RabbitMQ when it changes in Vault. Additionally, it updates /var/lib/rabbitmq/.rabbitmqadmin.conf (used by rabbitmqadmin CLI). Set to empty string to disable the sidecar container.",
                                  "type": "string"
                                },
                                "role": {
                                  "description": "Role in Vault. If vault.defaultUserPath is set, this role must have capability to read the pre-created default user credential in Vault. If vault.tls is set, this role must have capability to create and update certificates in the Vault PKI engine for the domains \"<namespace>\" and \"<namespace>.svc\".",
                                  "type": "string"
                                },
                                "tls": {
                                  "type": "object",
                                  "properties": {
                                    "altNames": {
                                      "description": "Specifies the requested Subject Alternative Names (SANs), in a comma-delimited list. These will be appended to the SANs added by the cluster-operator. The cluster-operator will add SANs: \"<RabbitmqCluster name>-server-<index>.<RabbitmqCluster name>-nodes.<namespace>\" for each pod, e.g. \"myrabbit-server-0.myrabbit-nodes.default\".",
                                      "type": "string"
                                    },
                                    "commonName": {
                                      "description": "Specifies the requested certificate Common Name (CN). Defaults to <serviceName>.<namespace>.svc if not provided.",
                                      "type": "string"
                                    },
                                    "ipSans": {
                                      "description": "Specifies the requested IP Subject Alternative Names, in a comma-delimited list.",
                                      "type": "string"
                                    },
                                    "pkiIssuerPath": {
                                      "description": "Path in Vault PKI engine. For example \"pki/issue/hashicorp-com\". required",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "service": {
                          "description": "The desired state of the Kubernetes Service to create for the cluster.",
                          "type": "object",
                          "default": {
                            "type": "ClusterIP"
                          },
                          "properties": {
                            "annotations": {
                              "description": "Annotations to add to the Service.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "ipFamilyPolicy": {
                              "description": "IPFamilyPolicy represents the dual-stack-ness requested or required by a Service See also: https://pkg.go.dev/k8s.io/api/core/v1#IPFamilyPolicy",
                              "type": "string",
                              "enum": [
                                "SingleStack",
                                "PreferDualStack",
                                "RequireDualStack"
                              ]
                            },
                            "type": {
                              "description": "Type of Service to create for the cluster. Must be one of: ClusterIP, LoadBalancer, NodePort. For more info see https://pkg.go.dev/k8s.io/api/core/v1#ServiceType",
                              "type": "string",
                              "default": "ClusterIP",
                              "enum": [
                                "ClusterIP",
                                "LoadBalancer",
                                "NodePort"
                              ]
                            }
                          }
                        },
                        "skipPostDeploySteps": {
                          "description": "If unset, or set to false, the cluster will run `rabbitmq-queues rebalance all` whenever the cluster is updated. Set to true to prevent the operator rebalancing queue leaders after a cluster update. Has no effect if the cluster only consists of one node. For more information, see https://www.rabbitmq.com/rabbitmq-queues.8.html#rebalance",
                          "type": "boolean"
                        },
                        "terminationGracePeriodSeconds": {
                          "description": "TerminationGracePeriodSeconds is the timeout that each rabbitmqcluster pod will have to terminate gracefully. It defaults to 604800 seconds ( a week long) to ensure that the container preStop lifecycle hook can finish running. For more information, see: https://github.com/rabbitmq/cluster-operator/blob/main/docs/design/20200520-graceful-pod-termination.md",
                          "type": "integer",
                          "format": "int64",
                          "default": 604800,
                          "minimum": 0
                        },
                        "tls": {
                          "description": "TLS-related configuration for the RabbitMQ cluster.",
                          "type": "object",
                          "properties": {
                            "caSecretName": {
                              "description": "Name of a Secret in the same Namespace as the RabbitmqCluster, containing the Certificate Authority's public certificate for TLS. The Secret must store this as ca.crt. This Secret can be created by running `kubectl create secret generic ca-secret --from-file=ca.crt=path/to/ca.cert` Used for mTLS, and TLS for rabbitmq_web_stomp and rabbitmq_web_mqtt.",
                              "type": "string"
                            },
                            "disableNonTLSListeners": {
                              "description": "When set to true, the RabbitmqCluster disables non-TLS listeners for RabbitMQ, management plugin and for any enabled plugins in the following list: stomp, mqtt, web_stomp, web_mqtt. Only TLS-enabled clients will be able to connect.",
                              "type": "boolean"
                            },
                            "secretName": {
                              "description": "Name of a Secret in the same Namespace as the RabbitmqCluster, containing the server's private key & public certificate for TLS. The Secret must store these as tls.key and tls.crt, respectively. This Secret can be created by running `kubectl create secret tls tls-secret --cert=path/to/tls.cert --key=path/to/tls.key`",
                              "type": "string"
                            }
                          }
                        },
                        "tolerations": {
                          "description": "Tolerations is the list of Toleration resources attached to each Pod in the RabbitmqCluster.",
                          "type": "array",
                          "items": {
                            "description": "The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.",
                            "type": "object",
                            "properties": {
                              "effect": {
                                "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                                "type": "string"
                              },
                              "key": {
                                "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                                "type": "string"
                              },
                              "operator": {
                                "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
                                "type": "string"
                              },
                              "tolerationSeconds": {
                                "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "value": {
                                "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "status": {
                      "description": "Status presents the observed state of RabbitmqCluster",
                      "type": "object",
                      "required": [
                        "conditions"
                      ],
                      "properties": {
                        "binding": {
                          "description": "Binding exposes a secret containing the binding information for this RabbitmqCluster. It implements the service binding Provisioned Service duck type. See: https://github.com/servicebinding/spec#provisioned-service",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                              "type": "string"
                            }
                          },
                          "x-kubernetes-map-type": "atomic"
                        },
                        "conditions": {
                          "description": "Set of Conditions describing the current state of the RabbitmqCluster",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "status",
                              "type"
                            ],
                            "properties": {
                              "lastTransitionTime": {
                                "description": "The last time this Condition type changed.",
                                "type": "string",
                                "format": "date-time"
                              },
                              "message": {
                                "description": "Full text reason for current status of the condition.",
                                "type": "string"
                              },
                              "reason": {
                                "description": "One word, camel-case reason for current status of the condition.",
                                "type": "string"
                              },
                              "status": {
                                "description": "True, False, or Unknown",
                                "type": "string"
                              },
                              "type": {
                                "description": "Type indicates the scope of RabbitmqCluster status addressed by the condition.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "defaultUser": {
                          "description": "Identifying information on internal resources",
                          "type": "object",
                          "properties": {
                            "secretReference": {
                              "description": "Reference to the Kubernetes Secret containing the credentials of the default user.",
                              "type": "object",
                              "required": [
                                "keys",
                                "name",
                                "namespace"
                              ],
                              "properties": {
                                "keys": {
                                  "description": "Key-value pairs in the Secret corresponding to `username`, `password`, `host`, and `port`",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "name": {
                                  "description": "Name of the Secret containing the default user credentials",
                                  "type": "string"
                                },
                                "namespace": {
                                  "description": "Namespace of the Secret containing the default user credentials",
                                  "type": "string"
                                }
                              }
                            },
                            "serviceReference": {
                              "description": "Reference to the Kubernetes Service serving the cluster.",
                              "type": "object",
                              "required": [
                                "name",
                                "namespace"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Name of the Service serving the cluster",
                                  "type": "string"
                                },
                                "namespace": {
                                  "description": "Namespace of the Service serving the cluster",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "observedGeneration": {
                          "description": "observedGeneration is the most recent successful generation observed for this RabbitmqCluster. It corresponds to the RabbitmqCluster's generation, which is updated on mutation by the API Server.",
                          "type": "integer",
                          "format": "int64"
                        }
                      }
                    }
                  }
                }
              },
              "subresources": {
                "status": {}
              },
              "additionalPrinterColumns": [
                {
                  "name": "AllReplicasReady",
                  "type": "string",
                  "jsonPath": ".status.conditions[?(@.type == 'AllReplicasReady')].status"
                },
                {
                  "name": "ReconcileSuccess",
                  "type": "string",
                  "jsonPath": ".status.conditions[?(@.type == 'ReconcileSuccess')].status"
                },
                {
                  "name": "Age",
                  "type": "date",
                  "jsonPath": ".metadata.creationTimestamp"
                }
              ]
            }
          ],
          "conversion": {
            "strategy": "None"
          }
        },
        "status": {
          "conditions": [
            {
              "type": "NamesAccepted",
              "status": "True",
              "lastTransitionTime": "2024-01-18T17:34:17Z",
              "reason": "NoConflicts",
              "message": "no conflicts found"
            },
            {
              "type": "Established",
              "status": "True",
              "lastTransitionTime": "2024-01-18T17:34:18Z",
              "reason": "InitialNamesAccepted",
              "message": "the initial names have been accepted"
            }
          ],
          "acceptedNames": {
            "plural": "rabbitmqclusters",
            "singular": "rabbitmqcluster",
            "shortNames": [
              "rmq"
            ],
            "kind": "RabbitmqCluster",
            "listKind": "RabbitmqClusterList",
            "categories": [
              "all",
              "rabbitmq"
            ]
          },
          "storedVersions": [
            "v1beta1"
          ]
        }
      },
      "additionalColumns": [
        {
          "name": "AllReplicasReady",
          "type": "string",
          "jsonPath": ".status.conditions[?(@.type == 'AllReplicasReady')].status"
        },
        {
          "name": "ReconcileSuccess",
          "type": "string",
          "jsonPath": ".status.conditions[?(@.type == 'ReconcileSuccess')].status"
        },
        {
          "name": "Age",
          "type": "date",
          "jsonPath": ".metadata.creationTimestamp"
        }
      ],
      "short": "RabbitmqCluster",
      "apiGroup": "rabbitmq.com",
      "apiKind": "RabbitmqCluster",
      "apiVersion": "v1beta1",
      "readProperties": {
        "spec": "spec",
        "status": "status"
      },
      "writeProperties": {
        "spec": "spec"
      },
      "group": "rabbitmq",
      "sub": "rabbitmq",
      "listExcludes": [],
      "readExcludes": [],
      "simpleExcludes": [],
      "gqlDefs": {
        "metadata": "metadata!",
        "spec": "JSONObject",
        "status": "JSONObject"
      },
      "namespaced": true
    }
  ]
}