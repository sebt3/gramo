{
  "name": "secretgenerator",
  "objects": [
    {
      "alternatives": [],
      "name": "de.mittwald.secretgenerator.v1alpha1.BasicAuth",
      "definition": {
        "properties": {
          "metadata": {
            "type": "object"
          },
          "spec": {
            "type": "object",
            "description": "BasicAuthSpec defines the desired state of BasicAuth",
            "required": [
              "username"
            ],
            "properties": {
              "data": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "encoding": {
                "type": "string"
              },
              "forceRegenerate": {
                "type": "boolean"
              },
              "length": {
                "type": "string"
              },
              "username": {
                "type": "string"
              }
            }
          },
          "status": {
            "type": "object",
            "description": "BasicAuthStatus defines the observed state of BasicAuth",
            "properties": {
              "secret": {
                "description": "ObjectReference contains enough information to let you inspect or modify the referred object.",
                "type": "object",
                "properties": {
                  "apiVersion": {
                    "description": "API version of the referent.",
                    "type": "string"
                  },
                  "fieldPath": {
                    "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.",
                    "type": "string"
                  },
                  "kind": {
                    "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": "string"
                  },
                  "namespace": {
                    "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                    "type": "string"
                  },
                  "resourceVersion": {
                    "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                    "type": "string"
                  },
                  "uid": {
                    "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                    "type": "string"
                  }
                }
              }
            }
          },
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          }
        },
        "description": "BasicAuth is the Schema for the basicauths API",
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "secretgenerator.mittwald.de",
            "kind": "BasicAuth",
            "version": "v1alpha1"
          }
        ]
      },
      "crd": {
        "metadata": {
          "name": "basicauths.secretgenerator.mittwald.de"
        },
        "spec": {
          "group": "secretgenerator.mittwald.de",
          "names": {
            "plural": "basicauths",
            "singular": "basicauth",
            "kind": "BasicAuth",
            "listKind": "BasicAuthList"
          },
          "scope": "Namespaced",
          "versions": [
            {
              "name": "v1alpha1",
              "served": true,
              "storage": true,
              "schema": {
                "openAPIV3Schema": {
                  "description": "BasicAuth is the Schema for the basicauths API",
                  "type": "object",
                  "properties": {
                    "apiVersion": {
                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                      "type": "string"
                    },
                    "metadata": {
                      "type": "object"
                    },
                    "spec": {
                      "description": "BasicAuthSpec defines the desired state of BasicAuth",
                      "type": "object",
                      "required": [
                        "username"
                      ],
                      "properties": {
                        "data": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "encoding": {
                          "type": "string"
                        },
                        "forceRegenerate": {
                          "type": "boolean"
                        },
                        "length": {
                          "type": "string"
                        },
                        "username": {
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "description": "BasicAuthStatus defines the observed state of BasicAuth",
                      "type": "object",
                      "properties": {
                        "secret": {
                          "description": "ObjectReference contains enough information to let you inspect or modify the referred object.",
                          "type": "object",
                          "properties": {
                            "apiVersion": {
                              "description": "API version of the referent.",
                              "type": "string"
                            },
                            "fieldPath": {
                              "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.",
                              "type": "string"
                            },
                            "kind": {
                              "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                              "type": "string"
                            },
                            "resourceVersion": {
                              "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                              "type": "string"
                            },
                            "uid": {
                              "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "subresources": {
                "status": {}
              }
            }
          ],
          "conversion": {}
        },
        "status": {
          "conditions": [],
          "acceptedNames": {
            "plural": "basicauths",
            "singular": "basicauth",
            "kind": "BasicAuth",
            "listKind": "BasicAuthList"
          },
          "storedVersions": [
            "v1alpha1"
          ]
        }
      },
      "short": "BasicAuth",
      "apiGroup": "secretgenerator.mittwald.de",
      "apiKind": "BasicAuth",
      "apiVersion": "v1alpha1",
      "readProperties": {
        "spec": "spec",
        "status": "status"
      },
      "writeProperties": {
        "spec": "spec"
      },
      "group": "secretgenerator",
      "sub": "secretgenerator",
      "listExcludes": [],
      "readExcludes": [],
      "simpleExcludes": [],
      "gqlDefs": {
        "metadata": "metadata!",
        "spec": "JSONObject",
        "status": "JSONObject"
      },
      "namespaced": true
    },
    {
      "alternatives": [],
      "name": "de.mittwald.secretgenerator.v1alpha1.SSHKeyPair",
      "definition": {
        "properties": {
          "metadata": {
            "type": "object"
          },
          "spec": {
            "type": "object",
            "description": "SSHKeyPairSpec defines the desired state of SSHKeyPair",
            "properties": {
              "data": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "forceRegenerate": {
                "type": "boolean"
              },
              "length": {
                "type": "string"
              },
              "privateKey": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            }
          },
          "status": {
            "type": "object",
            "description": "SSHKeyPairStatus defines the observed state of SSHKeyPair",
            "properties": {
              "secret": {
                "description": "INSERT ADDITIONAL STATUS FIELD - define observed state of cluster Important: Run \"operator-sdk generate k8s\" to regenerate code after modifying this file Add custom validation using kubebuilder tags: https://book-v1.book.kubebuilder.io/beyond_basics/generating_crd.html",
                "type": "object",
                "properties": {
                  "apiVersion": {
                    "description": "API version of the referent.",
                    "type": "string"
                  },
                  "fieldPath": {
                    "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.",
                    "type": "string"
                  },
                  "kind": {
                    "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": "string"
                  },
                  "namespace": {
                    "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                    "type": "string"
                  },
                  "resourceVersion": {
                    "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                    "type": "string"
                  },
                  "uid": {
                    "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                    "type": "string"
                  }
                }
              }
            }
          },
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          }
        },
        "description": "SSHKeyPair is the Schema for the sshkeypairs API",
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "secretgenerator.mittwald.de",
            "kind": "SSHKeyPair",
            "version": "v1alpha1"
          }
        ]
      },
      "crd": {
        "metadata": {
          "name": "sshkeypairs.secretgenerator.mittwald.de"
        },
        "spec": {
          "group": "secretgenerator.mittwald.de",
          "names": {
            "plural": "sshkeypairs",
            "singular": "sshkeypair",
            "kind": "SSHKeyPair",
            "listKind": "SSHKeyPairList"
          },
          "scope": "Namespaced",
          "versions": [
            {
              "name": "v1alpha1",
              "served": true,
              "storage": true,
              "schema": {
                "openAPIV3Schema": {
                  "description": "SSHKeyPair is the Schema for the sshkeypairs API",
                  "type": "object",
                  "properties": {
                    "apiVersion": {
                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                      "type": "string"
                    },
                    "metadata": {
                      "type": "object"
                    },
                    "spec": {
                      "description": "SSHKeyPairSpec defines the desired state of SSHKeyPair",
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "forceRegenerate": {
                          "type": "boolean"
                        },
                        "length": {
                          "type": "string"
                        },
                        "privateKey": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "description": "SSHKeyPairStatus defines the observed state of SSHKeyPair",
                      "type": "object",
                      "properties": {
                        "secret": {
                          "description": "INSERT ADDITIONAL STATUS FIELD - define observed state of cluster Important: Run \"operator-sdk generate k8s\" to regenerate code after modifying this file Add custom validation using kubebuilder tags: https://book-v1.book.kubebuilder.io/beyond_basics/generating_crd.html",
                          "type": "object",
                          "properties": {
                            "apiVersion": {
                              "description": "API version of the referent.",
                              "type": "string"
                            },
                            "fieldPath": {
                              "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.",
                              "type": "string"
                            },
                            "kind": {
                              "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                              "type": "string"
                            },
                            "resourceVersion": {
                              "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                              "type": "string"
                            },
                            "uid": {
                              "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "subresources": {
                "status": {}
              }
            }
          ],
          "conversion": {}
        },
        "status": {
          "conditions": [],
          "acceptedNames": {
            "plural": "sshkeypairs",
            "singular": "sshkeypair",
            "kind": "SSHKeyPair",
            "listKind": "SSHKeyPairList"
          },
          "storedVersions": [
            "v1alpha1"
          ]
        }
      },
      "short": "SSHKeyPair",
      "apiGroup": "secretgenerator.mittwald.de",
      "apiKind": "SSHKeyPair",
      "apiVersion": "v1alpha1",
      "readProperties": {
        "spec": "spec",
        "status": "status"
      },
      "writeProperties": {
        "spec": "spec"
      },
      "group": "secretgenerator",
      "sub": "secretgenerator",
      "listExcludes": [],
      "readExcludes": [],
      "simpleExcludes": [],
      "gqlDefs": {
        "metadata": "metadata!",
        "spec": "JSONObject",
        "status": "JSONObject"
      },
      "namespaced": true
    },
    {
      "alternatives": [],
      "name": "de.mittwald.secretgenerator.v1alpha1.StringSecret",
      "definition": {
        "properties": {
          "metadata": {
            "type": "object"
          },
          "spec": {
            "type": "object",
            "description": "StringSecretSpec defines the desired state of StringSecret",
            "required": [
              "fields"
            ],
            "properties": {
              "data": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "fields": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "encoding": {
                      "type": "string"
                    },
                    "fieldName": {
                      "type": "string"
                    },
                    "length": {
                      "type": "string"
                    }
                  }
                }
              },
              "forceRegenerate": {
                "type": "boolean"
              },
              "type": {
                "type": "string"
              }
            }
          },
          "status": {
            "type": "object",
            "description": "StringSecretStatus defines the observed state of StringSecret",
            "properties": {
              "secret": {
                "description": "ObjectReference contains enough information to let you inspect or modify the referred object.",
                "type": "object",
                "properties": {
                  "apiVersion": {
                    "description": "API version of the referent.",
                    "type": "string"
                  },
                  "fieldPath": {
                    "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.",
                    "type": "string"
                  },
                  "kind": {
                    "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": "string"
                  },
                  "namespace": {
                    "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                    "type": "string"
                  },
                  "resourceVersion": {
                    "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                    "type": "string"
                  },
                  "uid": {
                    "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                    "type": "string"
                  }
                }
              }
            }
          },
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          }
        },
        "description": "StringSecret is the Schema for the stringsecrets API",
        "type": "object",
        "x-kubernetes-group-version-kind": [
          {
            "group": "secretgenerator.mittwald.de",
            "kind": "StringSecret",
            "version": "v1alpha1"
          }
        ]
      },
      "crd": {
        "metadata": {
          "name": "stringsecrets.secretgenerator.mittwald.de"
        },
        "spec": {
          "group": "secretgenerator.mittwald.de",
          "names": {
            "plural": "stringsecrets",
            "singular": "stringsecret",
            "kind": "StringSecret",
            "listKind": "StringSecretList"
          },
          "scope": "Namespaced",
          "versions": [
            {
              "name": "v1alpha1",
              "served": true,
              "storage": true,
              "schema": {
                "openAPIV3Schema": {
                  "description": "StringSecret is the Schema for the stringsecrets API",
                  "type": "object",
                  "properties": {
                    "apiVersion": {
                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                      "type": "string"
                    },
                    "metadata": {
                      "type": "object"
                    },
                    "spec": {
                      "description": "StringSecretSpec defines the desired state of StringSecret",
                      "type": "object",
                      "required": [
                        "fields"
                      ],
                      "properties": {
                        "data": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "fields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "encoding": {
                                "type": "string"
                              },
                              "fieldName": {
                                "type": "string"
                              },
                              "length": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "forceRegenerate": {
                          "type": "boolean"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "description": "StringSecretStatus defines the observed state of StringSecret",
                      "type": "object",
                      "properties": {
                        "secret": {
                          "description": "ObjectReference contains enough information to let you inspect or modify the referred object.",
                          "type": "object",
                          "properties": {
                            "apiVersion": {
                              "description": "API version of the referent.",
                              "type": "string"
                            },
                            "fieldPath": {
                              "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.",
                              "type": "string"
                            },
                            "kind": {
                              "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                              "type": "string"
                            },
                            "resourceVersion": {
                              "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                              "type": "string"
                            },
                            "uid": {
                              "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "subresources": {
                "status": {}
              }
            }
          ],
          "conversion": {}
        },
        "status": {
          "conditions": [],
          "acceptedNames": {
            "plural": "stringsecrets",
            "singular": "stringsecret",
            "kind": "StringSecret",
            "listKind": "StringSecretList"
          },
          "storedVersions": [
            "v1alpha1"
          ]
        }
      },
      "short": "StringSecret",
      "apiGroup": "secretgenerator.mittwald.de",
      "apiKind": "StringSecret",
      "apiVersion": "v1alpha1",
      "readProperties": {
        "spec": "spec",
        "status": "status"
      },
      "writeProperties": {
        "spec": "spec"
      },
      "group": "secretgenerator",
      "sub": "secretgenerator",
      "listExcludes": [],
      "readExcludes": [],
      "simpleExcludes": [],
      "gqlDefs": {
        "metadata": "metadata!",
        "spec": "JSONObject",
        "status": "JSONObject"
      },
      "namespaced": true
    }
  ]
}