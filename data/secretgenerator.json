{
  "name": "secretgenerator",
  "objects": [
    {
      "alternatives": [],
      "name": "de.mittwald.secretgenerator.v1alpha1.BasicAuth",
      "definition": {
        "description": "BasicAuth is the Schema for the basicauths API",
        "type": "object",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "spec": {
            "description": "BasicAuthSpec defines the desired state of BasicAuth",
            "type": "object",
            "required": [
              "username"
            ],
            "properties": {
              "data": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "encoding": {
                "type": "string"
              },
              "forceRegenerate": {
                "type": "boolean"
              },
              "length": {
                "type": "string"
              },
              "username": {
                "type": "string"
              }
            }
          },
          "status": {
            "description": "BasicAuthStatus defines the observed state of BasicAuth",
            "type": "object",
            "properties": {
              "secret": {
                "description": "ObjectReference contains enough information to let you inspect or modify the referred object.",
                "type": "object",
                "properties": {
                  "apiVersion": {
                    "description": "API version of the referent.",
                    "type": "string"
                  },
                  "fieldPath": {
                    "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.",
                    "type": "string"
                  },
                  "kind": {
                    "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": "string"
                  },
                  "namespace": {
                    "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                    "type": "string"
                  },
                  "resourceVersion": {
                    "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                    "type": "string"
                  },
                  "uid": {
                    "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-kubernetes-group-version-kind": [
          {
            "group": "secretgenerator.mittwald.de",
            "kind": "BasicAuth",
            "version": "v1alpha1"
          }
        ]
      },
      "crd": {
        "metadata": {
          "name": "basicauths.secretgenerator.mittwald.de",
          "uid": "f0c1f217-29a4-42ed-846f-17c613c6100c",
          "resourceVersion": "1678",
          "generation": 1,
          "creationTimestamp": "2023-06-29T06:18:07Z",
          "annotations": {
            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{},\"name\":\"basicauths.secretgenerator.mittwald.de\"},\"spec\":{\"group\":\"secretgenerator.mittwald.de\",\"names\":{\"kind\":\"BasicAuth\",\"listKind\":\"BasicAuthList\",\"plural\":\"basicauths\",\"singular\":\"basicauth\"},\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v1alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"BasicAuth is the Schema for the basicauths API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"BasicAuthSpec defines the desired state of BasicAuth\",\"properties\":{\"data\":{\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"},\"encoding\":{\"type\":\"string\"},\"forceRegenerate\":{\"type\":\"boolean\"},\"length\":{\"type\":\"string\"},\"username\":{\"type\":\"string\"}},\"required\":[\"username\"],\"type\":\"object\"},\"status\":{\"description\":\"BasicAuthStatus defines the observed state of BasicAuth\",\"properties\":{\"secret\":{\"description\":\"ObjectReference contains enough information to let you inspect or modify the referred object.\",\"properties\":{\"apiVersion\":{\"description\":\"API version of the referent.\",\"type\":\"string\"},\"fieldPath\":{\"description\":\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\",\"type\":\"string\"},\"resourceVersion\":{\"description\":\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\",\"type\":\"string\"},\"uid\":{\"description\":\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\",\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":true,\"subresources\":{\"status\":{}}}]}}\n"
          },
          "managedFields": [
            {
              "manager": "kube-apiserver",
              "operation": "Update",
              "apiVersion": "apiextensions.k8s.io/v1",
              "time": "2023-06-29T06:18:07Z",
              "fieldsType": "FieldsV1",
              "fieldsV1": {
                "f:status": {
                  "f:acceptedNames": {
                    "f:kind": {},
                    "f:listKind": {},
                    "f:plural": {},
                    "f:singular": {}
                  },
                  "f:conditions": {
                    "k:{\"type\":\"Established\"}": {
                      ".": {},
                      "f:lastTransitionTime": {},
                      "f:message": {},
                      "f:reason": {},
                      "f:status": {},
                      "f:type": {}
                    },
                    "k:{\"type\":\"NamesAccepted\"}": {
                      ".": {},
                      "f:lastTransitionTime": {},
                      "f:message": {},
                      "f:reason": {},
                      "f:status": {},
                      "f:type": {}
                    }
                  }
                }
              },
              "subresource": "status"
            },
            {
              "manager": "kubectl-client-side-apply",
              "operation": "Update",
              "apiVersion": "apiextensions.k8s.io/v1",
              "time": "2023-06-29T06:18:07Z",
              "fieldsType": "FieldsV1",
              "fieldsV1": {
                "f:metadata": {
                  "f:annotations": {
                    ".": {},
                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                  }
                },
                "f:spec": {
                  "f:conversion": {
                    ".": {},
                    "f:strategy": {}
                  },
                  "f:group": {},
                  "f:names": {
                    "f:kind": {},
                    "f:listKind": {},
                    "f:plural": {},
                    "f:singular": {}
                  },
                  "f:scope": {},
                  "f:versions": {}
                }
              }
            }
          ]
        },
        "spec": {
          "group": "secretgenerator.mittwald.de",
          "names": {
            "plural": "basicauths",
            "singular": "basicauth",
            "kind": "BasicAuth",
            "listKind": "BasicAuthList"
          },
          "scope": "Namespaced",
          "versions": [
            {
              "name": "v1alpha1",
              "served": true,
              "storage": true,
              "schema": {
                "openAPIV3Schema": {
                  "description": "BasicAuth is the Schema for the basicauths API",
                  "type": "object",
                  "properties": {
                    "apiVersion": {
                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                      "type": "string"
                    },
                    "metadata": {
                      "type": "object"
                    },
                    "spec": {
                      "description": "BasicAuthSpec defines the desired state of BasicAuth",
                      "type": "object",
                      "required": [
                        "username"
                      ],
                      "properties": {
                        "data": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "encoding": {
                          "type": "string"
                        },
                        "forceRegenerate": {
                          "type": "boolean"
                        },
                        "length": {
                          "type": "string"
                        },
                        "username": {
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "description": "BasicAuthStatus defines the observed state of BasicAuth",
                      "type": "object",
                      "properties": {
                        "secret": {
                          "description": "ObjectReference contains enough information to let you inspect or modify the referred object.",
                          "type": "object",
                          "properties": {
                            "apiVersion": {
                              "description": "API version of the referent.",
                              "type": "string"
                            },
                            "fieldPath": {
                              "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.",
                              "type": "string"
                            },
                            "kind": {
                              "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                              "type": "string"
                            },
                            "resourceVersion": {
                              "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                              "type": "string"
                            },
                            "uid": {
                              "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "subresources": {
                "status": {}
              }
            }
          ],
          "conversion": {
            "strategy": "None"
          }
        },
        "status": {
          "conditions": [
            {
              "type": "NamesAccepted",
              "status": "True",
              "lastTransitionTime": "2023-06-29T06:18:07Z",
              "reason": "NoConflicts",
              "message": "no conflicts found"
            },
            {
              "type": "Established",
              "status": "True",
              "lastTransitionTime": "2023-06-29T06:18:07Z",
              "reason": "InitialNamesAccepted",
              "message": "the initial names have been accepted"
            }
          ],
          "acceptedNames": {
            "plural": "basicauths",
            "singular": "basicauth",
            "kind": "BasicAuth",
            "listKind": "BasicAuthList"
          },
          "storedVersions": [
            "v1alpha1"
          ]
        }
      },
      "short": "BasicAuth",
      "apiGroup": "secretgenerator.mittwald.de",
      "apiKind": "BasicAuth",
      "apiVersion": "v1alpha1",
      "readProperties": [
        "spec",
        "status"
      ],
      "writeProperties": [
        "spec"
      ],
      "group": "secretgenerator",
      "sub": "secretgenerator",
      "listExcludes": [],
      "readExcludes": [],
      "simpleExcludes": [],
      "autoResolvers": [
        {
          "type": "child",
          "group": "secretgenerator",
          "short": "BasicAuth",
          "targetGroup": "k8s",
          "targetShort": "Secret",
          "algo": "k8s",
          "path": null
        }
      ],
      "resolvers": [
        {
          "group": "secretgenerator",
          "short": "BasicAuth",
          "type": "child",
          "name": "childSecret",
          "args": "(params: queryParameters)",
          "resultGroup": "k8s",
          "resultShort": "Secret",
          "result": "[k8sSecret]",
          "properties": [
            "data",
            "immutable",
            "stringData",
            "type"
          ]
        }
      ],
      "gqlDefs": {
        "metadata": "metadata!",
        "spec": "JSONObject",
        "status": "JSONObject"
      },
      "namespaced": true,
      "category": "config"
    },
    {
      "alternatives": [],
      "name": "de.mittwald.secretgenerator.v1alpha1.SSHKeyPair",
      "definition": {
        "description": "SSHKeyPair is the Schema for the sshkeypairs API",
        "type": "object",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "spec": {
            "description": "SSHKeyPairSpec defines the desired state of SSHKeyPair",
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "forceRegenerate": {
                "type": "boolean"
              },
              "length": {
                "type": "string"
              },
              "privateKey": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            }
          },
          "status": {
            "description": "SSHKeyPairStatus defines the observed state of SSHKeyPair",
            "type": "object",
            "properties": {
              "secret": {
                "description": "INSERT ADDITIONAL STATUS FIELD - define observed state of cluster Important: Run \"operator-sdk generate k8s\" to regenerate code after modifying this file Add custom validation using kubebuilder tags: https://book-v1.book.kubebuilder.io/beyond_basics/generating_crd.html",
                "type": "object",
                "properties": {
                  "apiVersion": {
                    "description": "API version of the referent.",
                    "type": "string"
                  },
                  "fieldPath": {
                    "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.",
                    "type": "string"
                  },
                  "kind": {
                    "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": "string"
                  },
                  "namespace": {
                    "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                    "type": "string"
                  },
                  "resourceVersion": {
                    "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                    "type": "string"
                  },
                  "uid": {
                    "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-kubernetes-group-version-kind": [
          {
            "group": "secretgenerator.mittwald.de",
            "kind": "SSHKeyPair",
            "version": "v1alpha1"
          }
        ]
      },
      "crd": {
        "metadata": {
          "name": "sshkeypairs.secretgenerator.mittwald.de",
          "uid": "535bcc01-0748-41d4-a076-9e2a5d8b84a7",
          "resourceVersion": "1705",
          "generation": 1,
          "creationTimestamp": "2023-06-29T06:18:08Z",
          "annotations": {
            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{},\"name\":\"sshkeypairs.secretgenerator.mittwald.de\"},\"spec\":{\"group\":\"secretgenerator.mittwald.de\",\"names\":{\"kind\":\"SSHKeyPair\",\"listKind\":\"SSHKeyPairList\",\"plural\":\"sshkeypairs\",\"singular\":\"sshkeypair\"},\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v1alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"SSHKeyPair is the Schema for the sshkeypairs API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"SSHKeyPairSpec defines the desired state of SSHKeyPair\",\"properties\":{\"data\":{\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"},\"forceRegenerate\":{\"type\":\"boolean\"},\"length\":{\"type\":\"string\"},\"privateKey\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"type\":\"object\"},\"status\":{\"description\":\"SSHKeyPairStatus defines the observed state of SSHKeyPair\",\"properties\":{\"secret\":{\"description\":\"INSERT ADDITIONAL STATUS FIELD - define observed state of cluster Important: Run \\\"operator-sdk generate k8s\\\" to regenerate code after modifying this file Add custom validation using kubebuilder tags: https://book-v1.book.kubebuilder.io/beyond_basics/generating_crd.html\",\"properties\":{\"apiVersion\":{\"description\":\"API version of the referent.\",\"type\":\"string\"},\"fieldPath\":{\"description\":\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\",\"type\":\"string\"},\"resourceVersion\":{\"description\":\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\",\"type\":\"string\"},\"uid\":{\"description\":\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\",\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":true,\"subresources\":{\"status\":{}}}]}}\n"
          },
          "managedFields": [
            {
              "manager": "kube-apiserver",
              "operation": "Update",
              "apiVersion": "apiextensions.k8s.io/v1",
              "time": "2023-06-29T06:18:08Z",
              "fieldsType": "FieldsV1",
              "fieldsV1": {
                "f:status": {
                  "f:acceptedNames": {
                    "f:kind": {},
                    "f:listKind": {},
                    "f:plural": {},
                    "f:singular": {}
                  },
                  "f:conditions": {
                    "k:{\"type\":\"Established\"}": {
                      ".": {},
                      "f:lastTransitionTime": {},
                      "f:message": {},
                      "f:reason": {},
                      "f:status": {},
                      "f:type": {}
                    },
                    "k:{\"type\":\"NamesAccepted\"}": {
                      ".": {},
                      "f:lastTransitionTime": {},
                      "f:message": {},
                      "f:reason": {},
                      "f:status": {},
                      "f:type": {}
                    }
                  }
                }
              },
              "subresource": "status"
            },
            {
              "manager": "kubectl-client-side-apply",
              "operation": "Update",
              "apiVersion": "apiextensions.k8s.io/v1",
              "time": "2023-06-29T06:18:08Z",
              "fieldsType": "FieldsV1",
              "fieldsV1": {
                "f:metadata": {
                  "f:annotations": {
                    ".": {},
                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                  }
                },
                "f:spec": {
                  "f:conversion": {
                    ".": {},
                    "f:strategy": {}
                  },
                  "f:group": {},
                  "f:names": {
                    "f:kind": {},
                    "f:listKind": {},
                    "f:plural": {},
                    "f:singular": {}
                  },
                  "f:scope": {},
                  "f:versions": {}
                }
              }
            }
          ]
        },
        "spec": {
          "group": "secretgenerator.mittwald.de",
          "names": {
            "plural": "sshkeypairs",
            "singular": "sshkeypair",
            "kind": "SSHKeyPair",
            "listKind": "SSHKeyPairList"
          },
          "scope": "Namespaced",
          "versions": [
            {
              "name": "v1alpha1",
              "served": true,
              "storage": true,
              "schema": {
                "openAPIV3Schema": {
                  "description": "SSHKeyPair is the Schema for the sshkeypairs API",
                  "type": "object",
                  "properties": {
                    "apiVersion": {
                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                      "type": "string"
                    },
                    "metadata": {
                      "type": "object"
                    },
                    "spec": {
                      "description": "SSHKeyPairSpec defines the desired state of SSHKeyPair",
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "forceRegenerate": {
                          "type": "boolean"
                        },
                        "length": {
                          "type": "string"
                        },
                        "privateKey": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "description": "SSHKeyPairStatus defines the observed state of SSHKeyPair",
                      "type": "object",
                      "properties": {
                        "secret": {
                          "description": "INSERT ADDITIONAL STATUS FIELD - define observed state of cluster Important: Run \"operator-sdk generate k8s\" to regenerate code after modifying this file Add custom validation using kubebuilder tags: https://book-v1.book.kubebuilder.io/beyond_basics/generating_crd.html",
                          "type": "object",
                          "properties": {
                            "apiVersion": {
                              "description": "API version of the referent.",
                              "type": "string"
                            },
                            "fieldPath": {
                              "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.",
                              "type": "string"
                            },
                            "kind": {
                              "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                              "type": "string"
                            },
                            "resourceVersion": {
                              "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                              "type": "string"
                            },
                            "uid": {
                              "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "subresources": {
                "status": {}
              }
            }
          ],
          "conversion": {
            "strategy": "None"
          }
        },
        "status": {
          "conditions": [
            {
              "type": "NamesAccepted",
              "status": "True",
              "lastTransitionTime": "2023-06-29T06:18:08Z",
              "reason": "NoConflicts",
              "message": "no conflicts found"
            },
            {
              "type": "Established",
              "status": "True",
              "lastTransitionTime": "2023-06-29T06:18:08Z",
              "reason": "InitialNamesAccepted",
              "message": "the initial names have been accepted"
            }
          ],
          "acceptedNames": {
            "plural": "sshkeypairs",
            "singular": "sshkeypair",
            "kind": "SSHKeyPair",
            "listKind": "SSHKeyPairList"
          },
          "storedVersions": [
            "v1alpha1"
          ]
        }
      },
      "short": "SSHKeyPair",
      "apiGroup": "secretgenerator.mittwald.de",
      "apiKind": "SSHKeyPair",
      "apiVersion": "v1alpha1",
      "readProperties": [
        "spec",
        "status"
      ],
      "writeProperties": [
        "spec"
      ],
      "group": "secretgenerator",
      "sub": "secretgenerator",
      "listExcludes": [],
      "readExcludes": [],
      "simpleExcludes": [],
      "autoResolvers": [
        {
          "type": "child",
          "group": "secretgenerator",
          "short": "SSHKeyPair",
          "targetGroup": "k8s",
          "targetShort": "Secret",
          "algo": "k8s",
          "path": null
        }
      ],
      "resolvers": [
        {
          "group": "secretgenerator",
          "short": "SSHKeyPair",
          "type": "child",
          "name": "childSecret",
          "args": "(params: queryParameters)",
          "resultGroup": "k8s",
          "resultShort": "Secret",
          "result": "[k8sSecret]",
          "properties": [
            "data",
            "immutable",
            "stringData",
            "type"
          ]
        }
      ],
      "gqlDefs": {
        "metadata": "metadata!",
        "spec": "JSONObject",
        "status": "JSONObject"
      },
      "namespaced": true,
      "category": "config"
    },
    {
      "alternatives": [],
      "name": "de.mittwald.secretgenerator.v1alpha1.StringSecret",
      "definition": {
        "description": "StringSecret is the Schema for the stringsecrets API",
        "type": "object",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
          },
          "spec": {
            "description": "StringSecretSpec defines the desired state of StringSecret",
            "type": "object",
            "required": [
              "fields"
            ],
            "properties": {
              "data": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "fields": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "encoding": {
                      "type": "string"
                    },
                    "fieldName": {
                      "type": "string"
                    },
                    "length": {
                      "type": "string"
                    }
                  }
                }
              },
              "forceRegenerate": {
                "type": "boolean"
              },
              "type": {
                "type": "string"
              }
            }
          },
          "status": {
            "description": "StringSecretStatus defines the observed state of StringSecret",
            "type": "object",
            "properties": {
              "secret": {
                "description": "ObjectReference contains enough information to let you inspect or modify the referred object.",
                "type": "object",
                "properties": {
                  "apiVersion": {
                    "description": "API version of the referent.",
                    "type": "string"
                  },
                  "fieldPath": {
                    "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.",
                    "type": "string"
                  },
                  "kind": {
                    "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": "string"
                  },
                  "namespace": {
                    "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                    "type": "string"
                  },
                  "resourceVersion": {
                    "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                    "type": "string"
                  },
                  "uid": {
                    "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-kubernetes-group-version-kind": [
          {
            "group": "secretgenerator.mittwald.de",
            "kind": "StringSecret",
            "version": "v1alpha1"
          }
        ]
      },
      "crd": {
        "metadata": {
          "name": "stringsecrets.secretgenerator.mittwald.de",
          "uid": "91597813-0b03-46bf-a0a8-9e0e4512bf99",
          "resourceVersion": "1715",
          "generation": 1,
          "creationTimestamp": "2023-06-29T06:18:08Z",
          "annotations": {
            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{},\"name\":\"stringsecrets.secretgenerator.mittwald.de\"},\"spec\":{\"group\":\"secretgenerator.mittwald.de\",\"names\":{\"kind\":\"StringSecret\",\"listKind\":\"StringSecretList\",\"plural\":\"stringsecrets\",\"singular\":\"stringsecret\"},\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v1alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"StringSecret is the Schema for the stringsecrets API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"StringSecretSpec defines the desired state of StringSecret\",\"properties\":{\"data\":{\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"},\"fields\":{\"items\":{\"properties\":{\"encoding\":{\"type\":\"string\"},\"fieldName\":{\"type\":\"string\"},\"length\":{\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"},\"forceRegenerate\":{\"type\":\"boolean\"},\"type\":{\"type\":\"string\"}},\"required\":[\"fields\"],\"type\":\"object\"},\"status\":{\"description\":\"StringSecretStatus defines the observed state of StringSecret\",\"properties\":{\"secret\":{\"description\":\"ObjectReference contains enough information to let you inspect or modify the referred object.\",\"properties\":{\"apiVersion\":{\"description\":\"API version of the referent.\",\"type\":\"string\"},\"fieldPath\":{\"description\":\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"name\":{\"description\":\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\",\"type\":\"string\"},\"namespace\":{\"description\":\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\",\"type\":\"string\"},\"resourceVersion\":{\"description\":\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\",\"type\":\"string\"},\"uid\":{\"description\":\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\",\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":true,\"subresources\":{\"status\":{}}}]}}\n"
          },
          "managedFields": [
            {
              "manager": "kube-apiserver",
              "operation": "Update",
              "apiVersion": "apiextensions.k8s.io/v1",
              "time": "2023-06-29T06:18:08Z",
              "fieldsType": "FieldsV1",
              "fieldsV1": {
                "f:status": {
                  "f:acceptedNames": {
                    "f:kind": {},
                    "f:listKind": {},
                    "f:plural": {},
                    "f:singular": {}
                  },
                  "f:conditions": {
                    "k:{\"type\":\"Established\"}": {
                      ".": {},
                      "f:lastTransitionTime": {},
                      "f:message": {},
                      "f:reason": {},
                      "f:status": {},
                      "f:type": {}
                    },
                    "k:{\"type\":\"NamesAccepted\"}": {
                      ".": {},
                      "f:lastTransitionTime": {},
                      "f:message": {},
                      "f:reason": {},
                      "f:status": {},
                      "f:type": {}
                    }
                  }
                }
              },
              "subresource": "status"
            },
            {
              "manager": "kubectl-client-side-apply",
              "operation": "Update",
              "apiVersion": "apiextensions.k8s.io/v1",
              "time": "2023-06-29T06:18:08Z",
              "fieldsType": "FieldsV1",
              "fieldsV1": {
                "f:metadata": {
                  "f:annotations": {
                    ".": {},
                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                  }
                },
                "f:spec": {
                  "f:conversion": {
                    ".": {},
                    "f:strategy": {}
                  },
                  "f:group": {},
                  "f:names": {
                    "f:kind": {},
                    "f:listKind": {},
                    "f:plural": {},
                    "f:singular": {}
                  },
                  "f:scope": {},
                  "f:versions": {}
                }
              }
            }
          ]
        },
        "spec": {
          "group": "secretgenerator.mittwald.de",
          "names": {
            "plural": "stringsecrets",
            "singular": "stringsecret",
            "kind": "StringSecret",
            "listKind": "StringSecretList"
          },
          "scope": "Namespaced",
          "versions": [
            {
              "name": "v1alpha1",
              "served": true,
              "storage": true,
              "schema": {
                "openAPIV3Schema": {
                  "description": "StringSecret is the Schema for the stringsecrets API",
                  "type": "object",
                  "properties": {
                    "apiVersion": {
                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                      "type": "string"
                    },
                    "metadata": {
                      "type": "object"
                    },
                    "spec": {
                      "description": "StringSecretSpec defines the desired state of StringSecret",
                      "type": "object",
                      "required": [
                        "fields"
                      ],
                      "properties": {
                        "data": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "fields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "encoding": {
                                "type": "string"
                              },
                              "fieldName": {
                                "type": "string"
                              },
                              "length": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "forceRegenerate": {
                          "type": "boolean"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "description": "StringSecretStatus defines the observed state of StringSecret",
                      "type": "object",
                      "properties": {
                        "secret": {
                          "description": "ObjectReference contains enough information to let you inspect or modify the referred object.",
                          "type": "object",
                          "properties": {
                            "apiVersion": {
                              "description": "API version of the referent.",
                              "type": "string"
                            },
                            "fieldPath": {
                              "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.",
                              "type": "string"
                            },
                            "kind": {
                              "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                              "type": "string"
                            },
                            "resourceVersion": {
                              "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                              "type": "string"
                            },
                            "uid": {
                              "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "subresources": {
                "status": {}
              }
            }
          ],
          "conversion": {
            "strategy": "None"
          }
        },
        "status": {
          "conditions": [
            {
              "type": "NamesAccepted",
              "status": "True",
              "lastTransitionTime": "2023-06-29T06:18:08Z",
              "reason": "NoConflicts",
              "message": "no conflicts found"
            },
            {
              "type": "Established",
              "status": "True",
              "lastTransitionTime": "2023-06-29T06:18:08Z",
              "reason": "InitialNamesAccepted",
              "message": "the initial names have been accepted"
            }
          ],
          "acceptedNames": {
            "plural": "stringsecrets",
            "singular": "stringsecret",
            "kind": "StringSecret",
            "listKind": "StringSecretList"
          },
          "storedVersions": [
            "v1alpha1"
          ]
        }
      },
      "short": "StringSecret",
      "apiGroup": "secretgenerator.mittwald.de",
      "apiKind": "StringSecret",
      "apiVersion": "v1alpha1",
      "readProperties": [
        "spec",
        "status"
      ],
      "writeProperties": [
        "spec"
      ],
      "group": "secretgenerator",
      "sub": "secretgenerator",
      "listExcludes": [],
      "readExcludes": [],
      "simpleExcludes": [],
      "autoResolvers": [
        {
          "type": "child",
          "group": "secretgenerator",
          "short": "StringSecret",
          "targetGroup": "k8s",
          "targetShort": "Secret",
          "algo": "k8s",
          "path": null
        }
      ],
      "resolvers": [
        {
          "group": "secretgenerator",
          "short": "StringSecret",
          "type": "child",
          "name": "childSecret",
          "args": "(params: queryParameters)",
          "resultGroup": "k8s",
          "resultShort": "Secret",
          "result": "[k8sSecret]",
          "properties": [
            "data",
            "immutable",
            "stringData",
            "type"
          ]
        }
      ],
      "gqlDefs": {
        "metadata": "metadata!",
        "spec": "JSONObject",
        "status": "JSONObject"
      },
      "namespaced": true,
      "category": "config"
    }
  ]
}